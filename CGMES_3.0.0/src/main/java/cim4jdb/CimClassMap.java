/*
Generated from the CGMES files via cimgen: https://github.com/sogno-platform/cimgen
*/

package cim4jdb;

import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.function.Consumer;
import java.util.function.Function;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Service;

@Service
public final class CimClassMap {

    /**
     * Checks if the class name is known as CIM class.
     *
     * @param className The class name to check.
     * @return          Is this a CIM class?
     */
    public static boolean isCimClass(String className) {
        return CREATE_MAP.containsKey(className);
    }

    /**
     * Creates a new CIM object.
     *
     * @param className The class name of the new CIM object.
     * @param rdfid     The RDF ID of the CIM object read from rdf:ID or rdf:about.
     * @return          The new CIM object.
     */
    public static BaseClass createCimObject(String className, String rdfid) {
        var createFunction = CREATE_MAP.get(className);
        return createFunction.apply(rdfid);
    }

    /**
     * Creates a new CIM object (as object of the correct class).
     *
     * @param clazz The class of the new CIM object.
     * @param rdfid The RDF ID of the CIM object read from rdf:ID or rdf:about.
     * @return      The new CIM object.
     */
    @SuppressWarnings("unchecked")
    public static <T extends BaseClass> T createCimObject(Class<T> clazz, String rdfid) {
        var className = clazz.getSimpleName();
        return (T) createCimObject(className, rdfid);
    }

    /**
     * Saves several CIM objects of the same type to the database.
     *
     * The CIM objects have to be instances of the right class corresponding to the
     * class name. The save function calls the saveAll method of the repository
     * embedded in this class.
     *
     * The save, read and delete functions couldn't be static because they use the
     * repositories as Java Beans.
     *
     * @param className The class name of the CIM objects.
     * @param objList   The list of CIM objects.
     * @return          The list of saved CIM objects.
     */
    public Iterable<BaseClass> saveCimObjects(String className, Iterable<BaseClass> objList) {
        var saveFunction = SAVE_MAP.get(className);
        return saveFunction.apply(objList);
    }

    /**
     * Saves several CIM objects of the same type to the database.
     *
     * @param clazz   The class of the CIM objects.
     * @param objList The list of CIM objects.
     * @return        The list of saved CIM objects.
     */
    @SuppressWarnings("unchecked")
    public <T extends BaseClass> Iterable<T> saveCimObjects(Class<? extends BaseClass> clazz, Iterable<T> objList) {
        var className = clazz.getSimpleName();
        return (Iterable<T>) saveCimObjects(className, (Iterable<BaseClass>) objList);
    }

    /**
     * Reads several CIM objects of the same type from the database.
     *
     * The CIM objects have to be instances of the right class corresponding to the
     * class name. The read function calls the findAllById method of the repository
     * embedded in this class.
     *
     * @param className The class name of the CIM objects.
     * @param idList    The list of IDs of the CIM objects.
     * @return          The list of read CIM objects.
     */
    public Iterable<BaseClass> readCimObjects(String className, Iterable<Long> idList) {
        var readFunction = READ_MAP.get(className);
        return readFunction.apply(idList);
    }

    /**
     * Reads several CIM objects of the same type from the database.
     *
     * @param clazz  The class of the CIM objects.
     * @param idList The list of IDs of the CIM objects.
     * @return       The list of read CIM objects.
     */
    @SuppressWarnings("unchecked")
    public <T extends BaseClass> Iterable<T> readCimObjects(Class<T> clazz, Iterable<Long> idList) {
        var className = clazz.getSimpleName();
        return (Iterable<T>) readCimObjects(className, idList);
    }

    /**
     * Deletes several CIM objects of the same type from the database.
     *
     * The CIM objects have to be instances of the right class corresponding to the
     * class name. The delete function calls the deleteAllById method of the
     * repository embedded in this class.
     *
     * @param className The class name of the CIM objects.
     * @param idList    The list of IDs of the CIM objects.
     */
    public void deleteCimObjects(String className, Iterable<Long> idList) {
        var deleteFunction = DELETE_MAP.get(className);
        deleteFunction.accept(idList);
    }

    /**
     * Deletes several CIM objects of the same type from the database.
     *
     * @param clazz  The class of the CIM objects.
     * @param idList The list of IDs of the CIM objects.
     */
    public <T extends BaseClass> void deleteCimObjects(Class<T> clazz, Iterable<Long> idList) {
        var className = clazz.getSimpleName();
        deleteCimObjects(className, idList);
    }

    /**
     * Map of CIM class name to constructor function which creates a new CIM object.
     */
    private static final Map<String, Function<String, BaseClass>> CREATE_MAP;
    static {
        var map = new LinkedHashMap<String, Function<String, BaseClass>>();

        map.put("ACDCConverter", rdfid -> new ACDCConverter(rdfid));
        map.put("ACDCConverterDCTerminal", rdfid -> new ACDCConverterDCTerminal(rdfid));
        map.put("ACDCTerminal", rdfid -> new ACDCTerminal(rdfid));
        map.put("ACLineSegment", rdfid -> new ACLineSegment(rdfid));
        map.put("Accumulator", rdfid -> new Accumulator(rdfid));
        map.put("AccumulatorLimit", rdfid -> new AccumulatorLimit(rdfid));
        map.put("AccumulatorLimitSet", rdfid -> new AccumulatorLimitSet(rdfid));
        map.put("AccumulatorReset", rdfid -> new AccumulatorReset(rdfid));
        map.put("AccumulatorValue", rdfid -> new AccumulatorValue(rdfid));
        map.put("ActivePowerLimit", rdfid -> new ActivePowerLimit(rdfid));
        map.put("Analog", rdfid -> new Analog(rdfid));
        map.put("AnalogControl", rdfid -> new AnalogControl(rdfid));
        map.put("AnalogLimit", rdfid -> new AnalogLimit(rdfid));
        map.put("AnalogLimitSet", rdfid -> new AnalogLimitSet(rdfid));
        map.put("AnalogValue", rdfid -> new AnalogValue(rdfid));
        map.put("ApparentPowerLimit", rdfid -> new ApparentPowerLimit(rdfid));
        map.put("AsynchronousMachine", rdfid -> new AsynchronousMachine(rdfid));
        map.put("AsynchronousMachineDynamics", rdfid -> new AsynchronousMachineDynamics(rdfid));
        map.put("AsynchronousMachineEquivalentCircuit", rdfid -> new AsynchronousMachineEquivalentCircuit(rdfid));
        map.put("AsynchronousMachineTimeConstantReactance", rdfid -> new AsynchronousMachineTimeConstantReactance(rdfid));
        map.put("AsynchronousMachineUserDefined", rdfid -> new AsynchronousMachineUserDefined(rdfid));
        map.put("AuxiliaryEquipment", rdfid -> new AuxiliaryEquipment(rdfid));
        map.put("BaseVoltage", rdfid -> new BaseVoltage(rdfid));
        map.put("BasicIntervalSchedule", rdfid -> new BasicIntervalSchedule(rdfid));
        map.put("BatteryUnit", rdfid -> new BatteryUnit(rdfid));
        map.put("Bay", rdfid -> new Bay(rdfid));
        map.put("BoundaryPoint", rdfid -> new BoundaryPoint(rdfid));
        map.put("Breaker", rdfid -> new Breaker(rdfid));
        map.put("BusNameMarker", rdfid -> new BusNameMarker(rdfid));
        map.put("BusbarSection", rdfid -> new BusbarSection(rdfid));
        map.put("CAESPlant", rdfid -> new CAESPlant(rdfid));
        map.put("CSCDynamics", rdfid -> new CSCDynamics(rdfid));
        map.put("CSCUserDefined", rdfid -> new CSCUserDefined(rdfid));
        map.put("Clamp", rdfid -> new Clamp(rdfid));
        map.put("CogenerationPlant", rdfid -> new CogenerationPlant(rdfid));
        map.put("CombinedCyclePlant", rdfid -> new CombinedCyclePlant(rdfid));
        map.put("Command", rdfid -> new Command(rdfid));
        map.put("ConductingEquipment", rdfid -> new ConductingEquipment(rdfid));
        map.put("Conductor", rdfid -> new Conductor(rdfid));
        map.put("ConformLoad", rdfid -> new ConformLoad(rdfid));
        map.put("ConformLoadGroup", rdfid -> new ConformLoadGroup(rdfid));
        map.put("ConformLoadSchedule", rdfid -> new ConformLoadSchedule(rdfid));
        map.put("ConnectivityNode", rdfid -> new ConnectivityNode(rdfid));
        map.put("ConnectivityNodeContainer", rdfid -> new ConnectivityNodeContainer(rdfid));
        map.put("Connector", rdfid -> new Connector(rdfid));
        map.put("Control", rdfid -> new Control(rdfid));
        map.put("ControlArea", rdfid -> new ControlArea(rdfid));
        map.put("ControlAreaGeneratingUnit", rdfid -> new ControlAreaGeneratingUnit(rdfid));
        map.put("CoordinateSystem", rdfid -> new CoordinateSystem(rdfid));
        map.put("CrossCompoundTurbineGovernorDynamics", rdfid -> new CrossCompoundTurbineGovernorDynamics(rdfid));
        map.put("CsConverter", rdfid -> new CsConverter(rdfid));
        map.put("CurrentLimit", rdfid -> new CurrentLimit(rdfid));
        map.put("CurrentTransformer", rdfid -> new CurrentTransformer(rdfid));
        map.put("Curve", rdfid -> new Curve(rdfid));
        map.put("CurveData", rdfid -> new CurveData(rdfid));
        map.put("Cut", rdfid -> new Cut(rdfid));
        map.put("DCBaseTerminal", rdfid -> new DCBaseTerminal(rdfid));
        map.put("DCBreaker", rdfid -> new DCBreaker(rdfid));
        map.put("DCBusbar", rdfid -> new DCBusbar(rdfid));
        map.put("DCChopper", rdfid -> new DCChopper(rdfid));
        map.put("DCConductingEquipment", rdfid -> new DCConductingEquipment(rdfid));
        map.put("DCConverterUnit", rdfid -> new DCConverterUnit(rdfid));
        map.put("DCDisconnector", rdfid -> new DCDisconnector(rdfid));
        map.put("DCEquipmentContainer", rdfid -> new DCEquipmentContainer(rdfid));
        map.put("DCGround", rdfid -> new DCGround(rdfid));
        map.put("DCLine", rdfid -> new DCLine(rdfid));
        map.put("DCLineSegment", rdfid -> new DCLineSegment(rdfid));
        map.put("DCNode", rdfid -> new DCNode(rdfid));
        map.put("DCSeriesDevice", rdfid -> new DCSeriesDevice(rdfid));
        map.put("DCShunt", rdfid -> new DCShunt(rdfid));
        map.put("DCSwitch", rdfid -> new DCSwitch(rdfid));
        map.put("DCTerminal", rdfid -> new DCTerminal(rdfid));
        map.put("DCTopologicalIsland", rdfid -> new DCTopologicalIsland(rdfid));
        map.put("DCTopologicalNode", rdfid -> new DCTopologicalNode(rdfid));
        map.put("DayType", rdfid -> new DayType(rdfid));
        map.put("Diagram", rdfid -> new Diagram(rdfid));
        map.put("DiagramObject", rdfid -> new DiagramObject(rdfid));
        map.put("DiagramObjectGluePoint", rdfid -> new DiagramObjectGluePoint(rdfid));
        map.put("DiagramObjectPoint", rdfid -> new DiagramObjectPoint(rdfid));
        map.put("DiagramObjectStyle", rdfid -> new DiagramObjectStyle(rdfid));
        map.put("DiagramStyle", rdfid -> new DiagramStyle(rdfid));
        map.put("DiscExcContIEEEDEC1A", rdfid -> new DiscExcContIEEEDEC1A(rdfid));
        map.put("DiscExcContIEEEDEC2A", rdfid -> new DiscExcContIEEEDEC2A(rdfid));
        map.put("DiscExcContIEEEDEC3A", rdfid -> new DiscExcContIEEEDEC3A(rdfid));
        map.put("DisconnectingCircuitBreaker", rdfid -> new DisconnectingCircuitBreaker(rdfid));
        map.put("Disconnector", rdfid -> new Disconnector(rdfid));
        map.put("DiscontinuousExcitationControlDynamics", rdfid -> new DiscontinuousExcitationControlDynamics(rdfid));
        map.put("DiscontinuousExcitationControlUserDefined", rdfid -> new DiscontinuousExcitationControlUserDefined(rdfid));
        map.put("Discrete", rdfid -> new Discrete(rdfid));
        map.put("DiscreteValue", rdfid -> new DiscreteValue(rdfid));
        map.put("DynamicsFunctionBlock", rdfid -> new DynamicsFunctionBlock(rdfid));
        map.put("EarthFaultCompensator", rdfid -> new EarthFaultCompensator(rdfid));
        map.put("EnergyArea", rdfid -> new EnergyArea(rdfid));
        map.put("EnergyConnection", rdfid -> new EnergyConnection(rdfid));
        map.put("EnergyConsumer", rdfid -> new EnergyConsumer(rdfid));
        map.put("EnergySchedulingType", rdfid -> new EnergySchedulingType(rdfid));
        map.put("EnergySource", rdfid -> new EnergySource(rdfid));
        map.put("Equipment", rdfid -> new Equipment(rdfid));
        map.put("EquipmentContainer", rdfid -> new EquipmentContainer(rdfid));
        map.put("EquivalentBranch", rdfid -> new EquivalentBranch(rdfid));
        map.put("EquivalentEquipment", rdfid -> new EquivalentEquipment(rdfid));
        map.put("EquivalentInjection", rdfid -> new EquivalentInjection(rdfid));
        map.put("EquivalentNetwork", rdfid -> new EquivalentNetwork(rdfid));
        map.put("EquivalentShunt", rdfid -> new EquivalentShunt(rdfid));
        map.put("ExcAC1A", rdfid -> new ExcAC1A(rdfid));
        map.put("ExcAC2A", rdfid -> new ExcAC2A(rdfid));
        map.put("ExcAC3A", rdfid -> new ExcAC3A(rdfid));
        map.put("ExcAC4A", rdfid -> new ExcAC4A(rdfid));
        map.put("ExcAC5A", rdfid -> new ExcAC5A(rdfid));
        map.put("ExcAC6A", rdfid -> new ExcAC6A(rdfid));
        map.put("ExcAC8B", rdfid -> new ExcAC8B(rdfid));
        map.put("ExcANS", rdfid -> new ExcANS(rdfid));
        map.put("ExcAVR1", rdfid -> new ExcAVR1(rdfid));
        map.put("ExcAVR2", rdfid -> new ExcAVR2(rdfid));
        map.put("ExcAVR3", rdfid -> new ExcAVR3(rdfid));
        map.put("ExcAVR4", rdfid -> new ExcAVR4(rdfid));
        map.put("ExcAVR5", rdfid -> new ExcAVR5(rdfid));
        map.put("ExcAVR7", rdfid -> new ExcAVR7(rdfid));
        map.put("ExcBBC", rdfid -> new ExcBBC(rdfid));
        map.put("ExcCZ", rdfid -> new ExcCZ(rdfid));
        map.put("ExcDC1A", rdfid -> new ExcDC1A(rdfid));
        map.put("ExcDC2A", rdfid -> new ExcDC2A(rdfid));
        map.put("ExcDC3A", rdfid -> new ExcDC3A(rdfid));
        map.put("ExcDC3A1", rdfid -> new ExcDC3A1(rdfid));
        map.put("ExcELIN1", rdfid -> new ExcELIN1(rdfid));
        map.put("ExcELIN2", rdfid -> new ExcELIN2(rdfid));
        map.put("ExcHU", rdfid -> new ExcHU(rdfid));
        map.put("ExcIEEEAC1A", rdfid -> new ExcIEEEAC1A(rdfid));
        map.put("ExcIEEEAC2A", rdfid -> new ExcIEEEAC2A(rdfid));
        map.put("ExcIEEEAC3A", rdfid -> new ExcIEEEAC3A(rdfid));
        map.put("ExcIEEEAC4A", rdfid -> new ExcIEEEAC4A(rdfid));
        map.put("ExcIEEEAC5A", rdfid -> new ExcIEEEAC5A(rdfid));
        map.put("ExcIEEEAC6A", rdfid -> new ExcIEEEAC6A(rdfid));
        map.put("ExcIEEEAC7B", rdfid -> new ExcIEEEAC7B(rdfid));
        map.put("ExcIEEEAC8B", rdfid -> new ExcIEEEAC8B(rdfid));
        map.put("ExcIEEEDC1A", rdfid -> new ExcIEEEDC1A(rdfid));
        map.put("ExcIEEEDC2A", rdfid -> new ExcIEEEDC2A(rdfid));
        map.put("ExcIEEEDC3A", rdfid -> new ExcIEEEDC3A(rdfid));
        map.put("ExcIEEEDC4B", rdfid -> new ExcIEEEDC4B(rdfid));
        map.put("ExcIEEEST1A", rdfid -> new ExcIEEEST1A(rdfid));
        map.put("ExcIEEEST2A", rdfid -> new ExcIEEEST2A(rdfid));
        map.put("ExcIEEEST3A", rdfid -> new ExcIEEEST3A(rdfid));
        map.put("ExcIEEEST4B", rdfid -> new ExcIEEEST4B(rdfid));
        map.put("ExcIEEEST5B", rdfid -> new ExcIEEEST5B(rdfid));
        map.put("ExcIEEEST6B", rdfid -> new ExcIEEEST6B(rdfid));
        map.put("ExcIEEEST7B", rdfid -> new ExcIEEEST7B(rdfid));
        map.put("ExcNI", rdfid -> new ExcNI(rdfid));
        map.put("ExcOEX3T", rdfid -> new ExcOEX3T(rdfid));
        map.put("ExcPIC", rdfid -> new ExcPIC(rdfid));
        map.put("ExcREXS", rdfid -> new ExcREXS(rdfid));
        map.put("ExcRQB", rdfid -> new ExcRQB(rdfid));
        map.put("ExcSCRX", rdfid -> new ExcSCRX(rdfid));
        map.put("ExcSEXS", rdfid -> new ExcSEXS(rdfid));
        map.put("ExcSK", rdfid -> new ExcSK(rdfid));
        map.put("ExcST1A", rdfid -> new ExcST1A(rdfid));
        map.put("ExcST2A", rdfid -> new ExcST2A(rdfid));
        map.put("ExcST3A", rdfid -> new ExcST3A(rdfid));
        map.put("ExcST4B", rdfid -> new ExcST4B(rdfid));
        map.put("ExcST6B", rdfid -> new ExcST6B(rdfid));
        map.put("ExcST7B", rdfid -> new ExcST7B(rdfid));
        map.put("ExcitationSystemDynamics", rdfid -> new ExcitationSystemDynamics(rdfid));
        map.put("ExcitationSystemUserDefined", rdfid -> new ExcitationSystemUserDefined(rdfid));
        map.put("ExternalNetworkInjection", rdfid -> new ExternalNetworkInjection(rdfid));
        map.put("FaultIndicator", rdfid -> new FaultIndicator(rdfid));
        map.put("FossilFuel", rdfid -> new FossilFuel(rdfid));
        map.put("Fuse", rdfid -> new Fuse(rdfid));
        map.put("GenICompensationForGenJ", rdfid -> new GenICompensationForGenJ(rdfid));
        map.put("GeneratingUnit", rdfid -> new GeneratingUnit(rdfid));
        map.put("GeographicalRegion", rdfid -> new GeographicalRegion(rdfid));
        map.put("GovCT1", rdfid -> new GovCT1(rdfid));
        map.put("GovCT2", rdfid -> new GovCT2(rdfid));
        map.put("GovGAST", rdfid -> new GovGAST(rdfid));
        map.put("GovGAST1", rdfid -> new GovGAST1(rdfid));
        map.put("GovGAST2", rdfid -> new GovGAST2(rdfid));
        map.put("GovGAST3", rdfid -> new GovGAST3(rdfid));
        map.put("GovGAST4", rdfid -> new GovGAST4(rdfid));
        map.put("GovGASTWD", rdfid -> new GovGASTWD(rdfid));
        map.put("GovHydro1", rdfid -> new GovHydro1(rdfid));
        map.put("GovHydro2", rdfid -> new GovHydro2(rdfid));
        map.put("GovHydro3", rdfid -> new GovHydro3(rdfid));
        map.put("GovHydro4", rdfid -> new GovHydro4(rdfid));
        map.put("GovHydroDD", rdfid -> new GovHydroDD(rdfid));
        map.put("GovHydroFrancis", rdfid -> new GovHydroFrancis(rdfid));
        map.put("GovHydroIEEE0", rdfid -> new GovHydroIEEE0(rdfid));
        map.put("GovHydroIEEE2", rdfid -> new GovHydroIEEE2(rdfid));
        map.put("GovHydroPID", rdfid -> new GovHydroPID(rdfid));
        map.put("GovHydroPID2", rdfid -> new GovHydroPID2(rdfid));
        map.put("GovHydroPelton", rdfid -> new GovHydroPelton(rdfid));
        map.put("GovHydroR", rdfid -> new GovHydroR(rdfid));
        map.put("GovHydroWEH", rdfid -> new GovHydroWEH(rdfid));
        map.put("GovHydroWPID", rdfid -> new GovHydroWPID(rdfid));
        map.put("GovSteam0", rdfid -> new GovSteam0(rdfid));
        map.put("GovSteam1", rdfid -> new GovSteam1(rdfid));
        map.put("GovSteam2", rdfid -> new GovSteam2(rdfid));
        map.put("GovSteamBB", rdfid -> new GovSteamBB(rdfid));
        map.put("GovSteamCC", rdfid -> new GovSteamCC(rdfid));
        map.put("GovSteamEU", rdfid -> new GovSteamEU(rdfid));
        map.put("GovSteamFV2", rdfid -> new GovSteamFV2(rdfid));
        map.put("GovSteamFV3", rdfid -> new GovSteamFV3(rdfid));
        map.put("GovSteamFV4", rdfid -> new GovSteamFV4(rdfid));
        map.put("GovSteamIEEE1", rdfid -> new GovSteamIEEE1(rdfid));
        map.put("GovSteamSGO", rdfid -> new GovSteamSGO(rdfid));
        map.put("GrossToNetActivePowerCurve", rdfid -> new GrossToNetActivePowerCurve(rdfid));
        map.put("Ground", rdfid -> new Ground(rdfid));
        map.put("GroundDisconnector", rdfid -> new GroundDisconnector(rdfid));
        map.put("GroundingImpedance", rdfid -> new GroundingImpedance(rdfid));
        map.put("HVDCDynamics", rdfid -> new HVDCDynamics(rdfid));
        map.put("HydroGeneratingUnit", rdfid -> new HydroGeneratingUnit(rdfid));
        map.put("HydroPowerPlant", rdfid -> new HydroPowerPlant(rdfid));
        map.put("HydroPump", rdfid -> new HydroPump(rdfid));
        map.put("IOPoint", rdfid -> new IOPoint(rdfid));
        map.put("IdentifiedObject", rdfid -> new IdentifiedObject(rdfid));
        map.put("Jumper", rdfid -> new Jumper(rdfid));
        map.put("Junction", rdfid -> new Junction(rdfid));
        map.put("Limit", rdfid -> new Limit(rdfid));
        map.put("LimitSet", rdfid -> new LimitSet(rdfid));
        map.put("Line", rdfid -> new Line(rdfid));
        map.put("LinearShuntCompensator", rdfid -> new LinearShuntCompensator(rdfid));
        map.put("LoadAggregate", rdfid -> new LoadAggregate(rdfid));
        map.put("LoadArea", rdfid -> new LoadArea(rdfid));
        map.put("LoadBreakSwitch", rdfid -> new LoadBreakSwitch(rdfid));
        map.put("LoadComposite", rdfid -> new LoadComposite(rdfid));
        map.put("LoadDynamics", rdfid -> new LoadDynamics(rdfid));
        map.put("LoadGenericNonLinear", rdfid -> new LoadGenericNonLinear(rdfid));
        map.put("LoadGroup", rdfid -> new LoadGroup(rdfid));
        map.put("LoadMotor", rdfid -> new LoadMotor(rdfid));
        map.put("LoadResponseCharacteristic", rdfid -> new LoadResponseCharacteristic(rdfid));
        map.put("LoadStatic", rdfid -> new LoadStatic(rdfid));
        map.put("LoadUserDefined", rdfid -> new LoadUserDefined(rdfid));
        map.put("Location", rdfid -> new Location(rdfid));
        map.put("Measurement", rdfid -> new Measurement(rdfid));
        map.put("MeasurementValue", rdfid -> new MeasurementValue(rdfid));
        map.put("MeasurementValueQuality", rdfid -> new MeasurementValueQuality(rdfid));
        map.put("MeasurementValueSource", rdfid -> new MeasurementValueSource(rdfid));
        map.put("MechLoad1", rdfid -> new MechLoad1(rdfid));
        map.put("MechanicalLoadDynamics", rdfid -> new MechanicalLoadDynamics(rdfid));
        map.put("MechanicalLoadUserDefined", rdfid -> new MechanicalLoadUserDefined(rdfid));
        map.put("MutualCoupling", rdfid -> new MutualCoupling(rdfid));
        map.put("NonConformLoad", rdfid -> new NonConformLoad(rdfid));
        map.put("NonConformLoadGroup", rdfid -> new NonConformLoadGroup(rdfid));
        map.put("NonConformLoadSchedule", rdfid -> new NonConformLoadSchedule(rdfid));
        map.put("NonlinearShuntCompensator", rdfid -> new NonlinearShuntCompensator(rdfid));
        map.put("NonlinearShuntCompensatorPoint", rdfid -> new NonlinearShuntCompensatorPoint(rdfid));
        map.put("NuclearGeneratingUnit", rdfid -> new NuclearGeneratingUnit(rdfid));
        map.put("OperationalLimit", rdfid -> new OperationalLimit(rdfid));
        map.put("OperationalLimitSet", rdfid -> new OperationalLimitSet(rdfid));
        map.put("OperationalLimitType", rdfid -> new OperationalLimitType(rdfid));
        map.put("OverexcLim2", rdfid -> new OverexcLim2(rdfid));
        map.put("OverexcLimIEEE", rdfid -> new OverexcLimIEEE(rdfid));
        map.put("OverexcLimX1", rdfid -> new OverexcLimX1(rdfid));
        map.put("OverexcLimX2", rdfid -> new OverexcLimX2(rdfid));
        map.put("OverexcitationLimiterDynamics", rdfid -> new OverexcitationLimiterDynamics(rdfid));
        map.put("OverexcitationLimiterUserDefined", rdfid -> new OverexcitationLimiterUserDefined(rdfid));
        map.put("PFVArControllerType1Dynamics", rdfid -> new PFVArControllerType1Dynamics(rdfid));
        map.put("PFVArControllerType1UserDefined", rdfid -> new PFVArControllerType1UserDefined(rdfid));
        map.put("PFVArControllerType2Dynamics", rdfid -> new PFVArControllerType2Dynamics(rdfid));
        map.put("PFVArControllerType2UserDefined", rdfid -> new PFVArControllerType2UserDefined(rdfid));
        map.put("PFVArType1IEEEPFController", rdfid -> new PFVArType1IEEEPFController(rdfid));
        map.put("PFVArType1IEEEVArController", rdfid -> new PFVArType1IEEEVArController(rdfid));
        map.put("PFVArType2Common1", rdfid -> new PFVArType2Common1(rdfid));
        map.put("PFVArType2IEEEPFController", rdfid -> new PFVArType2IEEEPFController(rdfid));
        map.put("PFVArType2IEEEVArController", rdfid -> new PFVArType2IEEEVArController(rdfid));
        map.put("PetersenCoil", rdfid -> new PetersenCoil(rdfid));
        map.put("PhaseTapChanger", rdfid -> new PhaseTapChanger(rdfid));
        map.put("PhaseTapChangerAsymmetrical", rdfid -> new PhaseTapChangerAsymmetrical(rdfid));
        map.put("PhaseTapChangerLinear", rdfid -> new PhaseTapChangerLinear(rdfid));
        map.put("PhaseTapChangerNonLinear", rdfid -> new PhaseTapChangerNonLinear(rdfid));
        map.put("PhaseTapChangerSymmetrical", rdfid -> new PhaseTapChangerSymmetrical(rdfid));
        map.put("PhaseTapChangerTable", rdfid -> new PhaseTapChangerTable(rdfid));
        map.put("PhaseTapChangerTablePoint", rdfid -> new PhaseTapChangerTablePoint(rdfid));
        map.put("PhaseTapChangerTabular", rdfid -> new PhaseTapChangerTabular(rdfid));
        map.put("PhotoVoltaicUnit", rdfid -> new PhotoVoltaicUnit(rdfid));
        map.put("PositionPoint", rdfid -> new PositionPoint(rdfid));
        map.put("PostLineSensor", rdfid -> new PostLineSensor(rdfid));
        map.put("PotentialTransformer", rdfid -> new PotentialTransformer(rdfid));
        map.put("PowerElectronicsConnection", rdfid -> new PowerElectronicsConnection(rdfid));
        map.put("PowerElectronicsUnit", rdfid -> new PowerElectronicsUnit(rdfid));
        map.put("PowerElectronicsWindUnit", rdfid -> new PowerElectronicsWindUnit(rdfid));
        map.put("PowerSystemResource", rdfid -> new PowerSystemResource(rdfid));
        map.put("PowerSystemStabilizerDynamics", rdfid -> new PowerSystemStabilizerDynamics(rdfid));
        map.put("PowerSystemStabilizerUserDefined", rdfid -> new PowerSystemStabilizerUserDefined(rdfid));
        map.put("PowerTransformer", rdfid -> new PowerTransformer(rdfid));
        map.put("PowerTransformerEnd", rdfid -> new PowerTransformerEnd(rdfid));
        map.put("ProprietaryParameterDynamics", rdfid -> new ProprietaryParameterDynamics(rdfid));
        map.put("ProtectedSwitch", rdfid -> new ProtectedSwitch(rdfid));
        map.put("Pss1", rdfid -> new Pss1(rdfid));
        map.put("Pss1A", rdfid -> new Pss1A(rdfid));
        map.put("Pss2B", rdfid -> new Pss2B(rdfid));
        map.put("Pss2ST", rdfid -> new Pss2ST(rdfid));
        map.put("Pss5", rdfid -> new Pss5(rdfid));
        map.put("PssELIN2", rdfid -> new PssELIN2(rdfid));
        map.put("PssIEEE1A", rdfid -> new PssIEEE1A(rdfid));
        map.put("PssIEEE2B", rdfid -> new PssIEEE2B(rdfid));
        map.put("PssIEEE3B", rdfid -> new PssIEEE3B(rdfid));
        map.put("PssIEEE4B", rdfid -> new PssIEEE4B(rdfid));
        map.put("PssPTIST1", rdfid -> new PssPTIST1(rdfid));
        map.put("PssPTIST3", rdfid -> new PssPTIST3(rdfid));
        map.put("PssRQB", rdfid -> new PssRQB(rdfid));
        map.put("PssSB4", rdfid -> new PssSB4(rdfid));
        map.put("PssSH", rdfid -> new PssSH(rdfid));
        map.put("PssSK", rdfid -> new PssSK(rdfid));
        map.put("PssSTAB2A", rdfid -> new PssSTAB2A(rdfid));
        map.put("PssWECC", rdfid -> new PssWECC(rdfid));
        map.put("Quality61850", rdfid -> new Quality61850(rdfid));
        map.put("RaiseLowerCommand", rdfid -> new RaiseLowerCommand(rdfid));
        map.put("RatioTapChanger", rdfid -> new RatioTapChanger(rdfid));
        map.put("RatioTapChangerTable", rdfid -> new RatioTapChangerTable(rdfid));
        map.put("RatioTapChangerTablePoint", rdfid -> new RatioTapChangerTablePoint(rdfid));
        map.put("ReactiveCapabilityCurve", rdfid -> new ReactiveCapabilityCurve(rdfid));
        map.put("RegularIntervalSchedule", rdfid -> new RegularIntervalSchedule(rdfid));
        map.put("RegularTimePoint", rdfid -> new RegularTimePoint(rdfid));
        map.put("RegulatingCondEq", rdfid -> new RegulatingCondEq(rdfid));
        map.put("RegulatingControl", rdfid -> new RegulatingControl(rdfid));
        map.put("RegulationSchedule", rdfid -> new RegulationSchedule(rdfid));
        map.put("RemoteInputSignal", rdfid -> new RemoteInputSignal(rdfid));
        map.put("ReportingGroup", rdfid -> new ReportingGroup(rdfid));
        map.put("RotatingMachine", rdfid -> new RotatingMachine(rdfid));
        map.put("RotatingMachineDynamics", rdfid -> new RotatingMachineDynamics(rdfid));
        map.put("SVCUserDefined", rdfid -> new SVCUserDefined(rdfid));
        map.put("Season", rdfid -> new Season(rdfid));
        map.put("SeasonDayTypeSchedule", rdfid -> new SeasonDayTypeSchedule(rdfid));
        map.put("Sensor", rdfid -> new Sensor(rdfid));
        map.put("SeriesCompensator", rdfid -> new SeriesCompensator(rdfid));
        map.put("ServiceLocation", rdfid -> new ServiceLocation(rdfid));
        map.put("SetPoint", rdfid -> new SetPoint(rdfid));
        map.put("ShuntCompensator", rdfid -> new ShuntCompensator(rdfid));
        map.put("SolarGeneratingUnit", rdfid -> new SolarGeneratingUnit(rdfid));
        map.put("SolarPowerPlant", rdfid -> new SolarPowerPlant(rdfid));
        map.put("StaticVarCompensator", rdfid -> new StaticVarCompensator(rdfid));
        map.put("StaticVarCompensatorDynamics", rdfid -> new StaticVarCompensatorDynamics(rdfid));
        map.put("StationSupply", rdfid -> new StationSupply(rdfid));
        map.put("Status", rdfid -> new Status(rdfid));
        map.put("StreetAddress", rdfid -> new StreetAddress(rdfid));
        map.put("StreetDetail", rdfid -> new StreetDetail(rdfid));
        map.put("StringMeasurement", rdfid -> new StringMeasurement(rdfid));
        map.put("StringMeasurementValue", rdfid -> new StringMeasurementValue(rdfid));
        map.put("SubGeographicalRegion", rdfid -> new SubGeographicalRegion(rdfid));
        map.put("SubLoadArea", rdfid -> new SubLoadArea(rdfid));
        map.put("Substation", rdfid -> new Substation(rdfid));
        map.put("SurgeArrester", rdfid -> new SurgeArrester(rdfid));
        map.put("SvInjection", rdfid -> new SvInjection(rdfid));
        map.put("SvPowerFlow", rdfid -> new SvPowerFlow(rdfid));
        map.put("SvShuntCompensatorSections", rdfid -> new SvShuntCompensatorSections(rdfid));
        map.put("SvStatus", rdfid -> new SvStatus(rdfid));
        map.put("SvSwitch", rdfid -> new SvSwitch(rdfid));
        map.put("SvTapStep", rdfid -> new SvTapStep(rdfid));
        map.put("SvVoltage", rdfid -> new SvVoltage(rdfid));
        map.put("Switch", rdfid -> new Switch(rdfid));
        map.put("SwitchSchedule", rdfid -> new SwitchSchedule(rdfid));
        map.put("SynchronousMachine", rdfid -> new SynchronousMachine(rdfid));
        map.put("SynchronousMachineDetailed", rdfid -> new SynchronousMachineDetailed(rdfid));
        map.put("SynchronousMachineDynamics", rdfid -> new SynchronousMachineDynamics(rdfid));
        map.put("SynchronousMachineEquivalentCircuit", rdfid -> new SynchronousMachineEquivalentCircuit(rdfid));
        map.put("SynchronousMachineSimplified", rdfid -> new SynchronousMachineSimplified(rdfid));
        map.put("SynchronousMachineTimeConstantReactance", rdfid -> new SynchronousMachineTimeConstantReactance(rdfid));
        map.put("SynchronousMachineUserDefined", rdfid -> new SynchronousMachineUserDefined(rdfid));
        map.put("TapChanger", rdfid -> new TapChanger(rdfid));
        map.put("TapChangerControl", rdfid -> new TapChangerControl(rdfid));
        map.put("TapChangerTablePoint", rdfid -> new TapChangerTablePoint(rdfid));
        map.put("TapSchedule", rdfid -> new TapSchedule(rdfid));
        map.put("Terminal", rdfid -> new Terminal(rdfid));
        map.put("TextDiagramObject", rdfid -> new TextDiagramObject(rdfid));
        map.put("ThermalGeneratingUnit", rdfid -> new ThermalGeneratingUnit(rdfid));
        map.put("TieFlow", rdfid -> new TieFlow(rdfid));
        map.put("TopologicalIsland", rdfid -> new TopologicalIsland(rdfid));
        map.put("TopologicalNode", rdfid -> new TopologicalNode(rdfid));
        map.put("TownDetail", rdfid -> new TownDetail(rdfid));
        map.put("TransformerEnd", rdfid -> new TransformerEnd(rdfid));
        map.put("TurbLCFB1", rdfid -> new TurbLCFB1(rdfid));
        map.put("TurbineGovernorDynamics", rdfid -> new TurbineGovernorDynamics(rdfid));
        map.put("TurbineGovernorUserDefined", rdfid -> new TurbineGovernorUserDefined(rdfid));
        map.put("TurbineLoadControllerDynamics", rdfid -> new TurbineLoadControllerDynamics(rdfid));
        map.put("TurbineLoadControllerUserDefined", rdfid -> new TurbineLoadControllerUserDefined(rdfid));
        map.put("UnderexcLim2Simplified", rdfid -> new UnderexcLim2Simplified(rdfid));
        map.put("UnderexcLimIEEE1", rdfid -> new UnderexcLimIEEE1(rdfid));
        map.put("UnderexcLimIEEE2", rdfid -> new UnderexcLimIEEE2(rdfid));
        map.put("UnderexcLimX1", rdfid -> new UnderexcLimX1(rdfid));
        map.put("UnderexcLimX2", rdfid -> new UnderexcLimX2(rdfid));
        map.put("UnderexcitationLimiterDynamics", rdfid -> new UnderexcitationLimiterDynamics(rdfid));
        map.put("UnderexcitationLimiterUserDefined", rdfid -> new UnderexcitationLimiterUserDefined(rdfid));
        map.put("VAdjIEEE", rdfid -> new VAdjIEEE(rdfid));
        map.put("VCompIEEEType1", rdfid -> new VCompIEEEType1(rdfid));
        map.put("VCompIEEEType2", rdfid -> new VCompIEEEType2(rdfid));
        map.put("VSCDynamics", rdfid -> new VSCDynamics(rdfid));
        map.put("VSCUserDefined", rdfid -> new VSCUserDefined(rdfid));
        map.put("ValueAliasSet", rdfid -> new ValueAliasSet(rdfid));
        map.put("ValueToAlias", rdfid -> new ValueToAlias(rdfid));
        map.put("VisibilityLayer", rdfid -> new VisibilityLayer(rdfid));
        map.put("VoltageAdjusterDynamics", rdfid -> new VoltageAdjusterDynamics(rdfid));
        map.put("VoltageAdjusterUserDefined", rdfid -> new VoltageAdjusterUserDefined(rdfid));
        map.put("VoltageCompensatorDynamics", rdfid -> new VoltageCompensatorDynamics(rdfid));
        map.put("VoltageCompensatorUserDefined", rdfid -> new VoltageCompensatorUserDefined(rdfid));
        map.put("VoltageLevel", rdfid -> new VoltageLevel(rdfid));
        map.put("VoltageLimit", rdfid -> new VoltageLimit(rdfid));
        map.put("VsCapabilityCurve", rdfid -> new VsCapabilityCurve(rdfid));
        map.put("VsConverter", rdfid -> new VsConverter(rdfid));
        map.put("WaveTrap", rdfid -> new WaveTrap(rdfid));
        map.put("WindAeroConstIEC", rdfid -> new WindAeroConstIEC(rdfid));
        map.put("WindAeroOneDimIEC", rdfid -> new WindAeroOneDimIEC(rdfid));
        map.put("WindAeroTwoDimIEC", rdfid -> new WindAeroTwoDimIEC(rdfid));
        map.put("WindContCurrLimIEC", rdfid -> new WindContCurrLimIEC(rdfid));
        map.put("WindContPType3IEC", rdfid -> new WindContPType3IEC(rdfid));
        map.put("WindContPType4aIEC", rdfid -> new WindContPType4aIEC(rdfid));
        map.put("WindContPType4bIEC", rdfid -> new WindContPType4bIEC(rdfid));
        map.put("WindContPitchAngleIEC", rdfid -> new WindContPitchAngleIEC(rdfid));
        map.put("WindContQIEC", rdfid -> new WindContQIEC(rdfid));
        map.put("WindContQLimIEC", rdfid -> new WindContQLimIEC(rdfid));
        map.put("WindContQPQULimIEC", rdfid -> new WindContQPQULimIEC(rdfid));
        map.put("WindContRotorRIEC", rdfid -> new WindContRotorRIEC(rdfid));
        map.put("WindDynamicsLookupTable", rdfid -> new WindDynamicsLookupTable(rdfid));
        map.put("WindGenTurbineType1aIEC", rdfid -> new WindGenTurbineType1aIEC(rdfid));
        map.put("WindGenTurbineType1bIEC", rdfid -> new WindGenTurbineType1bIEC(rdfid));
        map.put("WindGenTurbineType2IEC", rdfid -> new WindGenTurbineType2IEC(rdfid));
        map.put("WindGenType3IEC", rdfid -> new WindGenType3IEC(rdfid));
        map.put("WindGenType3aIEC", rdfid -> new WindGenType3aIEC(rdfid));
        map.put("WindGenType3bIEC", rdfid -> new WindGenType3bIEC(rdfid));
        map.put("WindGenType4IEC", rdfid -> new WindGenType4IEC(rdfid));
        map.put("WindGeneratingUnit", rdfid -> new WindGeneratingUnit(rdfid));
        map.put("WindMechIEC", rdfid -> new WindMechIEC(rdfid));
        map.put("WindPitchContPowerIEC", rdfid -> new WindPitchContPowerIEC(rdfid));
        map.put("WindPlantDynamics", rdfid -> new WindPlantDynamics(rdfid));
        map.put("WindPlantFreqPcontrolIEC", rdfid -> new WindPlantFreqPcontrolIEC(rdfid));
        map.put("WindPlantIEC", rdfid -> new WindPlantIEC(rdfid));
        map.put("WindPlantReactiveControlIEC", rdfid -> new WindPlantReactiveControlIEC(rdfid));
        map.put("WindPlantUserDefined", rdfid -> new WindPlantUserDefined(rdfid));
        map.put("WindPowerPlant", rdfid -> new WindPowerPlant(rdfid));
        map.put("WindProtectionIEC", rdfid -> new WindProtectionIEC(rdfid));
        map.put("WindRefFrameRotIEC", rdfid -> new WindRefFrameRotIEC(rdfid));
        map.put("WindTurbineType1or2Dynamics", rdfid -> new WindTurbineType1or2Dynamics(rdfid));
        map.put("WindTurbineType1or2IEC", rdfid -> new WindTurbineType1or2IEC(rdfid));
        map.put("WindTurbineType3IEC", rdfid -> new WindTurbineType3IEC(rdfid));
        map.put("WindTurbineType3or4Dynamics", rdfid -> new WindTurbineType3or4Dynamics(rdfid));
        map.put("WindTurbineType3or4IEC", rdfid -> new WindTurbineType3or4IEC(rdfid));
        map.put("WindTurbineType4IEC", rdfid -> new WindTurbineType4IEC(rdfid));
        map.put("WindTurbineType4aIEC", rdfid -> new WindTurbineType4aIEC(rdfid));
        map.put("WindTurbineType4bIEC", rdfid -> new WindTurbineType4bIEC(rdfid));
        map.put("WindType1or2UserDefined", rdfid -> new WindType1or2UserDefined(rdfid));
        map.put("WindType3or4UserDefined", rdfid -> new WindType3or4UserDefined(rdfid));
        map.put("WorkLocation", rdfid -> new WorkLocation(rdfid));

        CREATE_MAP = Collections.unmodifiableMap(map);
    }

    /**
     * Repositories used to save and read CIM objects to/from the database.
     */
    @Autowired private ACDCConverter.Repository repoACDCConverter;
    @Autowired private ACDCConverterDCTerminal.Repository repoACDCConverterDCTerminal;
    @Autowired private ACDCTerminal.Repository repoACDCTerminal;
    @Autowired private ACLineSegment.Repository repoACLineSegment;
    @Autowired private Accumulator.Repository repoAccumulator;
    @Autowired private AccumulatorLimit.Repository repoAccumulatorLimit;
    @Autowired private AccumulatorLimitSet.Repository repoAccumulatorLimitSet;
    @Autowired private AccumulatorReset.Repository repoAccumulatorReset;
    @Autowired private AccumulatorValue.Repository repoAccumulatorValue;
    @Autowired private ActivePowerLimit.Repository repoActivePowerLimit;
    @Autowired private Analog.Repository repoAnalog;
    @Autowired private AnalogControl.Repository repoAnalogControl;
    @Autowired private AnalogLimit.Repository repoAnalogLimit;
    @Autowired private AnalogLimitSet.Repository repoAnalogLimitSet;
    @Autowired private AnalogValue.Repository repoAnalogValue;
    @Autowired private ApparentPowerLimit.Repository repoApparentPowerLimit;
    @Autowired private AsynchronousMachine.Repository repoAsynchronousMachine;
    @Autowired private AsynchronousMachineDynamics.Repository repoAsynchronousMachineDynamics;
    @Autowired private AsynchronousMachineEquivalentCircuit.Repository repoAsynchronousMachineEquivalentCircuit;
    @Autowired private AsynchronousMachineTimeConstantReactance.Repository repoAsynchronousMachineTimeConstantReactance;
    @Autowired private AsynchronousMachineUserDefined.Repository repoAsynchronousMachineUserDefined;
    @Autowired private AuxiliaryEquipment.Repository repoAuxiliaryEquipment;
    @Autowired private BaseVoltage.Repository repoBaseVoltage;
    @Autowired private BasicIntervalSchedule.Repository repoBasicIntervalSchedule;
    @Autowired private BatteryUnit.Repository repoBatteryUnit;
    @Autowired private Bay.Repository repoBay;
    @Autowired private BoundaryPoint.Repository repoBoundaryPoint;
    @Autowired private Breaker.Repository repoBreaker;
    @Autowired private BusNameMarker.Repository repoBusNameMarker;
    @Autowired private BusbarSection.Repository repoBusbarSection;
    @Autowired private CAESPlant.Repository repoCAESPlant;
    @Autowired private CSCDynamics.Repository repoCSCDynamics;
    @Autowired private CSCUserDefined.Repository repoCSCUserDefined;
    @Autowired private Clamp.Repository repoClamp;
    @Autowired private CogenerationPlant.Repository repoCogenerationPlant;
    @Autowired private CombinedCyclePlant.Repository repoCombinedCyclePlant;
    @Autowired private Command.Repository repoCommand;
    @Autowired private ConductingEquipment.Repository repoConductingEquipment;
    @Autowired private Conductor.Repository repoConductor;
    @Autowired private ConformLoad.Repository repoConformLoad;
    @Autowired private ConformLoadGroup.Repository repoConformLoadGroup;
    @Autowired private ConformLoadSchedule.Repository repoConformLoadSchedule;
    @Autowired private ConnectivityNode.Repository repoConnectivityNode;
    @Autowired private ConnectivityNodeContainer.Repository repoConnectivityNodeContainer;
    @Autowired private Connector.Repository repoConnector;
    @Autowired private Control.Repository repoControl;
    @Autowired private ControlArea.Repository repoControlArea;
    @Autowired private ControlAreaGeneratingUnit.Repository repoControlAreaGeneratingUnit;
    @Autowired private CoordinateSystem.Repository repoCoordinateSystem;
    @Autowired private CrossCompoundTurbineGovernorDynamics.Repository repoCrossCompoundTurbineGovernorDynamics;
    @Autowired private CsConverter.Repository repoCsConverter;
    @Autowired private CurrentLimit.Repository repoCurrentLimit;
    @Autowired private CurrentTransformer.Repository repoCurrentTransformer;
    @Autowired private Curve.Repository repoCurve;
    @Autowired private CurveData.Repository repoCurveData;
    @Autowired private Cut.Repository repoCut;
    @Autowired private DCBaseTerminal.Repository repoDCBaseTerminal;
    @Autowired private DCBreaker.Repository repoDCBreaker;
    @Autowired private DCBusbar.Repository repoDCBusbar;
    @Autowired private DCChopper.Repository repoDCChopper;
    @Autowired private DCConductingEquipment.Repository repoDCConductingEquipment;
    @Autowired private DCConverterUnit.Repository repoDCConverterUnit;
    @Autowired private DCDisconnector.Repository repoDCDisconnector;
    @Autowired private DCEquipmentContainer.Repository repoDCEquipmentContainer;
    @Autowired private DCGround.Repository repoDCGround;
    @Autowired private DCLine.Repository repoDCLine;
    @Autowired private DCLineSegment.Repository repoDCLineSegment;
    @Autowired private DCNode.Repository repoDCNode;
    @Autowired private DCSeriesDevice.Repository repoDCSeriesDevice;
    @Autowired private DCShunt.Repository repoDCShunt;
    @Autowired private DCSwitch.Repository repoDCSwitch;
    @Autowired private DCTerminal.Repository repoDCTerminal;
    @Autowired private DCTopologicalIsland.Repository repoDCTopologicalIsland;
    @Autowired private DCTopologicalNode.Repository repoDCTopologicalNode;
    @Autowired private DayType.Repository repoDayType;
    @Autowired private Diagram.Repository repoDiagram;
    @Autowired private DiagramObject.Repository repoDiagramObject;
    @Autowired private DiagramObjectGluePoint.Repository repoDiagramObjectGluePoint;
    @Autowired private DiagramObjectPoint.Repository repoDiagramObjectPoint;
    @Autowired private DiagramObjectStyle.Repository repoDiagramObjectStyle;
    @Autowired private DiagramStyle.Repository repoDiagramStyle;
    @Autowired private DiscExcContIEEEDEC1A.Repository repoDiscExcContIEEEDEC1A;
    @Autowired private DiscExcContIEEEDEC2A.Repository repoDiscExcContIEEEDEC2A;
    @Autowired private DiscExcContIEEEDEC3A.Repository repoDiscExcContIEEEDEC3A;
    @Autowired private DisconnectingCircuitBreaker.Repository repoDisconnectingCircuitBreaker;
    @Autowired private Disconnector.Repository repoDisconnector;
    @Autowired private DiscontinuousExcitationControlDynamics.Repository repoDiscontinuousExcitationControlDynamics;
    @Autowired private DiscontinuousExcitationControlUserDefined.Repository repoDiscontinuousExcitationControlUserDefined;
    @Autowired private Discrete.Repository repoDiscrete;
    @Autowired private DiscreteValue.Repository repoDiscreteValue;
    @Autowired private DynamicsFunctionBlock.Repository repoDynamicsFunctionBlock;
    @Autowired private EarthFaultCompensator.Repository repoEarthFaultCompensator;
    @Autowired private EnergyArea.Repository repoEnergyArea;
    @Autowired private EnergyConnection.Repository repoEnergyConnection;
    @Autowired private EnergyConsumer.Repository repoEnergyConsumer;
    @Autowired private EnergySchedulingType.Repository repoEnergySchedulingType;
    @Autowired private EnergySource.Repository repoEnergySource;
    @Autowired private Equipment.Repository repoEquipment;
    @Autowired private EquipmentContainer.Repository repoEquipmentContainer;
    @Autowired private EquivalentBranch.Repository repoEquivalentBranch;
    @Autowired private EquivalentEquipment.Repository repoEquivalentEquipment;
    @Autowired private EquivalentInjection.Repository repoEquivalentInjection;
    @Autowired private EquivalentNetwork.Repository repoEquivalentNetwork;
    @Autowired private EquivalentShunt.Repository repoEquivalentShunt;
    @Autowired private ExcAC1A.Repository repoExcAC1A;
    @Autowired private ExcAC2A.Repository repoExcAC2A;
    @Autowired private ExcAC3A.Repository repoExcAC3A;
    @Autowired private ExcAC4A.Repository repoExcAC4A;
    @Autowired private ExcAC5A.Repository repoExcAC5A;
    @Autowired private ExcAC6A.Repository repoExcAC6A;
    @Autowired private ExcAC8B.Repository repoExcAC8B;
    @Autowired private ExcANS.Repository repoExcANS;
    @Autowired private ExcAVR1.Repository repoExcAVR1;
    @Autowired private ExcAVR2.Repository repoExcAVR2;
    @Autowired private ExcAVR3.Repository repoExcAVR3;
    @Autowired private ExcAVR4.Repository repoExcAVR4;
    @Autowired private ExcAVR5.Repository repoExcAVR5;
    @Autowired private ExcAVR7.Repository repoExcAVR7;
    @Autowired private ExcBBC.Repository repoExcBBC;
    @Autowired private ExcCZ.Repository repoExcCZ;
    @Autowired private ExcDC1A.Repository repoExcDC1A;
    @Autowired private ExcDC2A.Repository repoExcDC2A;
    @Autowired private ExcDC3A.Repository repoExcDC3A;
    @Autowired private ExcDC3A1.Repository repoExcDC3A1;
    @Autowired private ExcELIN1.Repository repoExcELIN1;
    @Autowired private ExcELIN2.Repository repoExcELIN2;
    @Autowired private ExcHU.Repository repoExcHU;
    @Autowired private ExcIEEEAC1A.Repository repoExcIEEEAC1A;
    @Autowired private ExcIEEEAC2A.Repository repoExcIEEEAC2A;
    @Autowired private ExcIEEEAC3A.Repository repoExcIEEEAC3A;
    @Autowired private ExcIEEEAC4A.Repository repoExcIEEEAC4A;
    @Autowired private ExcIEEEAC5A.Repository repoExcIEEEAC5A;
    @Autowired private ExcIEEEAC6A.Repository repoExcIEEEAC6A;
    @Autowired private ExcIEEEAC7B.Repository repoExcIEEEAC7B;
    @Autowired private ExcIEEEAC8B.Repository repoExcIEEEAC8B;
    @Autowired private ExcIEEEDC1A.Repository repoExcIEEEDC1A;
    @Autowired private ExcIEEEDC2A.Repository repoExcIEEEDC2A;
    @Autowired private ExcIEEEDC3A.Repository repoExcIEEEDC3A;
    @Autowired private ExcIEEEDC4B.Repository repoExcIEEEDC4B;
    @Autowired private ExcIEEEST1A.Repository repoExcIEEEST1A;
    @Autowired private ExcIEEEST2A.Repository repoExcIEEEST2A;
    @Autowired private ExcIEEEST3A.Repository repoExcIEEEST3A;
    @Autowired private ExcIEEEST4B.Repository repoExcIEEEST4B;
    @Autowired private ExcIEEEST5B.Repository repoExcIEEEST5B;
    @Autowired private ExcIEEEST6B.Repository repoExcIEEEST6B;
    @Autowired private ExcIEEEST7B.Repository repoExcIEEEST7B;
    @Autowired private ExcNI.Repository repoExcNI;
    @Autowired private ExcOEX3T.Repository repoExcOEX3T;
    @Autowired private ExcPIC.Repository repoExcPIC;
    @Autowired private ExcREXS.Repository repoExcREXS;
    @Autowired private ExcRQB.Repository repoExcRQB;
    @Autowired private ExcSCRX.Repository repoExcSCRX;
    @Autowired private ExcSEXS.Repository repoExcSEXS;
    @Autowired private ExcSK.Repository repoExcSK;
    @Autowired private ExcST1A.Repository repoExcST1A;
    @Autowired private ExcST2A.Repository repoExcST2A;
    @Autowired private ExcST3A.Repository repoExcST3A;
    @Autowired private ExcST4B.Repository repoExcST4B;
    @Autowired private ExcST6B.Repository repoExcST6B;
    @Autowired private ExcST7B.Repository repoExcST7B;
    @Autowired private ExcitationSystemDynamics.Repository repoExcitationSystemDynamics;
    @Autowired private ExcitationSystemUserDefined.Repository repoExcitationSystemUserDefined;
    @Autowired private ExternalNetworkInjection.Repository repoExternalNetworkInjection;
    @Autowired private FaultIndicator.Repository repoFaultIndicator;
    @Autowired private FossilFuel.Repository repoFossilFuel;
    @Autowired private Fuse.Repository repoFuse;
    @Autowired private GenICompensationForGenJ.Repository repoGenICompensationForGenJ;
    @Autowired private GeneratingUnit.Repository repoGeneratingUnit;
    @Autowired private GeographicalRegion.Repository repoGeographicalRegion;
    @Autowired private GovCT1.Repository repoGovCT1;
    @Autowired private GovCT2.Repository repoGovCT2;
    @Autowired private GovGAST.Repository repoGovGAST;
    @Autowired private GovGAST1.Repository repoGovGAST1;
    @Autowired private GovGAST2.Repository repoGovGAST2;
    @Autowired private GovGAST3.Repository repoGovGAST3;
    @Autowired private GovGAST4.Repository repoGovGAST4;
    @Autowired private GovGASTWD.Repository repoGovGASTWD;
    @Autowired private GovHydro1.Repository repoGovHydro1;
    @Autowired private GovHydro2.Repository repoGovHydro2;
    @Autowired private GovHydro3.Repository repoGovHydro3;
    @Autowired private GovHydro4.Repository repoGovHydro4;
    @Autowired private GovHydroDD.Repository repoGovHydroDD;
    @Autowired private GovHydroFrancis.Repository repoGovHydroFrancis;
    @Autowired private GovHydroIEEE0.Repository repoGovHydroIEEE0;
    @Autowired private GovHydroIEEE2.Repository repoGovHydroIEEE2;
    @Autowired private GovHydroPID.Repository repoGovHydroPID;
    @Autowired private GovHydroPID2.Repository repoGovHydroPID2;
    @Autowired private GovHydroPelton.Repository repoGovHydroPelton;
    @Autowired private GovHydroR.Repository repoGovHydroR;
    @Autowired private GovHydroWEH.Repository repoGovHydroWEH;
    @Autowired private GovHydroWPID.Repository repoGovHydroWPID;
    @Autowired private GovSteam0.Repository repoGovSteam0;
    @Autowired private GovSteam1.Repository repoGovSteam1;
    @Autowired private GovSteam2.Repository repoGovSteam2;
    @Autowired private GovSteamBB.Repository repoGovSteamBB;
    @Autowired private GovSteamCC.Repository repoGovSteamCC;
    @Autowired private GovSteamEU.Repository repoGovSteamEU;
    @Autowired private GovSteamFV2.Repository repoGovSteamFV2;
    @Autowired private GovSteamFV3.Repository repoGovSteamFV3;
    @Autowired private GovSteamFV4.Repository repoGovSteamFV4;
    @Autowired private GovSteamIEEE1.Repository repoGovSteamIEEE1;
    @Autowired private GovSteamSGO.Repository repoGovSteamSGO;
    @Autowired private GrossToNetActivePowerCurve.Repository repoGrossToNetActivePowerCurve;
    @Autowired private Ground.Repository repoGround;
    @Autowired private GroundDisconnector.Repository repoGroundDisconnector;
    @Autowired private GroundingImpedance.Repository repoGroundingImpedance;
    @Autowired private HVDCDynamics.Repository repoHVDCDynamics;
    @Autowired private HydroGeneratingUnit.Repository repoHydroGeneratingUnit;
    @Autowired private HydroPowerPlant.Repository repoHydroPowerPlant;
    @Autowired private HydroPump.Repository repoHydroPump;
    @Autowired private IOPoint.Repository repoIOPoint;
    @Autowired private IdentifiedObject.Repository repoIdentifiedObject;
    @Autowired private Jumper.Repository repoJumper;
    @Autowired private Junction.Repository repoJunction;
    @Autowired private Limit.Repository repoLimit;
    @Autowired private LimitSet.Repository repoLimitSet;
    @Autowired private Line.Repository repoLine;
    @Autowired private LinearShuntCompensator.Repository repoLinearShuntCompensator;
    @Autowired private LoadAggregate.Repository repoLoadAggregate;
    @Autowired private LoadArea.Repository repoLoadArea;
    @Autowired private LoadBreakSwitch.Repository repoLoadBreakSwitch;
    @Autowired private LoadComposite.Repository repoLoadComposite;
    @Autowired private LoadDynamics.Repository repoLoadDynamics;
    @Autowired private LoadGenericNonLinear.Repository repoLoadGenericNonLinear;
    @Autowired private LoadGroup.Repository repoLoadGroup;
    @Autowired private LoadMotor.Repository repoLoadMotor;
    @Autowired private LoadResponseCharacteristic.Repository repoLoadResponseCharacteristic;
    @Autowired private LoadStatic.Repository repoLoadStatic;
    @Autowired private LoadUserDefined.Repository repoLoadUserDefined;
    @Autowired private Location.Repository repoLocation;
    @Autowired private Measurement.Repository repoMeasurement;
    @Autowired private MeasurementValue.Repository repoMeasurementValue;
    @Autowired private MeasurementValueQuality.Repository repoMeasurementValueQuality;
    @Autowired private MeasurementValueSource.Repository repoMeasurementValueSource;
    @Autowired private MechLoad1.Repository repoMechLoad1;
    @Autowired private MechanicalLoadDynamics.Repository repoMechanicalLoadDynamics;
    @Autowired private MechanicalLoadUserDefined.Repository repoMechanicalLoadUserDefined;
    @Autowired private MutualCoupling.Repository repoMutualCoupling;
    @Autowired private NonConformLoad.Repository repoNonConformLoad;
    @Autowired private NonConformLoadGroup.Repository repoNonConformLoadGroup;
    @Autowired private NonConformLoadSchedule.Repository repoNonConformLoadSchedule;
    @Autowired private NonlinearShuntCompensator.Repository repoNonlinearShuntCompensator;
    @Autowired private NonlinearShuntCompensatorPoint.Repository repoNonlinearShuntCompensatorPoint;
    @Autowired private NuclearGeneratingUnit.Repository repoNuclearGeneratingUnit;
    @Autowired private OperationalLimit.Repository repoOperationalLimit;
    @Autowired private OperationalLimitSet.Repository repoOperationalLimitSet;
    @Autowired private OperationalLimitType.Repository repoOperationalLimitType;
    @Autowired private OverexcLim2.Repository repoOverexcLim2;
    @Autowired private OverexcLimIEEE.Repository repoOverexcLimIEEE;
    @Autowired private OverexcLimX1.Repository repoOverexcLimX1;
    @Autowired private OverexcLimX2.Repository repoOverexcLimX2;
    @Autowired private OverexcitationLimiterDynamics.Repository repoOverexcitationLimiterDynamics;
    @Autowired private OverexcitationLimiterUserDefined.Repository repoOverexcitationLimiterUserDefined;
    @Autowired private PFVArControllerType1Dynamics.Repository repoPFVArControllerType1Dynamics;
    @Autowired private PFVArControllerType1UserDefined.Repository repoPFVArControllerType1UserDefined;
    @Autowired private PFVArControllerType2Dynamics.Repository repoPFVArControllerType2Dynamics;
    @Autowired private PFVArControllerType2UserDefined.Repository repoPFVArControllerType2UserDefined;
    @Autowired private PFVArType1IEEEPFController.Repository repoPFVArType1IEEEPFController;
    @Autowired private PFVArType1IEEEVArController.Repository repoPFVArType1IEEEVArController;
    @Autowired private PFVArType2Common1.Repository repoPFVArType2Common1;
    @Autowired private PFVArType2IEEEPFController.Repository repoPFVArType2IEEEPFController;
    @Autowired private PFVArType2IEEEVArController.Repository repoPFVArType2IEEEVArController;
    @Autowired private PetersenCoil.Repository repoPetersenCoil;
    @Autowired private PhaseTapChanger.Repository repoPhaseTapChanger;
    @Autowired private PhaseTapChangerAsymmetrical.Repository repoPhaseTapChangerAsymmetrical;
    @Autowired private PhaseTapChangerLinear.Repository repoPhaseTapChangerLinear;
    @Autowired private PhaseTapChangerNonLinear.Repository repoPhaseTapChangerNonLinear;
    @Autowired private PhaseTapChangerSymmetrical.Repository repoPhaseTapChangerSymmetrical;
    @Autowired private PhaseTapChangerTable.Repository repoPhaseTapChangerTable;
    @Autowired private PhaseTapChangerTablePoint.Repository repoPhaseTapChangerTablePoint;
    @Autowired private PhaseTapChangerTabular.Repository repoPhaseTapChangerTabular;
    @Autowired private PhotoVoltaicUnit.Repository repoPhotoVoltaicUnit;
    @Autowired private PositionPoint.Repository repoPositionPoint;
    @Autowired private PostLineSensor.Repository repoPostLineSensor;
    @Autowired private PotentialTransformer.Repository repoPotentialTransformer;
    @Autowired private PowerElectronicsConnection.Repository repoPowerElectronicsConnection;
    @Autowired private PowerElectronicsUnit.Repository repoPowerElectronicsUnit;
    @Autowired private PowerElectronicsWindUnit.Repository repoPowerElectronicsWindUnit;
    @Autowired private PowerSystemResource.Repository repoPowerSystemResource;
    @Autowired private PowerSystemStabilizerDynamics.Repository repoPowerSystemStabilizerDynamics;
    @Autowired private PowerSystemStabilizerUserDefined.Repository repoPowerSystemStabilizerUserDefined;
    @Autowired private PowerTransformer.Repository repoPowerTransformer;
    @Autowired private PowerTransformerEnd.Repository repoPowerTransformerEnd;
    @Autowired private ProprietaryParameterDynamics.Repository repoProprietaryParameterDynamics;
    @Autowired private ProtectedSwitch.Repository repoProtectedSwitch;
    @Autowired private Pss1.Repository repoPss1;
    @Autowired private Pss1A.Repository repoPss1A;
    @Autowired private Pss2B.Repository repoPss2B;
    @Autowired private Pss2ST.Repository repoPss2ST;
    @Autowired private Pss5.Repository repoPss5;
    @Autowired private PssELIN2.Repository repoPssELIN2;
    @Autowired private PssIEEE1A.Repository repoPssIEEE1A;
    @Autowired private PssIEEE2B.Repository repoPssIEEE2B;
    @Autowired private PssIEEE3B.Repository repoPssIEEE3B;
    @Autowired private PssIEEE4B.Repository repoPssIEEE4B;
    @Autowired private PssPTIST1.Repository repoPssPTIST1;
    @Autowired private PssPTIST3.Repository repoPssPTIST3;
    @Autowired private PssRQB.Repository repoPssRQB;
    @Autowired private PssSB4.Repository repoPssSB4;
    @Autowired private PssSH.Repository repoPssSH;
    @Autowired private PssSK.Repository repoPssSK;
    @Autowired private PssSTAB2A.Repository repoPssSTAB2A;
    @Autowired private PssWECC.Repository repoPssWECC;
    @Autowired private Quality61850.Repository repoQuality61850;
    @Autowired private RaiseLowerCommand.Repository repoRaiseLowerCommand;
    @Autowired private RatioTapChanger.Repository repoRatioTapChanger;
    @Autowired private RatioTapChangerTable.Repository repoRatioTapChangerTable;
    @Autowired private RatioTapChangerTablePoint.Repository repoRatioTapChangerTablePoint;
    @Autowired private ReactiveCapabilityCurve.Repository repoReactiveCapabilityCurve;
    @Autowired private RegularIntervalSchedule.Repository repoRegularIntervalSchedule;
    @Autowired private RegularTimePoint.Repository repoRegularTimePoint;
    @Autowired private RegulatingCondEq.Repository repoRegulatingCondEq;
    @Autowired private RegulatingControl.Repository repoRegulatingControl;
    @Autowired private RegulationSchedule.Repository repoRegulationSchedule;
    @Autowired private RemoteInputSignal.Repository repoRemoteInputSignal;
    @Autowired private ReportingGroup.Repository repoReportingGroup;
    @Autowired private RotatingMachine.Repository repoRotatingMachine;
    @Autowired private RotatingMachineDynamics.Repository repoRotatingMachineDynamics;
    @Autowired private SVCUserDefined.Repository repoSVCUserDefined;
    @Autowired private Season.Repository repoSeason;
    @Autowired private SeasonDayTypeSchedule.Repository repoSeasonDayTypeSchedule;
    @Autowired private Sensor.Repository repoSensor;
    @Autowired private SeriesCompensator.Repository repoSeriesCompensator;
    @Autowired private ServiceLocation.Repository repoServiceLocation;
    @Autowired private SetPoint.Repository repoSetPoint;
    @Autowired private ShuntCompensator.Repository repoShuntCompensator;
    @Autowired private SolarGeneratingUnit.Repository repoSolarGeneratingUnit;
    @Autowired private SolarPowerPlant.Repository repoSolarPowerPlant;
    @Autowired private StaticVarCompensator.Repository repoStaticVarCompensator;
    @Autowired private StaticVarCompensatorDynamics.Repository repoStaticVarCompensatorDynamics;
    @Autowired private StationSupply.Repository repoStationSupply;
    @Autowired private Status.Repository repoStatus;
    @Autowired private StreetAddress.Repository repoStreetAddress;
    @Autowired private StreetDetail.Repository repoStreetDetail;
    @Autowired private StringMeasurement.Repository repoStringMeasurement;
    @Autowired private StringMeasurementValue.Repository repoStringMeasurementValue;
    @Autowired private SubGeographicalRegion.Repository repoSubGeographicalRegion;
    @Autowired private SubLoadArea.Repository repoSubLoadArea;
    @Autowired private Substation.Repository repoSubstation;
    @Autowired private SurgeArrester.Repository repoSurgeArrester;
    @Autowired private SvInjection.Repository repoSvInjection;
    @Autowired private SvPowerFlow.Repository repoSvPowerFlow;
    @Autowired private SvShuntCompensatorSections.Repository repoSvShuntCompensatorSections;
    @Autowired private SvStatus.Repository repoSvStatus;
    @Autowired private SvSwitch.Repository repoSvSwitch;
    @Autowired private SvTapStep.Repository repoSvTapStep;
    @Autowired private SvVoltage.Repository repoSvVoltage;
    @Autowired private Switch.Repository repoSwitch;
    @Autowired private SwitchSchedule.Repository repoSwitchSchedule;
    @Autowired private SynchronousMachine.Repository repoSynchronousMachine;
    @Autowired private SynchronousMachineDetailed.Repository repoSynchronousMachineDetailed;
    @Autowired private SynchronousMachineDynamics.Repository repoSynchronousMachineDynamics;
    @Autowired private SynchronousMachineEquivalentCircuit.Repository repoSynchronousMachineEquivalentCircuit;
    @Autowired private SynchronousMachineSimplified.Repository repoSynchronousMachineSimplified;
    @Autowired private SynchronousMachineTimeConstantReactance.Repository repoSynchronousMachineTimeConstantReactance;
    @Autowired private SynchronousMachineUserDefined.Repository repoSynchronousMachineUserDefined;
    @Autowired private TapChanger.Repository repoTapChanger;
    @Autowired private TapChangerControl.Repository repoTapChangerControl;
    @Autowired private TapChangerTablePoint.Repository repoTapChangerTablePoint;
    @Autowired private TapSchedule.Repository repoTapSchedule;
    @Autowired private Terminal.Repository repoTerminal;
    @Autowired private TextDiagramObject.Repository repoTextDiagramObject;
    @Autowired private ThermalGeneratingUnit.Repository repoThermalGeneratingUnit;
    @Autowired private TieFlow.Repository repoTieFlow;
    @Autowired private TopologicalIsland.Repository repoTopologicalIsland;
    @Autowired private TopologicalNode.Repository repoTopologicalNode;
    @Autowired private TownDetail.Repository repoTownDetail;
    @Autowired private TransformerEnd.Repository repoTransformerEnd;
    @Autowired private TurbLCFB1.Repository repoTurbLCFB1;
    @Autowired private TurbineGovernorDynamics.Repository repoTurbineGovernorDynamics;
    @Autowired private TurbineGovernorUserDefined.Repository repoTurbineGovernorUserDefined;
    @Autowired private TurbineLoadControllerDynamics.Repository repoTurbineLoadControllerDynamics;
    @Autowired private TurbineLoadControllerUserDefined.Repository repoTurbineLoadControllerUserDefined;
    @Autowired private UnderexcLim2Simplified.Repository repoUnderexcLim2Simplified;
    @Autowired private UnderexcLimIEEE1.Repository repoUnderexcLimIEEE1;
    @Autowired private UnderexcLimIEEE2.Repository repoUnderexcLimIEEE2;
    @Autowired private UnderexcLimX1.Repository repoUnderexcLimX1;
    @Autowired private UnderexcLimX2.Repository repoUnderexcLimX2;
    @Autowired private UnderexcitationLimiterDynamics.Repository repoUnderexcitationLimiterDynamics;
    @Autowired private UnderexcitationLimiterUserDefined.Repository repoUnderexcitationLimiterUserDefined;
    @Autowired private VAdjIEEE.Repository repoVAdjIEEE;
    @Autowired private VCompIEEEType1.Repository repoVCompIEEEType1;
    @Autowired private VCompIEEEType2.Repository repoVCompIEEEType2;
    @Autowired private VSCDynamics.Repository repoVSCDynamics;
    @Autowired private VSCUserDefined.Repository repoVSCUserDefined;
    @Autowired private ValueAliasSet.Repository repoValueAliasSet;
    @Autowired private ValueToAlias.Repository repoValueToAlias;
    @Autowired private VisibilityLayer.Repository repoVisibilityLayer;
    @Autowired private VoltageAdjusterDynamics.Repository repoVoltageAdjusterDynamics;
    @Autowired private VoltageAdjusterUserDefined.Repository repoVoltageAdjusterUserDefined;
    @Autowired private VoltageCompensatorDynamics.Repository repoVoltageCompensatorDynamics;
    @Autowired private VoltageCompensatorUserDefined.Repository repoVoltageCompensatorUserDefined;
    @Autowired private VoltageLevel.Repository repoVoltageLevel;
    @Autowired private VoltageLimit.Repository repoVoltageLimit;
    @Autowired private VsCapabilityCurve.Repository repoVsCapabilityCurve;
    @Autowired private VsConverter.Repository repoVsConverter;
    @Autowired private WaveTrap.Repository repoWaveTrap;
    @Autowired private WindAeroConstIEC.Repository repoWindAeroConstIEC;
    @Autowired private WindAeroOneDimIEC.Repository repoWindAeroOneDimIEC;
    @Autowired private WindAeroTwoDimIEC.Repository repoWindAeroTwoDimIEC;
    @Autowired private WindContCurrLimIEC.Repository repoWindContCurrLimIEC;
    @Autowired private WindContPType3IEC.Repository repoWindContPType3IEC;
    @Autowired private WindContPType4aIEC.Repository repoWindContPType4aIEC;
    @Autowired private WindContPType4bIEC.Repository repoWindContPType4bIEC;
    @Autowired private WindContPitchAngleIEC.Repository repoWindContPitchAngleIEC;
    @Autowired private WindContQIEC.Repository repoWindContQIEC;
    @Autowired private WindContQLimIEC.Repository repoWindContQLimIEC;
    @Autowired private WindContQPQULimIEC.Repository repoWindContQPQULimIEC;
    @Autowired private WindContRotorRIEC.Repository repoWindContRotorRIEC;
    @Autowired private WindDynamicsLookupTable.Repository repoWindDynamicsLookupTable;
    @Autowired private WindGenTurbineType1aIEC.Repository repoWindGenTurbineType1aIEC;
    @Autowired private WindGenTurbineType1bIEC.Repository repoWindGenTurbineType1bIEC;
    @Autowired private WindGenTurbineType2IEC.Repository repoWindGenTurbineType2IEC;
    @Autowired private WindGenType3IEC.Repository repoWindGenType3IEC;
    @Autowired private WindGenType3aIEC.Repository repoWindGenType3aIEC;
    @Autowired private WindGenType3bIEC.Repository repoWindGenType3bIEC;
    @Autowired private WindGenType4IEC.Repository repoWindGenType4IEC;
    @Autowired private WindGeneratingUnit.Repository repoWindGeneratingUnit;
    @Autowired private WindMechIEC.Repository repoWindMechIEC;
    @Autowired private WindPitchContPowerIEC.Repository repoWindPitchContPowerIEC;
    @Autowired private WindPlantDynamics.Repository repoWindPlantDynamics;
    @Autowired private WindPlantFreqPcontrolIEC.Repository repoWindPlantFreqPcontrolIEC;
    @Autowired private WindPlantIEC.Repository repoWindPlantIEC;
    @Autowired private WindPlantReactiveControlIEC.Repository repoWindPlantReactiveControlIEC;
    @Autowired private WindPlantUserDefined.Repository repoWindPlantUserDefined;
    @Autowired private WindPowerPlant.Repository repoWindPowerPlant;
    @Autowired private WindProtectionIEC.Repository repoWindProtectionIEC;
    @Autowired private WindRefFrameRotIEC.Repository repoWindRefFrameRotIEC;
    @Autowired private WindTurbineType1or2Dynamics.Repository repoWindTurbineType1or2Dynamics;
    @Autowired private WindTurbineType1or2IEC.Repository repoWindTurbineType1or2IEC;
    @Autowired private WindTurbineType3IEC.Repository repoWindTurbineType3IEC;
    @Autowired private WindTurbineType3or4Dynamics.Repository repoWindTurbineType3or4Dynamics;
    @Autowired private WindTurbineType3or4IEC.Repository repoWindTurbineType3or4IEC;
    @Autowired private WindTurbineType4IEC.Repository repoWindTurbineType4IEC;
    @Autowired private WindTurbineType4aIEC.Repository repoWindTurbineType4aIEC;
    @Autowired private WindTurbineType4bIEC.Repository repoWindTurbineType4bIEC;
    @Autowired private WindType1or2UserDefined.Repository repoWindType1or2UserDefined;
    @Autowired private WindType3or4UserDefined.Repository repoWindType3or4UserDefined;
    @Autowired private WorkLocation.Repository repoWorkLocation;

    /**
     * Map of CIM class name to function which saves several CIM objects to the database.
     */
    private final Map<String, Function<Iterable<BaseClass>, Iterable<BaseClass>>> SAVE_MAP;
    {
        var map = new LinkedHashMap<String, Function<Iterable<BaseClass>, Iterable<BaseClass>>>();

        map.put("ACDCConverter", objList -> saveAll(repoACDCConverter, objList));
        map.put("ACDCConverterDCTerminal", objList -> saveAll(repoACDCConverterDCTerminal, objList));
        map.put("ACDCTerminal", objList -> saveAll(repoACDCTerminal, objList));
        map.put("ACLineSegment", objList -> saveAll(repoACLineSegment, objList));
        map.put("Accumulator", objList -> saveAll(repoAccumulator, objList));
        map.put("AccumulatorLimit", objList -> saveAll(repoAccumulatorLimit, objList));
        map.put("AccumulatorLimitSet", objList -> saveAll(repoAccumulatorLimitSet, objList));
        map.put("AccumulatorReset", objList -> saveAll(repoAccumulatorReset, objList));
        map.put("AccumulatorValue", objList -> saveAll(repoAccumulatorValue, objList));
        map.put("ActivePowerLimit", objList -> saveAll(repoActivePowerLimit, objList));
        map.put("Analog", objList -> saveAll(repoAnalog, objList));
        map.put("AnalogControl", objList -> saveAll(repoAnalogControl, objList));
        map.put("AnalogLimit", objList -> saveAll(repoAnalogLimit, objList));
        map.put("AnalogLimitSet", objList -> saveAll(repoAnalogLimitSet, objList));
        map.put("AnalogValue", objList -> saveAll(repoAnalogValue, objList));
        map.put("ApparentPowerLimit", objList -> saveAll(repoApparentPowerLimit, objList));
        map.put("AsynchronousMachine", objList -> saveAll(repoAsynchronousMachine, objList));
        map.put("AsynchronousMachineDynamics", objList -> saveAll(repoAsynchronousMachineDynamics, objList));
        map.put("AsynchronousMachineEquivalentCircuit", objList -> saveAll(repoAsynchronousMachineEquivalentCircuit, objList));
        map.put("AsynchronousMachineTimeConstantReactance", objList -> saveAll(repoAsynchronousMachineTimeConstantReactance, objList));
        map.put("AsynchronousMachineUserDefined", objList -> saveAll(repoAsynchronousMachineUserDefined, objList));
        map.put("AuxiliaryEquipment", objList -> saveAll(repoAuxiliaryEquipment, objList));
        map.put("BaseVoltage", objList -> saveAll(repoBaseVoltage, objList));
        map.put("BasicIntervalSchedule", objList -> saveAll(repoBasicIntervalSchedule, objList));
        map.put("BatteryUnit", objList -> saveAll(repoBatteryUnit, objList));
        map.put("Bay", objList -> saveAll(repoBay, objList));
        map.put("BoundaryPoint", objList -> saveAll(repoBoundaryPoint, objList));
        map.put("Breaker", objList -> saveAll(repoBreaker, objList));
        map.put("BusNameMarker", objList -> saveAll(repoBusNameMarker, objList));
        map.put("BusbarSection", objList -> saveAll(repoBusbarSection, objList));
        map.put("CAESPlant", objList -> saveAll(repoCAESPlant, objList));
        map.put("CSCDynamics", objList -> saveAll(repoCSCDynamics, objList));
        map.put("CSCUserDefined", objList -> saveAll(repoCSCUserDefined, objList));
        map.put("Clamp", objList -> saveAll(repoClamp, objList));
        map.put("CogenerationPlant", objList -> saveAll(repoCogenerationPlant, objList));
        map.put("CombinedCyclePlant", objList -> saveAll(repoCombinedCyclePlant, objList));
        map.put("Command", objList -> saveAll(repoCommand, objList));
        map.put("ConductingEquipment", objList -> saveAll(repoConductingEquipment, objList));
        map.put("Conductor", objList -> saveAll(repoConductor, objList));
        map.put("ConformLoad", objList -> saveAll(repoConformLoad, objList));
        map.put("ConformLoadGroup", objList -> saveAll(repoConformLoadGroup, objList));
        map.put("ConformLoadSchedule", objList -> saveAll(repoConformLoadSchedule, objList));
        map.put("ConnectivityNode", objList -> saveAll(repoConnectivityNode, objList));
        map.put("ConnectivityNodeContainer", objList -> saveAll(repoConnectivityNodeContainer, objList));
        map.put("Connector", objList -> saveAll(repoConnector, objList));
        map.put("Control", objList -> saveAll(repoControl, objList));
        map.put("ControlArea", objList -> saveAll(repoControlArea, objList));
        map.put("ControlAreaGeneratingUnit", objList -> saveAll(repoControlAreaGeneratingUnit, objList));
        map.put("CoordinateSystem", objList -> saveAll(repoCoordinateSystem, objList));
        map.put("CrossCompoundTurbineGovernorDynamics", objList -> saveAll(repoCrossCompoundTurbineGovernorDynamics, objList));
        map.put("CsConverter", objList -> saveAll(repoCsConverter, objList));
        map.put("CurrentLimit", objList -> saveAll(repoCurrentLimit, objList));
        map.put("CurrentTransformer", objList -> saveAll(repoCurrentTransformer, objList));
        map.put("Curve", objList -> saveAll(repoCurve, objList));
        map.put("CurveData", objList -> saveAll(repoCurveData, objList));
        map.put("Cut", objList -> saveAll(repoCut, objList));
        map.put("DCBaseTerminal", objList -> saveAll(repoDCBaseTerminal, objList));
        map.put("DCBreaker", objList -> saveAll(repoDCBreaker, objList));
        map.put("DCBusbar", objList -> saveAll(repoDCBusbar, objList));
        map.put("DCChopper", objList -> saveAll(repoDCChopper, objList));
        map.put("DCConductingEquipment", objList -> saveAll(repoDCConductingEquipment, objList));
        map.put("DCConverterUnit", objList -> saveAll(repoDCConverterUnit, objList));
        map.put("DCDisconnector", objList -> saveAll(repoDCDisconnector, objList));
        map.put("DCEquipmentContainer", objList -> saveAll(repoDCEquipmentContainer, objList));
        map.put("DCGround", objList -> saveAll(repoDCGround, objList));
        map.put("DCLine", objList -> saveAll(repoDCLine, objList));
        map.put("DCLineSegment", objList -> saveAll(repoDCLineSegment, objList));
        map.put("DCNode", objList -> saveAll(repoDCNode, objList));
        map.put("DCSeriesDevice", objList -> saveAll(repoDCSeriesDevice, objList));
        map.put("DCShunt", objList -> saveAll(repoDCShunt, objList));
        map.put("DCSwitch", objList -> saveAll(repoDCSwitch, objList));
        map.put("DCTerminal", objList -> saveAll(repoDCTerminal, objList));
        map.put("DCTopologicalIsland", objList -> saveAll(repoDCTopologicalIsland, objList));
        map.put("DCTopologicalNode", objList -> saveAll(repoDCTopologicalNode, objList));
        map.put("DayType", objList -> saveAll(repoDayType, objList));
        map.put("Diagram", objList -> saveAll(repoDiagram, objList));
        map.put("DiagramObject", objList -> saveAll(repoDiagramObject, objList));
        map.put("DiagramObjectGluePoint", objList -> saveAll(repoDiagramObjectGluePoint, objList));
        map.put("DiagramObjectPoint", objList -> saveAll(repoDiagramObjectPoint, objList));
        map.put("DiagramObjectStyle", objList -> saveAll(repoDiagramObjectStyle, objList));
        map.put("DiagramStyle", objList -> saveAll(repoDiagramStyle, objList));
        map.put("DiscExcContIEEEDEC1A", objList -> saveAll(repoDiscExcContIEEEDEC1A, objList));
        map.put("DiscExcContIEEEDEC2A", objList -> saveAll(repoDiscExcContIEEEDEC2A, objList));
        map.put("DiscExcContIEEEDEC3A", objList -> saveAll(repoDiscExcContIEEEDEC3A, objList));
        map.put("DisconnectingCircuitBreaker", objList -> saveAll(repoDisconnectingCircuitBreaker, objList));
        map.put("Disconnector", objList -> saveAll(repoDisconnector, objList));
        map.put("DiscontinuousExcitationControlDynamics", objList -> saveAll(repoDiscontinuousExcitationControlDynamics, objList));
        map.put("DiscontinuousExcitationControlUserDefined", objList -> saveAll(repoDiscontinuousExcitationControlUserDefined, objList));
        map.put("Discrete", objList -> saveAll(repoDiscrete, objList));
        map.put("DiscreteValue", objList -> saveAll(repoDiscreteValue, objList));
        map.put("DynamicsFunctionBlock", objList -> saveAll(repoDynamicsFunctionBlock, objList));
        map.put("EarthFaultCompensator", objList -> saveAll(repoEarthFaultCompensator, objList));
        map.put("EnergyArea", objList -> saveAll(repoEnergyArea, objList));
        map.put("EnergyConnection", objList -> saveAll(repoEnergyConnection, objList));
        map.put("EnergyConsumer", objList -> saveAll(repoEnergyConsumer, objList));
        map.put("EnergySchedulingType", objList -> saveAll(repoEnergySchedulingType, objList));
        map.put("EnergySource", objList -> saveAll(repoEnergySource, objList));
        map.put("Equipment", objList -> saveAll(repoEquipment, objList));
        map.put("EquipmentContainer", objList -> saveAll(repoEquipmentContainer, objList));
        map.put("EquivalentBranch", objList -> saveAll(repoEquivalentBranch, objList));
        map.put("EquivalentEquipment", objList -> saveAll(repoEquivalentEquipment, objList));
        map.put("EquivalentInjection", objList -> saveAll(repoEquivalentInjection, objList));
        map.put("EquivalentNetwork", objList -> saveAll(repoEquivalentNetwork, objList));
        map.put("EquivalentShunt", objList -> saveAll(repoEquivalentShunt, objList));
        map.put("ExcAC1A", objList -> saveAll(repoExcAC1A, objList));
        map.put("ExcAC2A", objList -> saveAll(repoExcAC2A, objList));
        map.put("ExcAC3A", objList -> saveAll(repoExcAC3A, objList));
        map.put("ExcAC4A", objList -> saveAll(repoExcAC4A, objList));
        map.put("ExcAC5A", objList -> saveAll(repoExcAC5A, objList));
        map.put("ExcAC6A", objList -> saveAll(repoExcAC6A, objList));
        map.put("ExcAC8B", objList -> saveAll(repoExcAC8B, objList));
        map.put("ExcANS", objList -> saveAll(repoExcANS, objList));
        map.put("ExcAVR1", objList -> saveAll(repoExcAVR1, objList));
        map.put("ExcAVR2", objList -> saveAll(repoExcAVR2, objList));
        map.put("ExcAVR3", objList -> saveAll(repoExcAVR3, objList));
        map.put("ExcAVR4", objList -> saveAll(repoExcAVR4, objList));
        map.put("ExcAVR5", objList -> saveAll(repoExcAVR5, objList));
        map.put("ExcAVR7", objList -> saveAll(repoExcAVR7, objList));
        map.put("ExcBBC", objList -> saveAll(repoExcBBC, objList));
        map.put("ExcCZ", objList -> saveAll(repoExcCZ, objList));
        map.put("ExcDC1A", objList -> saveAll(repoExcDC1A, objList));
        map.put("ExcDC2A", objList -> saveAll(repoExcDC2A, objList));
        map.put("ExcDC3A", objList -> saveAll(repoExcDC3A, objList));
        map.put("ExcDC3A1", objList -> saveAll(repoExcDC3A1, objList));
        map.put("ExcELIN1", objList -> saveAll(repoExcELIN1, objList));
        map.put("ExcELIN2", objList -> saveAll(repoExcELIN2, objList));
        map.put("ExcHU", objList -> saveAll(repoExcHU, objList));
        map.put("ExcIEEEAC1A", objList -> saveAll(repoExcIEEEAC1A, objList));
        map.put("ExcIEEEAC2A", objList -> saveAll(repoExcIEEEAC2A, objList));
        map.put("ExcIEEEAC3A", objList -> saveAll(repoExcIEEEAC3A, objList));
        map.put("ExcIEEEAC4A", objList -> saveAll(repoExcIEEEAC4A, objList));
        map.put("ExcIEEEAC5A", objList -> saveAll(repoExcIEEEAC5A, objList));
        map.put("ExcIEEEAC6A", objList -> saveAll(repoExcIEEEAC6A, objList));
        map.put("ExcIEEEAC7B", objList -> saveAll(repoExcIEEEAC7B, objList));
        map.put("ExcIEEEAC8B", objList -> saveAll(repoExcIEEEAC8B, objList));
        map.put("ExcIEEEDC1A", objList -> saveAll(repoExcIEEEDC1A, objList));
        map.put("ExcIEEEDC2A", objList -> saveAll(repoExcIEEEDC2A, objList));
        map.put("ExcIEEEDC3A", objList -> saveAll(repoExcIEEEDC3A, objList));
        map.put("ExcIEEEDC4B", objList -> saveAll(repoExcIEEEDC4B, objList));
        map.put("ExcIEEEST1A", objList -> saveAll(repoExcIEEEST1A, objList));
        map.put("ExcIEEEST2A", objList -> saveAll(repoExcIEEEST2A, objList));
        map.put("ExcIEEEST3A", objList -> saveAll(repoExcIEEEST3A, objList));
        map.put("ExcIEEEST4B", objList -> saveAll(repoExcIEEEST4B, objList));
        map.put("ExcIEEEST5B", objList -> saveAll(repoExcIEEEST5B, objList));
        map.put("ExcIEEEST6B", objList -> saveAll(repoExcIEEEST6B, objList));
        map.put("ExcIEEEST7B", objList -> saveAll(repoExcIEEEST7B, objList));
        map.put("ExcNI", objList -> saveAll(repoExcNI, objList));
        map.put("ExcOEX3T", objList -> saveAll(repoExcOEX3T, objList));
        map.put("ExcPIC", objList -> saveAll(repoExcPIC, objList));
        map.put("ExcREXS", objList -> saveAll(repoExcREXS, objList));
        map.put("ExcRQB", objList -> saveAll(repoExcRQB, objList));
        map.put("ExcSCRX", objList -> saveAll(repoExcSCRX, objList));
        map.put("ExcSEXS", objList -> saveAll(repoExcSEXS, objList));
        map.put("ExcSK", objList -> saveAll(repoExcSK, objList));
        map.put("ExcST1A", objList -> saveAll(repoExcST1A, objList));
        map.put("ExcST2A", objList -> saveAll(repoExcST2A, objList));
        map.put("ExcST3A", objList -> saveAll(repoExcST3A, objList));
        map.put("ExcST4B", objList -> saveAll(repoExcST4B, objList));
        map.put("ExcST6B", objList -> saveAll(repoExcST6B, objList));
        map.put("ExcST7B", objList -> saveAll(repoExcST7B, objList));
        map.put("ExcitationSystemDynamics", objList -> saveAll(repoExcitationSystemDynamics, objList));
        map.put("ExcitationSystemUserDefined", objList -> saveAll(repoExcitationSystemUserDefined, objList));
        map.put("ExternalNetworkInjection", objList -> saveAll(repoExternalNetworkInjection, objList));
        map.put("FaultIndicator", objList -> saveAll(repoFaultIndicator, objList));
        map.put("FossilFuel", objList -> saveAll(repoFossilFuel, objList));
        map.put("Fuse", objList -> saveAll(repoFuse, objList));
        map.put("GenICompensationForGenJ", objList -> saveAll(repoGenICompensationForGenJ, objList));
        map.put("GeneratingUnit", objList -> saveAll(repoGeneratingUnit, objList));
        map.put("GeographicalRegion", objList -> saveAll(repoGeographicalRegion, objList));
        map.put("GovCT1", objList -> saveAll(repoGovCT1, objList));
        map.put("GovCT2", objList -> saveAll(repoGovCT2, objList));
        map.put("GovGAST", objList -> saveAll(repoGovGAST, objList));
        map.put("GovGAST1", objList -> saveAll(repoGovGAST1, objList));
        map.put("GovGAST2", objList -> saveAll(repoGovGAST2, objList));
        map.put("GovGAST3", objList -> saveAll(repoGovGAST3, objList));
        map.put("GovGAST4", objList -> saveAll(repoGovGAST4, objList));
        map.put("GovGASTWD", objList -> saveAll(repoGovGASTWD, objList));
        map.put("GovHydro1", objList -> saveAll(repoGovHydro1, objList));
        map.put("GovHydro2", objList -> saveAll(repoGovHydro2, objList));
        map.put("GovHydro3", objList -> saveAll(repoGovHydro3, objList));
        map.put("GovHydro4", objList -> saveAll(repoGovHydro4, objList));
        map.put("GovHydroDD", objList -> saveAll(repoGovHydroDD, objList));
        map.put("GovHydroFrancis", objList -> saveAll(repoGovHydroFrancis, objList));
        map.put("GovHydroIEEE0", objList -> saveAll(repoGovHydroIEEE0, objList));
        map.put("GovHydroIEEE2", objList -> saveAll(repoGovHydroIEEE2, objList));
        map.put("GovHydroPID", objList -> saveAll(repoGovHydroPID, objList));
        map.put("GovHydroPID2", objList -> saveAll(repoGovHydroPID2, objList));
        map.put("GovHydroPelton", objList -> saveAll(repoGovHydroPelton, objList));
        map.put("GovHydroR", objList -> saveAll(repoGovHydroR, objList));
        map.put("GovHydroWEH", objList -> saveAll(repoGovHydroWEH, objList));
        map.put("GovHydroWPID", objList -> saveAll(repoGovHydroWPID, objList));
        map.put("GovSteam0", objList -> saveAll(repoGovSteam0, objList));
        map.put("GovSteam1", objList -> saveAll(repoGovSteam1, objList));
        map.put("GovSteam2", objList -> saveAll(repoGovSteam2, objList));
        map.put("GovSteamBB", objList -> saveAll(repoGovSteamBB, objList));
        map.put("GovSteamCC", objList -> saveAll(repoGovSteamCC, objList));
        map.put("GovSteamEU", objList -> saveAll(repoGovSteamEU, objList));
        map.put("GovSteamFV2", objList -> saveAll(repoGovSteamFV2, objList));
        map.put("GovSteamFV3", objList -> saveAll(repoGovSteamFV3, objList));
        map.put("GovSteamFV4", objList -> saveAll(repoGovSteamFV4, objList));
        map.put("GovSteamIEEE1", objList -> saveAll(repoGovSteamIEEE1, objList));
        map.put("GovSteamSGO", objList -> saveAll(repoGovSteamSGO, objList));
        map.put("GrossToNetActivePowerCurve", objList -> saveAll(repoGrossToNetActivePowerCurve, objList));
        map.put("Ground", objList -> saveAll(repoGround, objList));
        map.put("GroundDisconnector", objList -> saveAll(repoGroundDisconnector, objList));
        map.put("GroundingImpedance", objList -> saveAll(repoGroundingImpedance, objList));
        map.put("HVDCDynamics", objList -> saveAll(repoHVDCDynamics, objList));
        map.put("HydroGeneratingUnit", objList -> saveAll(repoHydroGeneratingUnit, objList));
        map.put("HydroPowerPlant", objList -> saveAll(repoHydroPowerPlant, objList));
        map.put("HydroPump", objList -> saveAll(repoHydroPump, objList));
        map.put("IOPoint", objList -> saveAll(repoIOPoint, objList));
        map.put("IdentifiedObject", objList -> saveAll(repoIdentifiedObject, objList));
        map.put("Jumper", objList -> saveAll(repoJumper, objList));
        map.put("Junction", objList -> saveAll(repoJunction, objList));
        map.put("Limit", objList -> saveAll(repoLimit, objList));
        map.put("LimitSet", objList -> saveAll(repoLimitSet, objList));
        map.put("Line", objList -> saveAll(repoLine, objList));
        map.put("LinearShuntCompensator", objList -> saveAll(repoLinearShuntCompensator, objList));
        map.put("LoadAggregate", objList -> saveAll(repoLoadAggregate, objList));
        map.put("LoadArea", objList -> saveAll(repoLoadArea, objList));
        map.put("LoadBreakSwitch", objList -> saveAll(repoLoadBreakSwitch, objList));
        map.put("LoadComposite", objList -> saveAll(repoLoadComposite, objList));
        map.put("LoadDynamics", objList -> saveAll(repoLoadDynamics, objList));
        map.put("LoadGenericNonLinear", objList -> saveAll(repoLoadGenericNonLinear, objList));
        map.put("LoadGroup", objList -> saveAll(repoLoadGroup, objList));
        map.put("LoadMotor", objList -> saveAll(repoLoadMotor, objList));
        map.put("LoadResponseCharacteristic", objList -> saveAll(repoLoadResponseCharacteristic, objList));
        map.put("LoadStatic", objList -> saveAll(repoLoadStatic, objList));
        map.put("LoadUserDefined", objList -> saveAll(repoLoadUserDefined, objList));
        map.put("Location", objList -> saveAll(repoLocation, objList));
        map.put("Measurement", objList -> saveAll(repoMeasurement, objList));
        map.put("MeasurementValue", objList -> saveAll(repoMeasurementValue, objList));
        map.put("MeasurementValueQuality", objList -> saveAll(repoMeasurementValueQuality, objList));
        map.put("MeasurementValueSource", objList -> saveAll(repoMeasurementValueSource, objList));
        map.put("MechLoad1", objList -> saveAll(repoMechLoad1, objList));
        map.put("MechanicalLoadDynamics", objList -> saveAll(repoMechanicalLoadDynamics, objList));
        map.put("MechanicalLoadUserDefined", objList -> saveAll(repoMechanicalLoadUserDefined, objList));
        map.put("MutualCoupling", objList -> saveAll(repoMutualCoupling, objList));
        map.put("NonConformLoad", objList -> saveAll(repoNonConformLoad, objList));
        map.put("NonConformLoadGroup", objList -> saveAll(repoNonConformLoadGroup, objList));
        map.put("NonConformLoadSchedule", objList -> saveAll(repoNonConformLoadSchedule, objList));
        map.put("NonlinearShuntCompensator", objList -> saveAll(repoNonlinearShuntCompensator, objList));
        map.put("NonlinearShuntCompensatorPoint", objList -> saveAll(repoNonlinearShuntCompensatorPoint, objList));
        map.put("NuclearGeneratingUnit", objList -> saveAll(repoNuclearGeneratingUnit, objList));
        map.put("OperationalLimit", objList -> saveAll(repoOperationalLimit, objList));
        map.put("OperationalLimitSet", objList -> saveAll(repoOperationalLimitSet, objList));
        map.put("OperationalLimitType", objList -> saveAll(repoOperationalLimitType, objList));
        map.put("OverexcLim2", objList -> saveAll(repoOverexcLim2, objList));
        map.put("OverexcLimIEEE", objList -> saveAll(repoOverexcLimIEEE, objList));
        map.put("OverexcLimX1", objList -> saveAll(repoOverexcLimX1, objList));
        map.put("OverexcLimX2", objList -> saveAll(repoOverexcLimX2, objList));
        map.put("OverexcitationLimiterDynamics", objList -> saveAll(repoOverexcitationLimiterDynamics, objList));
        map.put("OverexcitationLimiterUserDefined", objList -> saveAll(repoOverexcitationLimiterUserDefined, objList));
        map.put("PFVArControllerType1Dynamics", objList -> saveAll(repoPFVArControllerType1Dynamics, objList));
        map.put("PFVArControllerType1UserDefined", objList -> saveAll(repoPFVArControllerType1UserDefined, objList));
        map.put("PFVArControllerType2Dynamics", objList -> saveAll(repoPFVArControllerType2Dynamics, objList));
        map.put("PFVArControllerType2UserDefined", objList -> saveAll(repoPFVArControllerType2UserDefined, objList));
        map.put("PFVArType1IEEEPFController", objList -> saveAll(repoPFVArType1IEEEPFController, objList));
        map.put("PFVArType1IEEEVArController", objList -> saveAll(repoPFVArType1IEEEVArController, objList));
        map.put("PFVArType2Common1", objList -> saveAll(repoPFVArType2Common1, objList));
        map.put("PFVArType2IEEEPFController", objList -> saveAll(repoPFVArType2IEEEPFController, objList));
        map.put("PFVArType2IEEEVArController", objList -> saveAll(repoPFVArType2IEEEVArController, objList));
        map.put("PetersenCoil", objList -> saveAll(repoPetersenCoil, objList));
        map.put("PhaseTapChanger", objList -> saveAll(repoPhaseTapChanger, objList));
        map.put("PhaseTapChangerAsymmetrical", objList -> saveAll(repoPhaseTapChangerAsymmetrical, objList));
        map.put("PhaseTapChangerLinear", objList -> saveAll(repoPhaseTapChangerLinear, objList));
        map.put("PhaseTapChangerNonLinear", objList -> saveAll(repoPhaseTapChangerNonLinear, objList));
        map.put("PhaseTapChangerSymmetrical", objList -> saveAll(repoPhaseTapChangerSymmetrical, objList));
        map.put("PhaseTapChangerTable", objList -> saveAll(repoPhaseTapChangerTable, objList));
        map.put("PhaseTapChangerTablePoint", objList -> saveAll(repoPhaseTapChangerTablePoint, objList));
        map.put("PhaseTapChangerTabular", objList -> saveAll(repoPhaseTapChangerTabular, objList));
        map.put("PhotoVoltaicUnit", objList -> saveAll(repoPhotoVoltaicUnit, objList));
        map.put("PositionPoint", objList -> saveAll(repoPositionPoint, objList));
        map.put("PostLineSensor", objList -> saveAll(repoPostLineSensor, objList));
        map.put("PotentialTransformer", objList -> saveAll(repoPotentialTransformer, objList));
        map.put("PowerElectronicsConnection", objList -> saveAll(repoPowerElectronicsConnection, objList));
        map.put("PowerElectronicsUnit", objList -> saveAll(repoPowerElectronicsUnit, objList));
        map.put("PowerElectronicsWindUnit", objList -> saveAll(repoPowerElectronicsWindUnit, objList));
        map.put("PowerSystemResource", objList -> saveAll(repoPowerSystemResource, objList));
        map.put("PowerSystemStabilizerDynamics", objList -> saveAll(repoPowerSystemStabilizerDynamics, objList));
        map.put("PowerSystemStabilizerUserDefined", objList -> saveAll(repoPowerSystemStabilizerUserDefined, objList));
        map.put("PowerTransformer", objList -> saveAll(repoPowerTransformer, objList));
        map.put("PowerTransformerEnd", objList -> saveAll(repoPowerTransformerEnd, objList));
        map.put("ProprietaryParameterDynamics", objList -> saveAll(repoProprietaryParameterDynamics, objList));
        map.put("ProtectedSwitch", objList -> saveAll(repoProtectedSwitch, objList));
        map.put("Pss1", objList -> saveAll(repoPss1, objList));
        map.put("Pss1A", objList -> saveAll(repoPss1A, objList));
        map.put("Pss2B", objList -> saveAll(repoPss2B, objList));
        map.put("Pss2ST", objList -> saveAll(repoPss2ST, objList));
        map.put("Pss5", objList -> saveAll(repoPss5, objList));
        map.put("PssELIN2", objList -> saveAll(repoPssELIN2, objList));
        map.put("PssIEEE1A", objList -> saveAll(repoPssIEEE1A, objList));
        map.put("PssIEEE2B", objList -> saveAll(repoPssIEEE2B, objList));
        map.put("PssIEEE3B", objList -> saveAll(repoPssIEEE3B, objList));
        map.put("PssIEEE4B", objList -> saveAll(repoPssIEEE4B, objList));
        map.put("PssPTIST1", objList -> saveAll(repoPssPTIST1, objList));
        map.put("PssPTIST3", objList -> saveAll(repoPssPTIST3, objList));
        map.put("PssRQB", objList -> saveAll(repoPssRQB, objList));
        map.put("PssSB4", objList -> saveAll(repoPssSB4, objList));
        map.put("PssSH", objList -> saveAll(repoPssSH, objList));
        map.put("PssSK", objList -> saveAll(repoPssSK, objList));
        map.put("PssSTAB2A", objList -> saveAll(repoPssSTAB2A, objList));
        map.put("PssWECC", objList -> saveAll(repoPssWECC, objList));
        map.put("Quality61850", objList -> saveAll(repoQuality61850, objList));
        map.put("RaiseLowerCommand", objList -> saveAll(repoRaiseLowerCommand, objList));
        map.put("RatioTapChanger", objList -> saveAll(repoRatioTapChanger, objList));
        map.put("RatioTapChangerTable", objList -> saveAll(repoRatioTapChangerTable, objList));
        map.put("RatioTapChangerTablePoint", objList -> saveAll(repoRatioTapChangerTablePoint, objList));
        map.put("ReactiveCapabilityCurve", objList -> saveAll(repoReactiveCapabilityCurve, objList));
        map.put("RegularIntervalSchedule", objList -> saveAll(repoRegularIntervalSchedule, objList));
        map.put("RegularTimePoint", objList -> saveAll(repoRegularTimePoint, objList));
        map.put("RegulatingCondEq", objList -> saveAll(repoRegulatingCondEq, objList));
        map.put("RegulatingControl", objList -> saveAll(repoRegulatingControl, objList));
        map.put("RegulationSchedule", objList -> saveAll(repoRegulationSchedule, objList));
        map.put("RemoteInputSignal", objList -> saveAll(repoRemoteInputSignal, objList));
        map.put("ReportingGroup", objList -> saveAll(repoReportingGroup, objList));
        map.put("RotatingMachine", objList -> saveAll(repoRotatingMachine, objList));
        map.put("RotatingMachineDynamics", objList -> saveAll(repoRotatingMachineDynamics, objList));
        map.put("SVCUserDefined", objList -> saveAll(repoSVCUserDefined, objList));
        map.put("Season", objList -> saveAll(repoSeason, objList));
        map.put("SeasonDayTypeSchedule", objList -> saveAll(repoSeasonDayTypeSchedule, objList));
        map.put("Sensor", objList -> saveAll(repoSensor, objList));
        map.put("SeriesCompensator", objList -> saveAll(repoSeriesCompensator, objList));
        map.put("ServiceLocation", objList -> saveAll(repoServiceLocation, objList));
        map.put("SetPoint", objList -> saveAll(repoSetPoint, objList));
        map.put("ShuntCompensator", objList -> saveAll(repoShuntCompensator, objList));
        map.put("SolarGeneratingUnit", objList -> saveAll(repoSolarGeneratingUnit, objList));
        map.put("SolarPowerPlant", objList -> saveAll(repoSolarPowerPlant, objList));
        map.put("StaticVarCompensator", objList -> saveAll(repoStaticVarCompensator, objList));
        map.put("StaticVarCompensatorDynamics", objList -> saveAll(repoStaticVarCompensatorDynamics, objList));
        map.put("StationSupply", objList -> saveAll(repoStationSupply, objList));
        map.put("Status", objList -> saveAll(repoStatus, objList));
        map.put("StreetAddress", objList -> saveAll(repoStreetAddress, objList));
        map.put("StreetDetail", objList -> saveAll(repoStreetDetail, objList));
        map.put("StringMeasurement", objList -> saveAll(repoStringMeasurement, objList));
        map.put("StringMeasurementValue", objList -> saveAll(repoStringMeasurementValue, objList));
        map.put("SubGeographicalRegion", objList -> saveAll(repoSubGeographicalRegion, objList));
        map.put("SubLoadArea", objList -> saveAll(repoSubLoadArea, objList));
        map.put("Substation", objList -> saveAll(repoSubstation, objList));
        map.put("SurgeArrester", objList -> saveAll(repoSurgeArrester, objList));
        map.put("SvInjection", objList -> saveAll(repoSvInjection, objList));
        map.put("SvPowerFlow", objList -> saveAll(repoSvPowerFlow, objList));
        map.put("SvShuntCompensatorSections", objList -> saveAll(repoSvShuntCompensatorSections, objList));
        map.put("SvStatus", objList -> saveAll(repoSvStatus, objList));
        map.put("SvSwitch", objList -> saveAll(repoSvSwitch, objList));
        map.put("SvTapStep", objList -> saveAll(repoSvTapStep, objList));
        map.put("SvVoltage", objList -> saveAll(repoSvVoltage, objList));
        map.put("Switch", objList -> saveAll(repoSwitch, objList));
        map.put("SwitchSchedule", objList -> saveAll(repoSwitchSchedule, objList));
        map.put("SynchronousMachine", objList -> saveAll(repoSynchronousMachine, objList));
        map.put("SynchronousMachineDetailed", objList -> saveAll(repoSynchronousMachineDetailed, objList));
        map.put("SynchronousMachineDynamics", objList -> saveAll(repoSynchronousMachineDynamics, objList));
        map.put("SynchronousMachineEquivalentCircuit", objList -> saveAll(repoSynchronousMachineEquivalentCircuit, objList));
        map.put("SynchronousMachineSimplified", objList -> saveAll(repoSynchronousMachineSimplified, objList));
        map.put("SynchronousMachineTimeConstantReactance", objList -> saveAll(repoSynchronousMachineTimeConstantReactance, objList));
        map.put("SynchronousMachineUserDefined", objList -> saveAll(repoSynchronousMachineUserDefined, objList));
        map.put("TapChanger", objList -> saveAll(repoTapChanger, objList));
        map.put("TapChangerControl", objList -> saveAll(repoTapChangerControl, objList));
        map.put("TapChangerTablePoint", objList -> saveAll(repoTapChangerTablePoint, objList));
        map.put("TapSchedule", objList -> saveAll(repoTapSchedule, objList));
        map.put("Terminal", objList -> saveAll(repoTerminal, objList));
        map.put("TextDiagramObject", objList -> saveAll(repoTextDiagramObject, objList));
        map.put("ThermalGeneratingUnit", objList -> saveAll(repoThermalGeneratingUnit, objList));
        map.put("TieFlow", objList -> saveAll(repoTieFlow, objList));
        map.put("TopologicalIsland", objList -> saveAll(repoTopologicalIsland, objList));
        map.put("TopologicalNode", objList -> saveAll(repoTopologicalNode, objList));
        map.put("TownDetail", objList -> saveAll(repoTownDetail, objList));
        map.put("TransformerEnd", objList -> saveAll(repoTransformerEnd, objList));
        map.put("TurbLCFB1", objList -> saveAll(repoTurbLCFB1, objList));
        map.put("TurbineGovernorDynamics", objList -> saveAll(repoTurbineGovernorDynamics, objList));
        map.put("TurbineGovernorUserDefined", objList -> saveAll(repoTurbineGovernorUserDefined, objList));
        map.put("TurbineLoadControllerDynamics", objList -> saveAll(repoTurbineLoadControllerDynamics, objList));
        map.put("TurbineLoadControllerUserDefined", objList -> saveAll(repoTurbineLoadControllerUserDefined, objList));
        map.put("UnderexcLim2Simplified", objList -> saveAll(repoUnderexcLim2Simplified, objList));
        map.put("UnderexcLimIEEE1", objList -> saveAll(repoUnderexcLimIEEE1, objList));
        map.put("UnderexcLimIEEE2", objList -> saveAll(repoUnderexcLimIEEE2, objList));
        map.put("UnderexcLimX1", objList -> saveAll(repoUnderexcLimX1, objList));
        map.put("UnderexcLimX2", objList -> saveAll(repoUnderexcLimX2, objList));
        map.put("UnderexcitationLimiterDynamics", objList -> saveAll(repoUnderexcitationLimiterDynamics, objList));
        map.put("UnderexcitationLimiterUserDefined", objList -> saveAll(repoUnderexcitationLimiterUserDefined, objList));
        map.put("VAdjIEEE", objList -> saveAll(repoVAdjIEEE, objList));
        map.put("VCompIEEEType1", objList -> saveAll(repoVCompIEEEType1, objList));
        map.put("VCompIEEEType2", objList -> saveAll(repoVCompIEEEType2, objList));
        map.put("VSCDynamics", objList -> saveAll(repoVSCDynamics, objList));
        map.put("VSCUserDefined", objList -> saveAll(repoVSCUserDefined, objList));
        map.put("ValueAliasSet", objList -> saveAll(repoValueAliasSet, objList));
        map.put("ValueToAlias", objList -> saveAll(repoValueToAlias, objList));
        map.put("VisibilityLayer", objList -> saveAll(repoVisibilityLayer, objList));
        map.put("VoltageAdjusterDynamics", objList -> saveAll(repoVoltageAdjusterDynamics, objList));
        map.put("VoltageAdjusterUserDefined", objList -> saveAll(repoVoltageAdjusterUserDefined, objList));
        map.put("VoltageCompensatorDynamics", objList -> saveAll(repoVoltageCompensatorDynamics, objList));
        map.put("VoltageCompensatorUserDefined", objList -> saveAll(repoVoltageCompensatorUserDefined, objList));
        map.put("VoltageLevel", objList -> saveAll(repoVoltageLevel, objList));
        map.put("VoltageLimit", objList -> saveAll(repoVoltageLimit, objList));
        map.put("VsCapabilityCurve", objList -> saveAll(repoVsCapabilityCurve, objList));
        map.put("VsConverter", objList -> saveAll(repoVsConverter, objList));
        map.put("WaveTrap", objList -> saveAll(repoWaveTrap, objList));
        map.put("WindAeroConstIEC", objList -> saveAll(repoWindAeroConstIEC, objList));
        map.put("WindAeroOneDimIEC", objList -> saveAll(repoWindAeroOneDimIEC, objList));
        map.put("WindAeroTwoDimIEC", objList -> saveAll(repoWindAeroTwoDimIEC, objList));
        map.put("WindContCurrLimIEC", objList -> saveAll(repoWindContCurrLimIEC, objList));
        map.put("WindContPType3IEC", objList -> saveAll(repoWindContPType3IEC, objList));
        map.put("WindContPType4aIEC", objList -> saveAll(repoWindContPType4aIEC, objList));
        map.put("WindContPType4bIEC", objList -> saveAll(repoWindContPType4bIEC, objList));
        map.put("WindContPitchAngleIEC", objList -> saveAll(repoWindContPitchAngleIEC, objList));
        map.put("WindContQIEC", objList -> saveAll(repoWindContQIEC, objList));
        map.put("WindContQLimIEC", objList -> saveAll(repoWindContQLimIEC, objList));
        map.put("WindContQPQULimIEC", objList -> saveAll(repoWindContQPQULimIEC, objList));
        map.put("WindContRotorRIEC", objList -> saveAll(repoWindContRotorRIEC, objList));
        map.put("WindDynamicsLookupTable", objList -> saveAll(repoWindDynamicsLookupTable, objList));
        map.put("WindGenTurbineType1aIEC", objList -> saveAll(repoWindGenTurbineType1aIEC, objList));
        map.put("WindGenTurbineType1bIEC", objList -> saveAll(repoWindGenTurbineType1bIEC, objList));
        map.put("WindGenTurbineType2IEC", objList -> saveAll(repoWindGenTurbineType2IEC, objList));
        map.put("WindGenType3IEC", objList -> saveAll(repoWindGenType3IEC, objList));
        map.put("WindGenType3aIEC", objList -> saveAll(repoWindGenType3aIEC, objList));
        map.put("WindGenType3bIEC", objList -> saveAll(repoWindGenType3bIEC, objList));
        map.put("WindGenType4IEC", objList -> saveAll(repoWindGenType4IEC, objList));
        map.put("WindGeneratingUnit", objList -> saveAll(repoWindGeneratingUnit, objList));
        map.put("WindMechIEC", objList -> saveAll(repoWindMechIEC, objList));
        map.put("WindPitchContPowerIEC", objList -> saveAll(repoWindPitchContPowerIEC, objList));
        map.put("WindPlantDynamics", objList -> saveAll(repoWindPlantDynamics, objList));
        map.put("WindPlantFreqPcontrolIEC", objList -> saveAll(repoWindPlantFreqPcontrolIEC, objList));
        map.put("WindPlantIEC", objList -> saveAll(repoWindPlantIEC, objList));
        map.put("WindPlantReactiveControlIEC", objList -> saveAll(repoWindPlantReactiveControlIEC, objList));
        map.put("WindPlantUserDefined", objList -> saveAll(repoWindPlantUserDefined, objList));
        map.put("WindPowerPlant", objList -> saveAll(repoWindPowerPlant, objList));
        map.put("WindProtectionIEC", objList -> saveAll(repoWindProtectionIEC, objList));
        map.put("WindRefFrameRotIEC", objList -> saveAll(repoWindRefFrameRotIEC, objList));
        map.put("WindTurbineType1or2Dynamics", objList -> saveAll(repoWindTurbineType1or2Dynamics, objList));
        map.put("WindTurbineType1or2IEC", objList -> saveAll(repoWindTurbineType1or2IEC, objList));
        map.put("WindTurbineType3IEC", objList -> saveAll(repoWindTurbineType3IEC, objList));
        map.put("WindTurbineType3or4Dynamics", objList -> saveAll(repoWindTurbineType3or4Dynamics, objList));
        map.put("WindTurbineType3or4IEC", objList -> saveAll(repoWindTurbineType3or4IEC, objList));
        map.put("WindTurbineType4IEC", objList -> saveAll(repoWindTurbineType4IEC, objList));
        map.put("WindTurbineType4aIEC", objList -> saveAll(repoWindTurbineType4aIEC, objList));
        map.put("WindTurbineType4bIEC", objList -> saveAll(repoWindTurbineType4bIEC, objList));
        map.put("WindType1or2UserDefined", objList -> saveAll(repoWindType1or2UserDefined, objList));
        map.put("WindType3or4UserDefined", objList -> saveAll(repoWindType3or4UserDefined, objList));
        map.put("WorkLocation", objList -> saveAll(repoWorkLocation, objList));

        SAVE_MAP = Collections.unmodifiableMap(map);
    }

    @SuppressWarnings("unchecked")
    private <T extends BaseClass> Iterable<BaseClass> saveAll(CrudRepository<T, Long> repo, Iterable<BaseClass> objList) {
        return (Iterable<BaseClass>) repo.saveAll((Iterable<T>) objList);
    }

    /**
     * Map of CIM class name to function which reads several CIM objects from the database.
     */
    private final Map<String, Function<Iterable<Long>, Iterable<BaseClass>>> READ_MAP;
    {
        var map = new LinkedHashMap<String, Function<Iterable<Long>, Iterable<BaseClass>>>();

        map.put("ACDCConverter", idList -> findAllById(repoACDCConverter, idList));
        map.put("ACDCConverterDCTerminal", idList -> findAllById(repoACDCConverterDCTerminal, idList));
        map.put("ACDCTerminal", idList -> findAllById(repoACDCTerminal, idList));
        map.put("ACLineSegment", idList -> findAllById(repoACLineSegment, idList));
        map.put("Accumulator", idList -> findAllById(repoAccumulator, idList));
        map.put("AccumulatorLimit", idList -> findAllById(repoAccumulatorLimit, idList));
        map.put("AccumulatorLimitSet", idList -> findAllById(repoAccumulatorLimitSet, idList));
        map.put("AccumulatorReset", idList -> findAllById(repoAccumulatorReset, idList));
        map.put("AccumulatorValue", idList -> findAllById(repoAccumulatorValue, idList));
        map.put("ActivePowerLimit", idList -> findAllById(repoActivePowerLimit, idList));
        map.put("Analog", idList -> findAllById(repoAnalog, idList));
        map.put("AnalogControl", idList -> findAllById(repoAnalogControl, idList));
        map.put("AnalogLimit", idList -> findAllById(repoAnalogLimit, idList));
        map.put("AnalogLimitSet", idList -> findAllById(repoAnalogLimitSet, idList));
        map.put("AnalogValue", idList -> findAllById(repoAnalogValue, idList));
        map.put("ApparentPowerLimit", idList -> findAllById(repoApparentPowerLimit, idList));
        map.put("AsynchronousMachine", idList -> findAllById(repoAsynchronousMachine, idList));
        map.put("AsynchronousMachineDynamics", idList -> findAllById(repoAsynchronousMachineDynamics, idList));
        map.put("AsynchronousMachineEquivalentCircuit", idList -> findAllById(repoAsynchronousMachineEquivalentCircuit, idList));
        map.put("AsynchronousMachineTimeConstantReactance", idList -> findAllById(repoAsynchronousMachineTimeConstantReactance, idList));
        map.put("AsynchronousMachineUserDefined", idList -> findAllById(repoAsynchronousMachineUserDefined, idList));
        map.put("AuxiliaryEquipment", idList -> findAllById(repoAuxiliaryEquipment, idList));
        map.put("BaseVoltage", idList -> findAllById(repoBaseVoltage, idList));
        map.put("BasicIntervalSchedule", idList -> findAllById(repoBasicIntervalSchedule, idList));
        map.put("BatteryUnit", idList -> findAllById(repoBatteryUnit, idList));
        map.put("Bay", idList -> findAllById(repoBay, idList));
        map.put("BoundaryPoint", idList -> findAllById(repoBoundaryPoint, idList));
        map.put("Breaker", idList -> findAllById(repoBreaker, idList));
        map.put("BusNameMarker", idList -> findAllById(repoBusNameMarker, idList));
        map.put("BusbarSection", idList -> findAllById(repoBusbarSection, idList));
        map.put("CAESPlant", idList -> findAllById(repoCAESPlant, idList));
        map.put("CSCDynamics", idList -> findAllById(repoCSCDynamics, idList));
        map.put("CSCUserDefined", idList -> findAllById(repoCSCUserDefined, idList));
        map.put("Clamp", idList -> findAllById(repoClamp, idList));
        map.put("CogenerationPlant", idList -> findAllById(repoCogenerationPlant, idList));
        map.put("CombinedCyclePlant", idList -> findAllById(repoCombinedCyclePlant, idList));
        map.put("Command", idList -> findAllById(repoCommand, idList));
        map.put("ConductingEquipment", idList -> findAllById(repoConductingEquipment, idList));
        map.put("Conductor", idList -> findAllById(repoConductor, idList));
        map.put("ConformLoad", idList -> findAllById(repoConformLoad, idList));
        map.put("ConformLoadGroup", idList -> findAllById(repoConformLoadGroup, idList));
        map.put("ConformLoadSchedule", idList -> findAllById(repoConformLoadSchedule, idList));
        map.put("ConnectivityNode", idList -> findAllById(repoConnectivityNode, idList));
        map.put("ConnectivityNodeContainer", idList -> findAllById(repoConnectivityNodeContainer, idList));
        map.put("Connector", idList -> findAllById(repoConnector, idList));
        map.put("Control", idList -> findAllById(repoControl, idList));
        map.put("ControlArea", idList -> findAllById(repoControlArea, idList));
        map.put("ControlAreaGeneratingUnit", idList -> findAllById(repoControlAreaGeneratingUnit, idList));
        map.put("CoordinateSystem", idList -> findAllById(repoCoordinateSystem, idList));
        map.put("CrossCompoundTurbineGovernorDynamics", idList -> findAllById(repoCrossCompoundTurbineGovernorDynamics, idList));
        map.put("CsConverter", idList -> findAllById(repoCsConverter, idList));
        map.put("CurrentLimit", idList -> findAllById(repoCurrentLimit, idList));
        map.put("CurrentTransformer", idList -> findAllById(repoCurrentTransformer, idList));
        map.put("Curve", idList -> findAllById(repoCurve, idList));
        map.put("CurveData", idList -> findAllById(repoCurveData, idList));
        map.put("Cut", idList -> findAllById(repoCut, idList));
        map.put("DCBaseTerminal", idList -> findAllById(repoDCBaseTerminal, idList));
        map.put("DCBreaker", idList -> findAllById(repoDCBreaker, idList));
        map.put("DCBusbar", idList -> findAllById(repoDCBusbar, idList));
        map.put("DCChopper", idList -> findAllById(repoDCChopper, idList));
        map.put("DCConductingEquipment", idList -> findAllById(repoDCConductingEquipment, idList));
        map.put("DCConverterUnit", idList -> findAllById(repoDCConverterUnit, idList));
        map.put("DCDisconnector", idList -> findAllById(repoDCDisconnector, idList));
        map.put("DCEquipmentContainer", idList -> findAllById(repoDCEquipmentContainer, idList));
        map.put("DCGround", idList -> findAllById(repoDCGround, idList));
        map.put("DCLine", idList -> findAllById(repoDCLine, idList));
        map.put("DCLineSegment", idList -> findAllById(repoDCLineSegment, idList));
        map.put("DCNode", idList -> findAllById(repoDCNode, idList));
        map.put("DCSeriesDevice", idList -> findAllById(repoDCSeriesDevice, idList));
        map.put("DCShunt", idList -> findAllById(repoDCShunt, idList));
        map.put("DCSwitch", idList -> findAllById(repoDCSwitch, idList));
        map.put("DCTerminal", idList -> findAllById(repoDCTerminal, idList));
        map.put("DCTopologicalIsland", idList -> findAllById(repoDCTopologicalIsland, idList));
        map.put("DCTopologicalNode", idList -> findAllById(repoDCTopologicalNode, idList));
        map.put("DayType", idList -> findAllById(repoDayType, idList));
        map.put("Diagram", idList -> findAllById(repoDiagram, idList));
        map.put("DiagramObject", idList -> findAllById(repoDiagramObject, idList));
        map.put("DiagramObjectGluePoint", idList -> findAllById(repoDiagramObjectGluePoint, idList));
        map.put("DiagramObjectPoint", idList -> findAllById(repoDiagramObjectPoint, idList));
        map.put("DiagramObjectStyle", idList -> findAllById(repoDiagramObjectStyle, idList));
        map.put("DiagramStyle", idList -> findAllById(repoDiagramStyle, idList));
        map.put("DiscExcContIEEEDEC1A", idList -> findAllById(repoDiscExcContIEEEDEC1A, idList));
        map.put("DiscExcContIEEEDEC2A", idList -> findAllById(repoDiscExcContIEEEDEC2A, idList));
        map.put("DiscExcContIEEEDEC3A", idList -> findAllById(repoDiscExcContIEEEDEC3A, idList));
        map.put("DisconnectingCircuitBreaker", idList -> findAllById(repoDisconnectingCircuitBreaker, idList));
        map.put("Disconnector", idList -> findAllById(repoDisconnector, idList));
        map.put("DiscontinuousExcitationControlDynamics", idList -> findAllById(repoDiscontinuousExcitationControlDynamics, idList));
        map.put("DiscontinuousExcitationControlUserDefined", idList -> findAllById(repoDiscontinuousExcitationControlUserDefined, idList));
        map.put("Discrete", idList -> findAllById(repoDiscrete, idList));
        map.put("DiscreteValue", idList -> findAllById(repoDiscreteValue, idList));
        map.put("DynamicsFunctionBlock", idList -> findAllById(repoDynamicsFunctionBlock, idList));
        map.put("EarthFaultCompensator", idList -> findAllById(repoEarthFaultCompensator, idList));
        map.put("EnergyArea", idList -> findAllById(repoEnergyArea, idList));
        map.put("EnergyConnection", idList -> findAllById(repoEnergyConnection, idList));
        map.put("EnergyConsumer", idList -> findAllById(repoEnergyConsumer, idList));
        map.put("EnergySchedulingType", idList -> findAllById(repoEnergySchedulingType, idList));
        map.put("EnergySource", idList -> findAllById(repoEnergySource, idList));
        map.put("Equipment", idList -> findAllById(repoEquipment, idList));
        map.put("EquipmentContainer", idList -> findAllById(repoEquipmentContainer, idList));
        map.put("EquivalentBranch", idList -> findAllById(repoEquivalentBranch, idList));
        map.put("EquivalentEquipment", idList -> findAllById(repoEquivalentEquipment, idList));
        map.put("EquivalentInjection", idList -> findAllById(repoEquivalentInjection, idList));
        map.put("EquivalentNetwork", idList -> findAllById(repoEquivalentNetwork, idList));
        map.put("EquivalentShunt", idList -> findAllById(repoEquivalentShunt, idList));
        map.put("ExcAC1A", idList -> findAllById(repoExcAC1A, idList));
        map.put("ExcAC2A", idList -> findAllById(repoExcAC2A, idList));
        map.put("ExcAC3A", idList -> findAllById(repoExcAC3A, idList));
        map.put("ExcAC4A", idList -> findAllById(repoExcAC4A, idList));
        map.put("ExcAC5A", idList -> findAllById(repoExcAC5A, idList));
        map.put("ExcAC6A", idList -> findAllById(repoExcAC6A, idList));
        map.put("ExcAC8B", idList -> findAllById(repoExcAC8B, idList));
        map.put("ExcANS", idList -> findAllById(repoExcANS, idList));
        map.put("ExcAVR1", idList -> findAllById(repoExcAVR1, idList));
        map.put("ExcAVR2", idList -> findAllById(repoExcAVR2, idList));
        map.put("ExcAVR3", idList -> findAllById(repoExcAVR3, idList));
        map.put("ExcAVR4", idList -> findAllById(repoExcAVR4, idList));
        map.put("ExcAVR5", idList -> findAllById(repoExcAVR5, idList));
        map.put("ExcAVR7", idList -> findAllById(repoExcAVR7, idList));
        map.put("ExcBBC", idList -> findAllById(repoExcBBC, idList));
        map.put("ExcCZ", idList -> findAllById(repoExcCZ, idList));
        map.put("ExcDC1A", idList -> findAllById(repoExcDC1A, idList));
        map.put("ExcDC2A", idList -> findAllById(repoExcDC2A, idList));
        map.put("ExcDC3A", idList -> findAllById(repoExcDC3A, idList));
        map.put("ExcDC3A1", idList -> findAllById(repoExcDC3A1, idList));
        map.put("ExcELIN1", idList -> findAllById(repoExcELIN1, idList));
        map.put("ExcELIN2", idList -> findAllById(repoExcELIN2, idList));
        map.put("ExcHU", idList -> findAllById(repoExcHU, idList));
        map.put("ExcIEEEAC1A", idList -> findAllById(repoExcIEEEAC1A, idList));
        map.put("ExcIEEEAC2A", idList -> findAllById(repoExcIEEEAC2A, idList));
        map.put("ExcIEEEAC3A", idList -> findAllById(repoExcIEEEAC3A, idList));
        map.put("ExcIEEEAC4A", idList -> findAllById(repoExcIEEEAC4A, idList));
        map.put("ExcIEEEAC5A", idList -> findAllById(repoExcIEEEAC5A, idList));
        map.put("ExcIEEEAC6A", idList -> findAllById(repoExcIEEEAC6A, idList));
        map.put("ExcIEEEAC7B", idList -> findAllById(repoExcIEEEAC7B, idList));
        map.put("ExcIEEEAC8B", idList -> findAllById(repoExcIEEEAC8B, idList));
        map.put("ExcIEEEDC1A", idList -> findAllById(repoExcIEEEDC1A, idList));
        map.put("ExcIEEEDC2A", idList -> findAllById(repoExcIEEEDC2A, idList));
        map.put("ExcIEEEDC3A", idList -> findAllById(repoExcIEEEDC3A, idList));
        map.put("ExcIEEEDC4B", idList -> findAllById(repoExcIEEEDC4B, idList));
        map.put("ExcIEEEST1A", idList -> findAllById(repoExcIEEEST1A, idList));
        map.put("ExcIEEEST2A", idList -> findAllById(repoExcIEEEST2A, idList));
        map.put("ExcIEEEST3A", idList -> findAllById(repoExcIEEEST3A, idList));
        map.put("ExcIEEEST4B", idList -> findAllById(repoExcIEEEST4B, idList));
        map.put("ExcIEEEST5B", idList -> findAllById(repoExcIEEEST5B, idList));
        map.put("ExcIEEEST6B", idList -> findAllById(repoExcIEEEST6B, idList));
        map.put("ExcIEEEST7B", idList -> findAllById(repoExcIEEEST7B, idList));
        map.put("ExcNI", idList -> findAllById(repoExcNI, idList));
        map.put("ExcOEX3T", idList -> findAllById(repoExcOEX3T, idList));
        map.put("ExcPIC", idList -> findAllById(repoExcPIC, idList));
        map.put("ExcREXS", idList -> findAllById(repoExcREXS, idList));
        map.put("ExcRQB", idList -> findAllById(repoExcRQB, idList));
        map.put("ExcSCRX", idList -> findAllById(repoExcSCRX, idList));
        map.put("ExcSEXS", idList -> findAllById(repoExcSEXS, idList));
        map.put("ExcSK", idList -> findAllById(repoExcSK, idList));
        map.put("ExcST1A", idList -> findAllById(repoExcST1A, idList));
        map.put("ExcST2A", idList -> findAllById(repoExcST2A, idList));
        map.put("ExcST3A", idList -> findAllById(repoExcST3A, idList));
        map.put("ExcST4B", idList -> findAllById(repoExcST4B, idList));
        map.put("ExcST6B", idList -> findAllById(repoExcST6B, idList));
        map.put("ExcST7B", idList -> findAllById(repoExcST7B, idList));
        map.put("ExcitationSystemDynamics", idList -> findAllById(repoExcitationSystemDynamics, idList));
        map.put("ExcitationSystemUserDefined", idList -> findAllById(repoExcitationSystemUserDefined, idList));
        map.put("ExternalNetworkInjection", idList -> findAllById(repoExternalNetworkInjection, idList));
        map.put("FaultIndicator", idList -> findAllById(repoFaultIndicator, idList));
        map.put("FossilFuel", idList -> findAllById(repoFossilFuel, idList));
        map.put("Fuse", idList -> findAllById(repoFuse, idList));
        map.put("GenICompensationForGenJ", idList -> findAllById(repoGenICompensationForGenJ, idList));
        map.put("GeneratingUnit", idList -> findAllById(repoGeneratingUnit, idList));
        map.put("GeographicalRegion", idList -> findAllById(repoGeographicalRegion, idList));
        map.put("GovCT1", idList -> findAllById(repoGovCT1, idList));
        map.put("GovCT2", idList -> findAllById(repoGovCT2, idList));
        map.put("GovGAST", idList -> findAllById(repoGovGAST, idList));
        map.put("GovGAST1", idList -> findAllById(repoGovGAST1, idList));
        map.put("GovGAST2", idList -> findAllById(repoGovGAST2, idList));
        map.put("GovGAST3", idList -> findAllById(repoGovGAST3, idList));
        map.put("GovGAST4", idList -> findAllById(repoGovGAST4, idList));
        map.put("GovGASTWD", idList -> findAllById(repoGovGASTWD, idList));
        map.put("GovHydro1", idList -> findAllById(repoGovHydro1, idList));
        map.put("GovHydro2", idList -> findAllById(repoGovHydro2, idList));
        map.put("GovHydro3", idList -> findAllById(repoGovHydro3, idList));
        map.put("GovHydro4", idList -> findAllById(repoGovHydro4, idList));
        map.put("GovHydroDD", idList -> findAllById(repoGovHydroDD, idList));
        map.put("GovHydroFrancis", idList -> findAllById(repoGovHydroFrancis, idList));
        map.put("GovHydroIEEE0", idList -> findAllById(repoGovHydroIEEE0, idList));
        map.put("GovHydroIEEE2", idList -> findAllById(repoGovHydroIEEE2, idList));
        map.put("GovHydroPID", idList -> findAllById(repoGovHydroPID, idList));
        map.put("GovHydroPID2", idList -> findAllById(repoGovHydroPID2, idList));
        map.put("GovHydroPelton", idList -> findAllById(repoGovHydroPelton, idList));
        map.put("GovHydroR", idList -> findAllById(repoGovHydroR, idList));
        map.put("GovHydroWEH", idList -> findAllById(repoGovHydroWEH, idList));
        map.put("GovHydroWPID", idList -> findAllById(repoGovHydroWPID, idList));
        map.put("GovSteam0", idList -> findAllById(repoGovSteam0, idList));
        map.put("GovSteam1", idList -> findAllById(repoGovSteam1, idList));
        map.put("GovSteam2", idList -> findAllById(repoGovSteam2, idList));
        map.put("GovSteamBB", idList -> findAllById(repoGovSteamBB, idList));
        map.put("GovSteamCC", idList -> findAllById(repoGovSteamCC, idList));
        map.put("GovSteamEU", idList -> findAllById(repoGovSteamEU, idList));
        map.put("GovSteamFV2", idList -> findAllById(repoGovSteamFV2, idList));
        map.put("GovSteamFV3", idList -> findAllById(repoGovSteamFV3, idList));
        map.put("GovSteamFV4", idList -> findAllById(repoGovSteamFV4, idList));
        map.put("GovSteamIEEE1", idList -> findAllById(repoGovSteamIEEE1, idList));
        map.put("GovSteamSGO", idList -> findAllById(repoGovSteamSGO, idList));
        map.put("GrossToNetActivePowerCurve", idList -> findAllById(repoGrossToNetActivePowerCurve, idList));
        map.put("Ground", idList -> findAllById(repoGround, idList));
        map.put("GroundDisconnector", idList -> findAllById(repoGroundDisconnector, idList));
        map.put("GroundingImpedance", idList -> findAllById(repoGroundingImpedance, idList));
        map.put("HVDCDynamics", idList -> findAllById(repoHVDCDynamics, idList));
        map.put("HydroGeneratingUnit", idList -> findAllById(repoHydroGeneratingUnit, idList));
        map.put("HydroPowerPlant", idList -> findAllById(repoHydroPowerPlant, idList));
        map.put("HydroPump", idList -> findAllById(repoHydroPump, idList));
        map.put("IOPoint", idList -> findAllById(repoIOPoint, idList));
        map.put("IdentifiedObject", idList -> findAllById(repoIdentifiedObject, idList));
        map.put("Jumper", idList -> findAllById(repoJumper, idList));
        map.put("Junction", idList -> findAllById(repoJunction, idList));
        map.put("Limit", idList -> findAllById(repoLimit, idList));
        map.put("LimitSet", idList -> findAllById(repoLimitSet, idList));
        map.put("Line", idList -> findAllById(repoLine, idList));
        map.put("LinearShuntCompensator", idList -> findAllById(repoLinearShuntCompensator, idList));
        map.put("LoadAggregate", idList -> findAllById(repoLoadAggregate, idList));
        map.put("LoadArea", idList -> findAllById(repoLoadArea, idList));
        map.put("LoadBreakSwitch", idList -> findAllById(repoLoadBreakSwitch, idList));
        map.put("LoadComposite", idList -> findAllById(repoLoadComposite, idList));
        map.put("LoadDynamics", idList -> findAllById(repoLoadDynamics, idList));
        map.put("LoadGenericNonLinear", idList -> findAllById(repoLoadGenericNonLinear, idList));
        map.put("LoadGroup", idList -> findAllById(repoLoadGroup, idList));
        map.put("LoadMotor", idList -> findAllById(repoLoadMotor, idList));
        map.put("LoadResponseCharacteristic", idList -> findAllById(repoLoadResponseCharacteristic, idList));
        map.put("LoadStatic", idList -> findAllById(repoLoadStatic, idList));
        map.put("LoadUserDefined", idList -> findAllById(repoLoadUserDefined, idList));
        map.put("Location", idList -> findAllById(repoLocation, idList));
        map.put("Measurement", idList -> findAllById(repoMeasurement, idList));
        map.put("MeasurementValue", idList -> findAllById(repoMeasurementValue, idList));
        map.put("MeasurementValueQuality", idList -> findAllById(repoMeasurementValueQuality, idList));
        map.put("MeasurementValueSource", idList -> findAllById(repoMeasurementValueSource, idList));
        map.put("MechLoad1", idList -> findAllById(repoMechLoad1, idList));
        map.put("MechanicalLoadDynamics", idList -> findAllById(repoMechanicalLoadDynamics, idList));
        map.put("MechanicalLoadUserDefined", idList -> findAllById(repoMechanicalLoadUserDefined, idList));
        map.put("MutualCoupling", idList -> findAllById(repoMutualCoupling, idList));
        map.put("NonConformLoad", idList -> findAllById(repoNonConformLoad, idList));
        map.put("NonConformLoadGroup", idList -> findAllById(repoNonConformLoadGroup, idList));
        map.put("NonConformLoadSchedule", idList -> findAllById(repoNonConformLoadSchedule, idList));
        map.put("NonlinearShuntCompensator", idList -> findAllById(repoNonlinearShuntCompensator, idList));
        map.put("NonlinearShuntCompensatorPoint", idList -> findAllById(repoNonlinearShuntCompensatorPoint, idList));
        map.put("NuclearGeneratingUnit", idList -> findAllById(repoNuclearGeneratingUnit, idList));
        map.put("OperationalLimit", idList -> findAllById(repoOperationalLimit, idList));
        map.put("OperationalLimitSet", idList -> findAllById(repoOperationalLimitSet, idList));
        map.put("OperationalLimitType", idList -> findAllById(repoOperationalLimitType, idList));
        map.put("OverexcLim2", idList -> findAllById(repoOverexcLim2, idList));
        map.put("OverexcLimIEEE", idList -> findAllById(repoOverexcLimIEEE, idList));
        map.put("OverexcLimX1", idList -> findAllById(repoOverexcLimX1, idList));
        map.put("OverexcLimX2", idList -> findAllById(repoOverexcLimX2, idList));
        map.put("OverexcitationLimiterDynamics", idList -> findAllById(repoOverexcitationLimiterDynamics, idList));
        map.put("OverexcitationLimiterUserDefined", idList -> findAllById(repoOverexcitationLimiterUserDefined, idList));
        map.put("PFVArControllerType1Dynamics", idList -> findAllById(repoPFVArControllerType1Dynamics, idList));
        map.put("PFVArControllerType1UserDefined", idList -> findAllById(repoPFVArControllerType1UserDefined, idList));
        map.put("PFVArControllerType2Dynamics", idList -> findAllById(repoPFVArControllerType2Dynamics, idList));
        map.put("PFVArControllerType2UserDefined", idList -> findAllById(repoPFVArControllerType2UserDefined, idList));
        map.put("PFVArType1IEEEPFController", idList -> findAllById(repoPFVArType1IEEEPFController, idList));
        map.put("PFVArType1IEEEVArController", idList -> findAllById(repoPFVArType1IEEEVArController, idList));
        map.put("PFVArType2Common1", idList -> findAllById(repoPFVArType2Common1, idList));
        map.put("PFVArType2IEEEPFController", idList -> findAllById(repoPFVArType2IEEEPFController, idList));
        map.put("PFVArType2IEEEVArController", idList -> findAllById(repoPFVArType2IEEEVArController, idList));
        map.put("PetersenCoil", idList -> findAllById(repoPetersenCoil, idList));
        map.put("PhaseTapChanger", idList -> findAllById(repoPhaseTapChanger, idList));
        map.put("PhaseTapChangerAsymmetrical", idList -> findAllById(repoPhaseTapChangerAsymmetrical, idList));
        map.put("PhaseTapChangerLinear", idList -> findAllById(repoPhaseTapChangerLinear, idList));
        map.put("PhaseTapChangerNonLinear", idList -> findAllById(repoPhaseTapChangerNonLinear, idList));
        map.put("PhaseTapChangerSymmetrical", idList -> findAllById(repoPhaseTapChangerSymmetrical, idList));
        map.put("PhaseTapChangerTable", idList -> findAllById(repoPhaseTapChangerTable, idList));
        map.put("PhaseTapChangerTablePoint", idList -> findAllById(repoPhaseTapChangerTablePoint, idList));
        map.put("PhaseTapChangerTabular", idList -> findAllById(repoPhaseTapChangerTabular, idList));
        map.put("PhotoVoltaicUnit", idList -> findAllById(repoPhotoVoltaicUnit, idList));
        map.put("PositionPoint", idList -> findAllById(repoPositionPoint, idList));
        map.put("PostLineSensor", idList -> findAllById(repoPostLineSensor, idList));
        map.put("PotentialTransformer", idList -> findAllById(repoPotentialTransformer, idList));
        map.put("PowerElectronicsConnection", idList -> findAllById(repoPowerElectronicsConnection, idList));
        map.put("PowerElectronicsUnit", idList -> findAllById(repoPowerElectronicsUnit, idList));
        map.put("PowerElectronicsWindUnit", idList -> findAllById(repoPowerElectronicsWindUnit, idList));
        map.put("PowerSystemResource", idList -> findAllById(repoPowerSystemResource, idList));
        map.put("PowerSystemStabilizerDynamics", idList -> findAllById(repoPowerSystemStabilizerDynamics, idList));
        map.put("PowerSystemStabilizerUserDefined", idList -> findAllById(repoPowerSystemStabilizerUserDefined, idList));
        map.put("PowerTransformer", idList -> findAllById(repoPowerTransformer, idList));
        map.put("PowerTransformerEnd", idList -> findAllById(repoPowerTransformerEnd, idList));
        map.put("ProprietaryParameterDynamics", idList -> findAllById(repoProprietaryParameterDynamics, idList));
        map.put("ProtectedSwitch", idList -> findAllById(repoProtectedSwitch, idList));
        map.put("Pss1", idList -> findAllById(repoPss1, idList));
        map.put("Pss1A", idList -> findAllById(repoPss1A, idList));
        map.put("Pss2B", idList -> findAllById(repoPss2B, idList));
        map.put("Pss2ST", idList -> findAllById(repoPss2ST, idList));
        map.put("Pss5", idList -> findAllById(repoPss5, idList));
        map.put("PssELIN2", idList -> findAllById(repoPssELIN2, idList));
        map.put("PssIEEE1A", idList -> findAllById(repoPssIEEE1A, idList));
        map.put("PssIEEE2B", idList -> findAllById(repoPssIEEE2B, idList));
        map.put("PssIEEE3B", idList -> findAllById(repoPssIEEE3B, idList));
        map.put("PssIEEE4B", idList -> findAllById(repoPssIEEE4B, idList));
        map.put("PssPTIST1", idList -> findAllById(repoPssPTIST1, idList));
        map.put("PssPTIST3", idList -> findAllById(repoPssPTIST3, idList));
        map.put("PssRQB", idList -> findAllById(repoPssRQB, idList));
        map.put("PssSB4", idList -> findAllById(repoPssSB4, idList));
        map.put("PssSH", idList -> findAllById(repoPssSH, idList));
        map.put("PssSK", idList -> findAllById(repoPssSK, idList));
        map.put("PssSTAB2A", idList -> findAllById(repoPssSTAB2A, idList));
        map.put("PssWECC", idList -> findAllById(repoPssWECC, idList));
        map.put("Quality61850", idList -> findAllById(repoQuality61850, idList));
        map.put("RaiseLowerCommand", idList -> findAllById(repoRaiseLowerCommand, idList));
        map.put("RatioTapChanger", idList -> findAllById(repoRatioTapChanger, idList));
        map.put("RatioTapChangerTable", idList -> findAllById(repoRatioTapChangerTable, idList));
        map.put("RatioTapChangerTablePoint", idList -> findAllById(repoRatioTapChangerTablePoint, idList));
        map.put("ReactiveCapabilityCurve", idList -> findAllById(repoReactiveCapabilityCurve, idList));
        map.put("RegularIntervalSchedule", idList -> findAllById(repoRegularIntervalSchedule, idList));
        map.put("RegularTimePoint", idList -> findAllById(repoRegularTimePoint, idList));
        map.put("RegulatingCondEq", idList -> findAllById(repoRegulatingCondEq, idList));
        map.put("RegulatingControl", idList -> findAllById(repoRegulatingControl, idList));
        map.put("RegulationSchedule", idList -> findAllById(repoRegulationSchedule, idList));
        map.put("RemoteInputSignal", idList -> findAllById(repoRemoteInputSignal, idList));
        map.put("ReportingGroup", idList -> findAllById(repoReportingGroup, idList));
        map.put("RotatingMachine", idList -> findAllById(repoRotatingMachine, idList));
        map.put("RotatingMachineDynamics", idList -> findAllById(repoRotatingMachineDynamics, idList));
        map.put("SVCUserDefined", idList -> findAllById(repoSVCUserDefined, idList));
        map.put("Season", idList -> findAllById(repoSeason, idList));
        map.put("SeasonDayTypeSchedule", idList -> findAllById(repoSeasonDayTypeSchedule, idList));
        map.put("Sensor", idList -> findAllById(repoSensor, idList));
        map.put("SeriesCompensator", idList -> findAllById(repoSeriesCompensator, idList));
        map.put("ServiceLocation", idList -> findAllById(repoServiceLocation, idList));
        map.put("SetPoint", idList -> findAllById(repoSetPoint, idList));
        map.put("ShuntCompensator", idList -> findAllById(repoShuntCompensator, idList));
        map.put("SolarGeneratingUnit", idList -> findAllById(repoSolarGeneratingUnit, idList));
        map.put("SolarPowerPlant", idList -> findAllById(repoSolarPowerPlant, idList));
        map.put("StaticVarCompensator", idList -> findAllById(repoStaticVarCompensator, idList));
        map.put("StaticVarCompensatorDynamics", idList -> findAllById(repoStaticVarCompensatorDynamics, idList));
        map.put("StationSupply", idList -> findAllById(repoStationSupply, idList));
        map.put("Status", idList -> findAllById(repoStatus, idList));
        map.put("StreetAddress", idList -> findAllById(repoStreetAddress, idList));
        map.put("StreetDetail", idList -> findAllById(repoStreetDetail, idList));
        map.put("StringMeasurement", idList -> findAllById(repoStringMeasurement, idList));
        map.put("StringMeasurementValue", idList -> findAllById(repoStringMeasurementValue, idList));
        map.put("SubGeographicalRegion", idList -> findAllById(repoSubGeographicalRegion, idList));
        map.put("SubLoadArea", idList -> findAllById(repoSubLoadArea, idList));
        map.put("Substation", idList -> findAllById(repoSubstation, idList));
        map.put("SurgeArrester", idList -> findAllById(repoSurgeArrester, idList));
        map.put("SvInjection", idList -> findAllById(repoSvInjection, idList));
        map.put("SvPowerFlow", idList -> findAllById(repoSvPowerFlow, idList));
        map.put("SvShuntCompensatorSections", idList -> findAllById(repoSvShuntCompensatorSections, idList));
        map.put("SvStatus", idList -> findAllById(repoSvStatus, idList));
        map.put("SvSwitch", idList -> findAllById(repoSvSwitch, idList));
        map.put("SvTapStep", idList -> findAllById(repoSvTapStep, idList));
        map.put("SvVoltage", idList -> findAllById(repoSvVoltage, idList));
        map.put("Switch", idList -> findAllById(repoSwitch, idList));
        map.put("SwitchSchedule", idList -> findAllById(repoSwitchSchedule, idList));
        map.put("SynchronousMachine", idList -> findAllById(repoSynchronousMachine, idList));
        map.put("SynchronousMachineDetailed", idList -> findAllById(repoSynchronousMachineDetailed, idList));
        map.put("SynchronousMachineDynamics", idList -> findAllById(repoSynchronousMachineDynamics, idList));
        map.put("SynchronousMachineEquivalentCircuit", idList -> findAllById(repoSynchronousMachineEquivalentCircuit, idList));
        map.put("SynchronousMachineSimplified", idList -> findAllById(repoSynchronousMachineSimplified, idList));
        map.put("SynchronousMachineTimeConstantReactance", idList -> findAllById(repoSynchronousMachineTimeConstantReactance, idList));
        map.put("SynchronousMachineUserDefined", idList -> findAllById(repoSynchronousMachineUserDefined, idList));
        map.put("TapChanger", idList -> findAllById(repoTapChanger, idList));
        map.put("TapChangerControl", idList -> findAllById(repoTapChangerControl, idList));
        map.put("TapChangerTablePoint", idList -> findAllById(repoTapChangerTablePoint, idList));
        map.put("TapSchedule", idList -> findAllById(repoTapSchedule, idList));
        map.put("Terminal", idList -> findAllById(repoTerminal, idList));
        map.put("TextDiagramObject", idList -> findAllById(repoTextDiagramObject, idList));
        map.put("ThermalGeneratingUnit", idList -> findAllById(repoThermalGeneratingUnit, idList));
        map.put("TieFlow", idList -> findAllById(repoTieFlow, idList));
        map.put("TopologicalIsland", idList -> findAllById(repoTopologicalIsland, idList));
        map.put("TopologicalNode", idList -> findAllById(repoTopologicalNode, idList));
        map.put("TownDetail", idList -> findAllById(repoTownDetail, idList));
        map.put("TransformerEnd", idList -> findAllById(repoTransformerEnd, idList));
        map.put("TurbLCFB1", idList -> findAllById(repoTurbLCFB1, idList));
        map.put("TurbineGovernorDynamics", idList -> findAllById(repoTurbineGovernorDynamics, idList));
        map.put("TurbineGovernorUserDefined", idList -> findAllById(repoTurbineGovernorUserDefined, idList));
        map.put("TurbineLoadControllerDynamics", idList -> findAllById(repoTurbineLoadControllerDynamics, idList));
        map.put("TurbineLoadControllerUserDefined", idList -> findAllById(repoTurbineLoadControllerUserDefined, idList));
        map.put("UnderexcLim2Simplified", idList -> findAllById(repoUnderexcLim2Simplified, idList));
        map.put("UnderexcLimIEEE1", idList -> findAllById(repoUnderexcLimIEEE1, idList));
        map.put("UnderexcLimIEEE2", idList -> findAllById(repoUnderexcLimIEEE2, idList));
        map.put("UnderexcLimX1", idList -> findAllById(repoUnderexcLimX1, idList));
        map.put("UnderexcLimX2", idList -> findAllById(repoUnderexcLimX2, idList));
        map.put("UnderexcitationLimiterDynamics", idList -> findAllById(repoUnderexcitationLimiterDynamics, idList));
        map.put("UnderexcitationLimiterUserDefined", idList -> findAllById(repoUnderexcitationLimiterUserDefined, idList));
        map.put("VAdjIEEE", idList -> findAllById(repoVAdjIEEE, idList));
        map.put("VCompIEEEType1", idList -> findAllById(repoVCompIEEEType1, idList));
        map.put("VCompIEEEType2", idList -> findAllById(repoVCompIEEEType2, idList));
        map.put("VSCDynamics", idList -> findAllById(repoVSCDynamics, idList));
        map.put("VSCUserDefined", idList -> findAllById(repoVSCUserDefined, idList));
        map.put("ValueAliasSet", idList -> findAllById(repoValueAliasSet, idList));
        map.put("ValueToAlias", idList -> findAllById(repoValueToAlias, idList));
        map.put("VisibilityLayer", idList -> findAllById(repoVisibilityLayer, idList));
        map.put("VoltageAdjusterDynamics", idList -> findAllById(repoVoltageAdjusterDynamics, idList));
        map.put("VoltageAdjusterUserDefined", idList -> findAllById(repoVoltageAdjusterUserDefined, idList));
        map.put("VoltageCompensatorDynamics", idList -> findAllById(repoVoltageCompensatorDynamics, idList));
        map.put("VoltageCompensatorUserDefined", idList -> findAllById(repoVoltageCompensatorUserDefined, idList));
        map.put("VoltageLevel", idList -> findAllById(repoVoltageLevel, idList));
        map.put("VoltageLimit", idList -> findAllById(repoVoltageLimit, idList));
        map.put("VsCapabilityCurve", idList -> findAllById(repoVsCapabilityCurve, idList));
        map.put("VsConverter", idList -> findAllById(repoVsConverter, idList));
        map.put("WaveTrap", idList -> findAllById(repoWaveTrap, idList));
        map.put("WindAeroConstIEC", idList -> findAllById(repoWindAeroConstIEC, idList));
        map.put("WindAeroOneDimIEC", idList -> findAllById(repoWindAeroOneDimIEC, idList));
        map.put("WindAeroTwoDimIEC", idList -> findAllById(repoWindAeroTwoDimIEC, idList));
        map.put("WindContCurrLimIEC", idList -> findAllById(repoWindContCurrLimIEC, idList));
        map.put("WindContPType3IEC", idList -> findAllById(repoWindContPType3IEC, idList));
        map.put("WindContPType4aIEC", idList -> findAllById(repoWindContPType4aIEC, idList));
        map.put("WindContPType4bIEC", idList -> findAllById(repoWindContPType4bIEC, idList));
        map.put("WindContPitchAngleIEC", idList -> findAllById(repoWindContPitchAngleIEC, idList));
        map.put("WindContQIEC", idList -> findAllById(repoWindContQIEC, idList));
        map.put("WindContQLimIEC", idList -> findAllById(repoWindContQLimIEC, idList));
        map.put("WindContQPQULimIEC", idList -> findAllById(repoWindContQPQULimIEC, idList));
        map.put("WindContRotorRIEC", idList -> findAllById(repoWindContRotorRIEC, idList));
        map.put("WindDynamicsLookupTable", idList -> findAllById(repoWindDynamicsLookupTable, idList));
        map.put("WindGenTurbineType1aIEC", idList -> findAllById(repoWindGenTurbineType1aIEC, idList));
        map.put("WindGenTurbineType1bIEC", idList -> findAllById(repoWindGenTurbineType1bIEC, idList));
        map.put("WindGenTurbineType2IEC", idList -> findAllById(repoWindGenTurbineType2IEC, idList));
        map.put("WindGenType3IEC", idList -> findAllById(repoWindGenType3IEC, idList));
        map.put("WindGenType3aIEC", idList -> findAllById(repoWindGenType3aIEC, idList));
        map.put("WindGenType3bIEC", idList -> findAllById(repoWindGenType3bIEC, idList));
        map.put("WindGenType4IEC", idList -> findAllById(repoWindGenType4IEC, idList));
        map.put("WindGeneratingUnit", idList -> findAllById(repoWindGeneratingUnit, idList));
        map.put("WindMechIEC", idList -> findAllById(repoWindMechIEC, idList));
        map.put("WindPitchContPowerIEC", idList -> findAllById(repoWindPitchContPowerIEC, idList));
        map.put("WindPlantDynamics", idList -> findAllById(repoWindPlantDynamics, idList));
        map.put("WindPlantFreqPcontrolIEC", idList -> findAllById(repoWindPlantFreqPcontrolIEC, idList));
        map.put("WindPlantIEC", idList -> findAllById(repoWindPlantIEC, idList));
        map.put("WindPlantReactiveControlIEC", idList -> findAllById(repoWindPlantReactiveControlIEC, idList));
        map.put("WindPlantUserDefined", idList -> findAllById(repoWindPlantUserDefined, idList));
        map.put("WindPowerPlant", idList -> findAllById(repoWindPowerPlant, idList));
        map.put("WindProtectionIEC", idList -> findAllById(repoWindProtectionIEC, idList));
        map.put("WindRefFrameRotIEC", idList -> findAllById(repoWindRefFrameRotIEC, idList));
        map.put("WindTurbineType1or2Dynamics", idList -> findAllById(repoWindTurbineType1or2Dynamics, idList));
        map.put("WindTurbineType1or2IEC", idList -> findAllById(repoWindTurbineType1or2IEC, idList));
        map.put("WindTurbineType3IEC", idList -> findAllById(repoWindTurbineType3IEC, idList));
        map.put("WindTurbineType3or4Dynamics", idList -> findAllById(repoWindTurbineType3or4Dynamics, idList));
        map.put("WindTurbineType3or4IEC", idList -> findAllById(repoWindTurbineType3or4IEC, idList));
        map.put("WindTurbineType4IEC", idList -> findAllById(repoWindTurbineType4IEC, idList));
        map.put("WindTurbineType4aIEC", idList -> findAllById(repoWindTurbineType4aIEC, idList));
        map.put("WindTurbineType4bIEC", idList -> findAllById(repoWindTurbineType4bIEC, idList));
        map.put("WindType1or2UserDefined", idList -> findAllById(repoWindType1or2UserDefined, idList));
        map.put("WindType3or4UserDefined", idList -> findAllById(repoWindType3or4UserDefined, idList));
        map.put("WorkLocation", idList -> findAllById(repoWorkLocation, idList));

        READ_MAP = Collections.unmodifiableMap(map);
    }

    @SuppressWarnings("unchecked")
    private <T extends BaseClass> Iterable<BaseClass> findAllById(CrudRepository<T, Long> repo, Iterable<Long> idList) {
        return (Iterable<BaseClass>) repo.findAllById(idList);
    }

    /**
     * Map of CIM class name to function which deletes several CIM objects from the database.
     */
    private final Map<String, Consumer<Iterable<Long>>> DELETE_MAP;
    {
        var map = new LinkedHashMap<String, Consumer<Iterable<Long>>>();

        map.put("ACDCConverter", idList -> repoACDCConverter.deleteAllById(idList));
        map.put("ACDCConverterDCTerminal", idList -> repoACDCConverterDCTerminal.deleteAllById(idList));
        map.put("ACDCTerminal", idList -> repoACDCTerminal.deleteAllById(idList));
        map.put("ACLineSegment", idList -> repoACLineSegment.deleteAllById(idList));
        map.put("Accumulator", idList -> repoAccumulator.deleteAllById(idList));
        map.put("AccumulatorLimit", idList -> repoAccumulatorLimit.deleteAllById(idList));
        map.put("AccumulatorLimitSet", idList -> repoAccumulatorLimitSet.deleteAllById(idList));
        map.put("AccumulatorReset", idList -> repoAccumulatorReset.deleteAllById(idList));
        map.put("AccumulatorValue", idList -> repoAccumulatorValue.deleteAllById(idList));
        map.put("ActivePowerLimit", idList -> repoActivePowerLimit.deleteAllById(idList));
        map.put("Analog", idList -> repoAnalog.deleteAllById(idList));
        map.put("AnalogControl", idList -> repoAnalogControl.deleteAllById(idList));
        map.put("AnalogLimit", idList -> repoAnalogLimit.deleteAllById(idList));
        map.put("AnalogLimitSet", idList -> repoAnalogLimitSet.deleteAllById(idList));
        map.put("AnalogValue", idList -> repoAnalogValue.deleteAllById(idList));
        map.put("ApparentPowerLimit", idList -> repoApparentPowerLimit.deleteAllById(idList));
        map.put("AsynchronousMachine", idList -> repoAsynchronousMachine.deleteAllById(idList));
        map.put("AsynchronousMachineDynamics", idList -> repoAsynchronousMachineDynamics.deleteAllById(idList));
        map.put("AsynchronousMachineEquivalentCircuit", idList -> repoAsynchronousMachineEquivalentCircuit.deleteAllById(idList));
        map.put("AsynchronousMachineTimeConstantReactance", idList -> repoAsynchronousMachineTimeConstantReactance.deleteAllById(idList));
        map.put("AsynchronousMachineUserDefined", idList -> repoAsynchronousMachineUserDefined.deleteAllById(idList));
        map.put("AuxiliaryEquipment", idList -> repoAuxiliaryEquipment.deleteAllById(idList));
        map.put("BaseVoltage", idList -> repoBaseVoltage.deleteAllById(idList));
        map.put("BasicIntervalSchedule", idList -> repoBasicIntervalSchedule.deleteAllById(idList));
        map.put("BatteryUnit", idList -> repoBatteryUnit.deleteAllById(idList));
        map.put("Bay", idList -> repoBay.deleteAllById(idList));
        map.put("BoundaryPoint", idList -> repoBoundaryPoint.deleteAllById(idList));
        map.put("Breaker", idList -> repoBreaker.deleteAllById(idList));
        map.put("BusNameMarker", idList -> repoBusNameMarker.deleteAllById(idList));
        map.put("BusbarSection", idList -> repoBusbarSection.deleteAllById(idList));
        map.put("CAESPlant", idList -> repoCAESPlant.deleteAllById(idList));
        map.put("CSCDynamics", idList -> repoCSCDynamics.deleteAllById(idList));
        map.put("CSCUserDefined", idList -> repoCSCUserDefined.deleteAllById(idList));
        map.put("Clamp", idList -> repoClamp.deleteAllById(idList));
        map.put("CogenerationPlant", idList -> repoCogenerationPlant.deleteAllById(idList));
        map.put("CombinedCyclePlant", idList -> repoCombinedCyclePlant.deleteAllById(idList));
        map.put("Command", idList -> repoCommand.deleteAllById(idList));
        map.put("ConductingEquipment", idList -> repoConductingEquipment.deleteAllById(idList));
        map.put("Conductor", idList -> repoConductor.deleteAllById(idList));
        map.put("ConformLoad", idList -> repoConformLoad.deleteAllById(idList));
        map.put("ConformLoadGroup", idList -> repoConformLoadGroup.deleteAllById(idList));
        map.put("ConformLoadSchedule", idList -> repoConformLoadSchedule.deleteAllById(idList));
        map.put("ConnectivityNode", idList -> repoConnectivityNode.deleteAllById(idList));
        map.put("ConnectivityNodeContainer", idList -> repoConnectivityNodeContainer.deleteAllById(idList));
        map.put("Connector", idList -> repoConnector.deleteAllById(idList));
        map.put("Control", idList -> repoControl.deleteAllById(idList));
        map.put("ControlArea", idList -> repoControlArea.deleteAllById(idList));
        map.put("ControlAreaGeneratingUnit", idList -> repoControlAreaGeneratingUnit.deleteAllById(idList));
        map.put("CoordinateSystem", idList -> repoCoordinateSystem.deleteAllById(idList));
        map.put("CrossCompoundTurbineGovernorDynamics", idList -> repoCrossCompoundTurbineGovernorDynamics.deleteAllById(idList));
        map.put("CsConverter", idList -> repoCsConverter.deleteAllById(idList));
        map.put("CurrentLimit", idList -> repoCurrentLimit.deleteAllById(idList));
        map.put("CurrentTransformer", idList -> repoCurrentTransformer.deleteAllById(idList));
        map.put("Curve", idList -> repoCurve.deleteAllById(idList));
        map.put("CurveData", idList -> repoCurveData.deleteAllById(idList));
        map.put("Cut", idList -> repoCut.deleteAllById(idList));
        map.put("DCBaseTerminal", idList -> repoDCBaseTerminal.deleteAllById(idList));
        map.put("DCBreaker", idList -> repoDCBreaker.deleteAllById(idList));
        map.put("DCBusbar", idList -> repoDCBusbar.deleteAllById(idList));
        map.put("DCChopper", idList -> repoDCChopper.deleteAllById(idList));
        map.put("DCConductingEquipment", idList -> repoDCConductingEquipment.deleteAllById(idList));
        map.put("DCConverterUnit", idList -> repoDCConverterUnit.deleteAllById(idList));
        map.put("DCDisconnector", idList -> repoDCDisconnector.deleteAllById(idList));
        map.put("DCEquipmentContainer", idList -> repoDCEquipmentContainer.deleteAllById(idList));
        map.put("DCGround", idList -> repoDCGround.deleteAllById(idList));
        map.put("DCLine", idList -> repoDCLine.deleteAllById(idList));
        map.put("DCLineSegment", idList -> repoDCLineSegment.deleteAllById(idList));
        map.put("DCNode", idList -> repoDCNode.deleteAllById(idList));
        map.put("DCSeriesDevice", idList -> repoDCSeriesDevice.deleteAllById(idList));
        map.put("DCShunt", idList -> repoDCShunt.deleteAllById(idList));
        map.put("DCSwitch", idList -> repoDCSwitch.deleteAllById(idList));
        map.put("DCTerminal", idList -> repoDCTerminal.deleteAllById(idList));
        map.put("DCTopologicalIsland", idList -> repoDCTopologicalIsland.deleteAllById(idList));
        map.put("DCTopologicalNode", idList -> repoDCTopologicalNode.deleteAllById(idList));
        map.put("DayType", idList -> repoDayType.deleteAllById(idList));
        map.put("Diagram", idList -> repoDiagram.deleteAllById(idList));
        map.put("DiagramObject", idList -> repoDiagramObject.deleteAllById(idList));
        map.put("DiagramObjectGluePoint", idList -> repoDiagramObjectGluePoint.deleteAllById(idList));
        map.put("DiagramObjectPoint", idList -> repoDiagramObjectPoint.deleteAllById(idList));
        map.put("DiagramObjectStyle", idList -> repoDiagramObjectStyle.deleteAllById(idList));
        map.put("DiagramStyle", idList -> repoDiagramStyle.deleteAllById(idList));
        map.put("DiscExcContIEEEDEC1A", idList -> repoDiscExcContIEEEDEC1A.deleteAllById(idList));
        map.put("DiscExcContIEEEDEC2A", idList -> repoDiscExcContIEEEDEC2A.deleteAllById(idList));
        map.put("DiscExcContIEEEDEC3A", idList -> repoDiscExcContIEEEDEC3A.deleteAllById(idList));
        map.put("DisconnectingCircuitBreaker", idList -> repoDisconnectingCircuitBreaker.deleteAllById(idList));
        map.put("Disconnector", idList -> repoDisconnector.deleteAllById(idList));
        map.put("DiscontinuousExcitationControlDynamics", idList -> repoDiscontinuousExcitationControlDynamics.deleteAllById(idList));
        map.put("DiscontinuousExcitationControlUserDefined", idList -> repoDiscontinuousExcitationControlUserDefined.deleteAllById(idList));
        map.put("Discrete", idList -> repoDiscrete.deleteAllById(idList));
        map.put("DiscreteValue", idList -> repoDiscreteValue.deleteAllById(idList));
        map.put("DynamicsFunctionBlock", idList -> repoDynamicsFunctionBlock.deleteAllById(idList));
        map.put("EarthFaultCompensator", idList -> repoEarthFaultCompensator.deleteAllById(idList));
        map.put("EnergyArea", idList -> repoEnergyArea.deleteAllById(idList));
        map.put("EnergyConnection", idList -> repoEnergyConnection.deleteAllById(idList));
        map.put("EnergyConsumer", idList -> repoEnergyConsumer.deleteAllById(idList));
        map.put("EnergySchedulingType", idList -> repoEnergySchedulingType.deleteAllById(idList));
        map.put("EnergySource", idList -> repoEnergySource.deleteAllById(idList));
        map.put("Equipment", idList -> repoEquipment.deleteAllById(idList));
        map.put("EquipmentContainer", idList -> repoEquipmentContainer.deleteAllById(idList));
        map.put("EquivalentBranch", idList -> repoEquivalentBranch.deleteAllById(idList));
        map.put("EquivalentEquipment", idList -> repoEquivalentEquipment.deleteAllById(idList));
        map.put("EquivalentInjection", idList -> repoEquivalentInjection.deleteAllById(idList));
        map.put("EquivalentNetwork", idList -> repoEquivalentNetwork.deleteAllById(idList));
        map.put("EquivalentShunt", idList -> repoEquivalentShunt.deleteAllById(idList));
        map.put("ExcAC1A", idList -> repoExcAC1A.deleteAllById(idList));
        map.put("ExcAC2A", idList -> repoExcAC2A.deleteAllById(idList));
        map.put("ExcAC3A", idList -> repoExcAC3A.deleteAllById(idList));
        map.put("ExcAC4A", idList -> repoExcAC4A.deleteAllById(idList));
        map.put("ExcAC5A", idList -> repoExcAC5A.deleteAllById(idList));
        map.put("ExcAC6A", idList -> repoExcAC6A.deleteAllById(idList));
        map.put("ExcAC8B", idList -> repoExcAC8B.deleteAllById(idList));
        map.put("ExcANS", idList -> repoExcANS.deleteAllById(idList));
        map.put("ExcAVR1", idList -> repoExcAVR1.deleteAllById(idList));
        map.put("ExcAVR2", idList -> repoExcAVR2.deleteAllById(idList));
        map.put("ExcAVR3", idList -> repoExcAVR3.deleteAllById(idList));
        map.put("ExcAVR4", idList -> repoExcAVR4.deleteAllById(idList));
        map.put("ExcAVR5", idList -> repoExcAVR5.deleteAllById(idList));
        map.put("ExcAVR7", idList -> repoExcAVR7.deleteAllById(idList));
        map.put("ExcBBC", idList -> repoExcBBC.deleteAllById(idList));
        map.put("ExcCZ", idList -> repoExcCZ.deleteAllById(idList));
        map.put("ExcDC1A", idList -> repoExcDC1A.deleteAllById(idList));
        map.put("ExcDC2A", idList -> repoExcDC2A.deleteAllById(idList));
        map.put("ExcDC3A", idList -> repoExcDC3A.deleteAllById(idList));
        map.put("ExcDC3A1", idList -> repoExcDC3A1.deleteAllById(idList));
        map.put("ExcELIN1", idList -> repoExcELIN1.deleteAllById(idList));
        map.put("ExcELIN2", idList -> repoExcELIN2.deleteAllById(idList));
        map.put("ExcHU", idList -> repoExcHU.deleteAllById(idList));
        map.put("ExcIEEEAC1A", idList -> repoExcIEEEAC1A.deleteAllById(idList));
        map.put("ExcIEEEAC2A", idList -> repoExcIEEEAC2A.deleteAllById(idList));
        map.put("ExcIEEEAC3A", idList -> repoExcIEEEAC3A.deleteAllById(idList));
        map.put("ExcIEEEAC4A", idList -> repoExcIEEEAC4A.deleteAllById(idList));
        map.put("ExcIEEEAC5A", idList -> repoExcIEEEAC5A.deleteAllById(idList));
        map.put("ExcIEEEAC6A", idList -> repoExcIEEEAC6A.deleteAllById(idList));
        map.put("ExcIEEEAC7B", idList -> repoExcIEEEAC7B.deleteAllById(idList));
        map.put("ExcIEEEAC8B", idList -> repoExcIEEEAC8B.deleteAllById(idList));
        map.put("ExcIEEEDC1A", idList -> repoExcIEEEDC1A.deleteAllById(idList));
        map.put("ExcIEEEDC2A", idList -> repoExcIEEEDC2A.deleteAllById(idList));
        map.put("ExcIEEEDC3A", idList -> repoExcIEEEDC3A.deleteAllById(idList));
        map.put("ExcIEEEDC4B", idList -> repoExcIEEEDC4B.deleteAllById(idList));
        map.put("ExcIEEEST1A", idList -> repoExcIEEEST1A.deleteAllById(idList));
        map.put("ExcIEEEST2A", idList -> repoExcIEEEST2A.deleteAllById(idList));
        map.put("ExcIEEEST3A", idList -> repoExcIEEEST3A.deleteAllById(idList));
        map.put("ExcIEEEST4B", idList -> repoExcIEEEST4B.deleteAllById(idList));
        map.put("ExcIEEEST5B", idList -> repoExcIEEEST5B.deleteAllById(idList));
        map.put("ExcIEEEST6B", idList -> repoExcIEEEST6B.deleteAllById(idList));
        map.put("ExcIEEEST7B", idList -> repoExcIEEEST7B.deleteAllById(idList));
        map.put("ExcNI", idList -> repoExcNI.deleteAllById(idList));
        map.put("ExcOEX3T", idList -> repoExcOEX3T.deleteAllById(idList));
        map.put("ExcPIC", idList -> repoExcPIC.deleteAllById(idList));
        map.put("ExcREXS", idList -> repoExcREXS.deleteAllById(idList));
        map.put("ExcRQB", idList -> repoExcRQB.deleteAllById(idList));
        map.put("ExcSCRX", idList -> repoExcSCRX.deleteAllById(idList));
        map.put("ExcSEXS", idList -> repoExcSEXS.deleteAllById(idList));
        map.put("ExcSK", idList -> repoExcSK.deleteAllById(idList));
        map.put("ExcST1A", idList -> repoExcST1A.deleteAllById(idList));
        map.put("ExcST2A", idList -> repoExcST2A.deleteAllById(idList));
        map.put("ExcST3A", idList -> repoExcST3A.deleteAllById(idList));
        map.put("ExcST4B", idList -> repoExcST4B.deleteAllById(idList));
        map.put("ExcST6B", idList -> repoExcST6B.deleteAllById(idList));
        map.put("ExcST7B", idList -> repoExcST7B.deleteAllById(idList));
        map.put("ExcitationSystemDynamics", idList -> repoExcitationSystemDynamics.deleteAllById(idList));
        map.put("ExcitationSystemUserDefined", idList -> repoExcitationSystemUserDefined.deleteAllById(idList));
        map.put("ExternalNetworkInjection", idList -> repoExternalNetworkInjection.deleteAllById(idList));
        map.put("FaultIndicator", idList -> repoFaultIndicator.deleteAllById(idList));
        map.put("FossilFuel", idList -> repoFossilFuel.deleteAllById(idList));
        map.put("Fuse", idList -> repoFuse.deleteAllById(idList));
        map.put("GenICompensationForGenJ", idList -> repoGenICompensationForGenJ.deleteAllById(idList));
        map.put("GeneratingUnit", idList -> repoGeneratingUnit.deleteAllById(idList));
        map.put("GeographicalRegion", idList -> repoGeographicalRegion.deleteAllById(idList));
        map.put("GovCT1", idList -> repoGovCT1.deleteAllById(idList));
        map.put("GovCT2", idList -> repoGovCT2.deleteAllById(idList));
        map.put("GovGAST", idList -> repoGovGAST.deleteAllById(idList));
        map.put("GovGAST1", idList -> repoGovGAST1.deleteAllById(idList));
        map.put("GovGAST2", idList -> repoGovGAST2.deleteAllById(idList));
        map.put("GovGAST3", idList -> repoGovGAST3.deleteAllById(idList));
        map.put("GovGAST4", idList -> repoGovGAST4.deleteAllById(idList));
        map.put("GovGASTWD", idList -> repoGovGASTWD.deleteAllById(idList));
        map.put("GovHydro1", idList -> repoGovHydro1.deleteAllById(idList));
        map.put("GovHydro2", idList -> repoGovHydro2.deleteAllById(idList));
        map.put("GovHydro3", idList -> repoGovHydro3.deleteAllById(idList));
        map.put("GovHydro4", idList -> repoGovHydro4.deleteAllById(idList));
        map.put("GovHydroDD", idList -> repoGovHydroDD.deleteAllById(idList));
        map.put("GovHydroFrancis", idList -> repoGovHydroFrancis.deleteAllById(idList));
        map.put("GovHydroIEEE0", idList -> repoGovHydroIEEE0.deleteAllById(idList));
        map.put("GovHydroIEEE2", idList -> repoGovHydroIEEE2.deleteAllById(idList));
        map.put("GovHydroPID", idList -> repoGovHydroPID.deleteAllById(idList));
        map.put("GovHydroPID2", idList -> repoGovHydroPID2.deleteAllById(idList));
        map.put("GovHydroPelton", idList -> repoGovHydroPelton.deleteAllById(idList));
        map.put("GovHydroR", idList -> repoGovHydroR.deleteAllById(idList));
        map.put("GovHydroWEH", idList -> repoGovHydroWEH.deleteAllById(idList));
        map.put("GovHydroWPID", idList -> repoGovHydroWPID.deleteAllById(idList));
        map.put("GovSteam0", idList -> repoGovSteam0.deleteAllById(idList));
        map.put("GovSteam1", idList -> repoGovSteam1.deleteAllById(idList));
        map.put("GovSteam2", idList -> repoGovSteam2.deleteAllById(idList));
        map.put("GovSteamBB", idList -> repoGovSteamBB.deleteAllById(idList));
        map.put("GovSteamCC", idList -> repoGovSteamCC.deleteAllById(idList));
        map.put("GovSteamEU", idList -> repoGovSteamEU.deleteAllById(idList));
        map.put("GovSteamFV2", idList -> repoGovSteamFV2.deleteAllById(idList));
        map.put("GovSteamFV3", idList -> repoGovSteamFV3.deleteAllById(idList));
        map.put("GovSteamFV4", idList -> repoGovSteamFV4.deleteAllById(idList));
        map.put("GovSteamIEEE1", idList -> repoGovSteamIEEE1.deleteAllById(idList));
        map.put("GovSteamSGO", idList -> repoGovSteamSGO.deleteAllById(idList));
        map.put("GrossToNetActivePowerCurve", idList -> repoGrossToNetActivePowerCurve.deleteAllById(idList));
        map.put("Ground", idList -> repoGround.deleteAllById(idList));
        map.put("GroundDisconnector", idList -> repoGroundDisconnector.deleteAllById(idList));
        map.put("GroundingImpedance", idList -> repoGroundingImpedance.deleteAllById(idList));
        map.put("HVDCDynamics", idList -> repoHVDCDynamics.deleteAllById(idList));
        map.put("HydroGeneratingUnit", idList -> repoHydroGeneratingUnit.deleteAllById(idList));
        map.put("HydroPowerPlant", idList -> repoHydroPowerPlant.deleteAllById(idList));
        map.put("HydroPump", idList -> repoHydroPump.deleteAllById(idList));
        map.put("IOPoint", idList -> repoIOPoint.deleteAllById(idList));
        map.put("IdentifiedObject", idList -> repoIdentifiedObject.deleteAllById(idList));
        map.put("Jumper", idList -> repoJumper.deleteAllById(idList));
        map.put("Junction", idList -> repoJunction.deleteAllById(idList));
        map.put("Limit", idList -> repoLimit.deleteAllById(idList));
        map.put("LimitSet", idList -> repoLimitSet.deleteAllById(idList));
        map.put("Line", idList -> repoLine.deleteAllById(idList));
        map.put("LinearShuntCompensator", idList -> repoLinearShuntCompensator.deleteAllById(idList));
        map.put("LoadAggregate", idList -> repoLoadAggregate.deleteAllById(idList));
        map.put("LoadArea", idList -> repoLoadArea.deleteAllById(idList));
        map.put("LoadBreakSwitch", idList -> repoLoadBreakSwitch.deleteAllById(idList));
        map.put("LoadComposite", idList -> repoLoadComposite.deleteAllById(idList));
        map.put("LoadDynamics", idList -> repoLoadDynamics.deleteAllById(idList));
        map.put("LoadGenericNonLinear", idList -> repoLoadGenericNonLinear.deleteAllById(idList));
        map.put("LoadGroup", idList -> repoLoadGroup.deleteAllById(idList));
        map.put("LoadMotor", idList -> repoLoadMotor.deleteAllById(idList));
        map.put("LoadResponseCharacteristic", idList -> repoLoadResponseCharacteristic.deleteAllById(idList));
        map.put("LoadStatic", idList -> repoLoadStatic.deleteAllById(idList));
        map.put("LoadUserDefined", idList -> repoLoadUserDefined.deleteAllById(idList));
        map.put("Location", idList -> repoLocation.deleteAllById(idList));
        map.put("Measurement", idList -> repoMeasurement.deleteAllById(idList));
        map.put("MeasurementValue", idList -> repoMeasurementValue.deleteAllById(idList));
        map.put("MeasurementValueQuality", idList -> repoMeasurementValueQuality.deleteAllById(idList));
        map.put("MeasurementValueSource", idList -> repoMeasurementValueSource.deleteAllById(idList));
        map.put("MechLoad1", idList -> repoMechLoad1.deleteAllById(idList));
        map.put("MechanicalLoadDynamics", idList -> repoMechanicalLoadDynamics.deleteAllById(idList));
        map.put("MechanicalLoadUserDefined", idList -> repoMechanicalLoadUserDefined.deleteAllById(idList));
        map.put("MutualCoupling", idList -> repoMutualCoupling.deleteAllById(idList));
        map.put("NonConformLoad", idList -> repoNonConformLoad.deleteAllById(idList));
        map.put("NonConformLoadGroup", idList -> repoNonConformLoadGroup.deleteAllById(idList));
        map.put("NonConformLoadSchedule", idList -> repoNonConformLoadSchedule.deleteAllById(idList));
        map.put("NonlinearShuntCompensator", idList -> repoNonlinearShuntCompensator.deleteAllById(idList));
        map.put("NonlinearShuntCompensatorPoint", idList -> repoNonlinearShuntCompensatorPoint.deleteAllById(idList));
        map.put("NuclearGeneratingUnit", idList -> repoNuclearGeneratingUnit.deleteAllById(idList));
        map.put("OperationalLimit", idList -> repoOperationalLimit.deleteAllById(idList));
        map.put("OperationalLimitSet", idList -> repoOperationalLimitSet.deleteAllById(idList));
        map.put("OperationalLimitType", idList -> repoOperationalLimitType.deleteAllById(idList));
        map.put("OverexcLim2", idList -> repoOverexcLim2.deleteAllById(idList));
        map.put("OverexcLimIEEE", idList -> repoOverexcLimIEEE.deleteAllById(idList));
        map.put("OverexcLimX1", idList -> repoOverexcLimX1.deleteAllById(idList));
        map.put("OverexcLimX2", idList -> repoOverexcLimX2.deleteAllById(idList));
        map.put("OverexcitationLimiterDynamics", idList -> repoOverexcitationLimiterDynamics.deleteAllById(idList));
        map.put("OverexcitationLimiterUserDefined", idList -> repoOverexcitationLimiterUserDefined.deleteAllById(idList));
        map.put("PFVArControllerType1Dynamics", idList -> repoPFVArControllerType1Dynamics.deleteAllById(idList));
        map.put("PFVArControllerType1UserDefined", idList -> repoPFVArControllerType1UserDefined.deleteAllById(idList));
        map.put("PFVArControllerType2Dynamics", idList -> repoPFVArControllerType2Dynamics.deleteAllById(idList));
        map.put("PFVArControllerType2UserDefined", idList -> repoPFVArControllerType2UserDefined.deleteAllById(idList));
        map.put("PFVArType1IEEEPFController", idList -> repoPFVArType1IEEEPFController.deleteAllById(idList));
        map.put("PFVArType1IEEEVArController", idList -> repoPFVArType1IEEEVArController.deleteAllById(idList));
        map.put("PFVArType2Common1", idList -> repoPFVArType2Common1.deleteAllById(idList));
        map.put("PFVArType2IEEEPFController", idList -> repoPFVArType2IEEEPFController.deleteAllById(idList));
        map.put("PFVArType2IEEEVArController", idList -> repoPFVArType2IEEEVArController.deleteAllById(idList));
        map.put("PetersenCoil", idList -> repoPetersenCoil.deleteAllById(idList));
        map.put("PhaseTapChanger", idList -> repoPhaseTapChanger.deleteAllById(idList));
        map.put("PhaseTapChangerAsymmetrical", idList -> repoPhaseTapChangerAsymmetrical.deleteAllById(idList));
        map.put("PhaseTapChangerLinear", idList -> repoPhaseTapChangerLinear.deleteAllById(idList));
        map.put("PhaseTapChangerNonLinear", idList -> repoPhaseTapChangerNonLinear.deleteAllById(idList));
        map.put("PhaseTapChangerSymmetrical", idList -> repoPhaseTapChangerSymmetrical.deleteAllById(idList));
        map.put("PhaseTapChangerTable", idList -> repoPhaseTapChangerTable.deleteAllById(idList));
        map.put("PhaseTapChangerTablePoint", idList -> repoPhaseTapChangerTablePoint.deleteAllById(idList));
        map.put("PhaseTapChangerTabular", idList -> repoPhaseTapChangerTabular.deleteAllById(idList));
        map.put("PhotoVoltaicUnit", idList -> repoPhotoVoltaicUnit.deleteAllById(idList));
        map.put("PositionPoint", idList -> repoPositionPoint.deleteAllById(idList));
        map.put("PostLineSensor", idList -> repoPostLineSensor.deleteAllById(idList));
        map.put("PotentialTransformer", idList -> repoPotentialTransformer.deleteAllById(idList));
        map.put("PowerElectronicsConnection", idList -> repoPowerElectronicsConnection.deleteAllById(idList));
        map.put("PowerElectronicsUnit", idList -> repoPowerElectronicsUnit.deleteAllById(idList));
        map.put("PowerElectronicsWindUnit", idList -> repoPowerElectronicsWindUnit.deleteAllById(idList));
        map.put("PowerSystemResource", idList -> repoPowerSystemResource.deleteAllById(idList));
        map.put("PowerSystemStabilizerDynamics", idList -> repoPowerSystemStabilizerDynamics.deleteAllById(idList));
        map.put("PowerSystemStabilizerUserDefined", idList -> repoPowerSystemStabilizerUserDefined.deleteAllById(idList));
        map.put("PowerTransformer", idList -> repoPowerTransformer.deleteAllById(idList));
        map.put("PowerTransformerEnd", idList -> repoPowerTransformerEnd.deleteAllById(idList));
        map.put("ProprietaryParameterDynamics", idList -> repoProprietaryParameterDynamics.deleteAllById(idList));
        map.put("ProtectedSwitch", idList -> repoProtectedSwitch.deleteAllById(idList));
        map.put("Pss1", idList -> repoPss1.deleteAllById(idList));
        map.put("Pss1A", idList -> repoPss1A.deleteAllById(idList));
        map.put("Pss2B", idList -> repoPss2B.deleteAllById(idList));
        map.put("Pss2ST", idList -> repoPss2ST.deleteAllById(idList));
        map.put("Pss5", idList -> repoPss5.deleteAllById(idList));
        map.put("PssELIN2", idList -> repoPssELIN2.deleteAllById(idList));
        map.put("PssIEEE1A", idList -> repoPssIEEE1A.deleteAllById(idList));
        map.put("PssIEEE2B", idList -> repoPssIEEE2B.deleteAllById(idList));
        map.put("PssIEEE3B", idList -> repoPssIEEE3B.deleteAllById(idList));
        map.put("PssIEEE4B", idList -> repoPssIEEE4B.deleteAllById(idList));
        map.put("PssPTIST1", idList -> repoPssPTIST1.deleteAllById(idList));
        map.put("PssPTIST3", idList -> repoPssPTIST3.deleteAllById(idList));
        map.put("PssRQB", idList -> repoPssRQB.deleteAllById(idList));
        map.put("PssSB4", idList -> repoPssSB4.deleteAllById(idList));
        map.put("PssSH", idList -> repoPssSH.deleteAllById(idList));
        map.put("PssSK", idList -> repoPssSK.deleteAllById(idList));
        map.put("PssSTAB2A", idList -> repoPssSTAB2A.deleteAllById(idList));
        map.put("PssWECC", idList -> repoPssWECC.deleteAllById(idList));
        map.put("Quality61850", idList -> repoQuality61850.deleteAllById(idList));
        map.put("RaiseLowerCommand", idList -> repoRaiseLowerCommand.deleteAllById(idList));
        map.put("RatioTapChanger", idList -> repoRatioTapChanger.deleteAllById(idList));
        map.put("RatioTapChangerTable", idList -> repoRatioTapChangerTable.deleteAllById(idList));
        map.put("RatioTapChangerTablePoint", idList -> repoRatioTapChangerTablePoint.deleteAllById(idList));
        map.put("ReactiveCapabilityCurve", idList -> repoReactiveCapabilityCurve.deleteAllById(idList));
        map.put("RegularIntervalSchedule", idList -> repoRegularIntervalSchedule.deleteAllById(idList));
        map.put("RegularTimePoint", idList -> repoRegularTimePoint.deleteAllById(idList));
        map.put("RegulatingCondEq", idList -> repoRegulatingCondEq.deleteAllById(idList));
        map.put("RegulatingControl", idList -> repoRegulatingControl.deleteAllById(idList));
        map.put("RegulationSchedule", idList -> repoRegulationSchedule.deleteAllById(idList));
        map.put("RemoteInputSignal", idList -> repoRemoteInputSignal.deleteAllById(idList));
        map.put("ReportingGroup", idList -> repoReportingGroup.deleteAllById(idList));
        map.put("RotatingMachine", idList -> repoRotatingMachine.deleteAllById(idList));
        map.put("RotatingMachineDynamics", idList -> repoRotatingMachineDynamics.deleteAllById(idList));
        map.put("SVCUserDefined", idList -> repoSVCUserDefined.deleteAllById(idList));
        map.put("Season", idList -> repoSeason.deleteAllById(idList));
        map.put("SeasonDayTypeSchedule", idList -> repoSeasonDayTypeSchedule.deleteAllById(idList));
        map.put("Sensor", idList -> repoSensor.deleteAllById(idList));
        map.put("SeriesCompensator", idList -> repoSeriesCompensator.deleteAllById(idList));
        map.put("ServiceLocation", idList -> repoServiceLocation.deleteAllById(idList));
        map.put("SetPoint", idList -> repoSetPoint.deleteAllById(idList));
        map.put("ShuntCompensator", idList -> repoShuntCompensator.deleteAllById(idList));
        map.put("SolarGeneratingUnit", idList -> repoSolarGeneratingUnit.deleteAllById(idList));
        map.put("SolarPowerPlant", idList -> repoSolarPowerPlant.deleteAllById(idList));
        map.put("StaticVarCompensator", idList -> repoStaticVarCompensator.deleteAllById(idList));
        map.put("StaticVarCompensatorDynamics", idList -> repoStaticVarCompensatorDynamics.deleteAllById(idList));
        map.put("StationSupply", idList -> repoStationSupply.deleteAllById(idList));
        map.put("Status", idList -> repoStatus.deleteAllById(idList));
        map.put("StreetAddress", idList -> repoStreetAddress.deleteAllById(idList));
        map.put("StreetDetail", idList -> repoStreetDetail.deleteAllById(idList));
        map.put("StringMeasurement", idList -> repoStringMeasurement.deleteAllById(idList));
        map.put("StringMeasurementValue", idList -> repoStringMeasurementValue.deleteAllById(idList));
        map.put("SubGeographicalRegion", idList -> repoSubGeographicalRegion.deleteAllById(idList));
        map.put("SubLoadArea", idList -> repoSubLoadArea.deleteAllById(idList));
        map.put("Substation", idList -> repoSubstation.deleteAllById(idList));
        map.put("SurgeArrester", idList -> repoSurgeArrester.deleteAllById(idList));
        map.put("SvInjection", idList -> repoSvInjection.deleteAllById(idList));
        map.put("SvPowerFlow", idList -> repoSvPowerFlow.deleteAllById(idList));
        map.put("SvShuntCompensatorSections", idList -> repoSvShuntCompensatorSections.deleteAllById(idList));
        map.put("SvStatus", idList -> repoSvStatus.deleteAllById(idList));
        map.put("SvSwitch", idList -> repoSvSwitch.deleteAllById(idList));
        map.put("SvTapStep", idList -> repoSvTapStep.deleteAllById(idList));
        map.put("SvVoltage", idList -> repoSvVoltage.deleteAllById(idList));
        map.put("Switch", idList -> repoSwitch.deleteAllById(idList));
        map.put("SwitchSchedule", idList -> repoSwitchSchedule.deleteAllById(idList));
        map.put("SynchronousMachine", idList -> repoSynchronousMachine.deleteAllById(idList));
        map.put("SynchronousMachineDetailed", idList -> repoSynchronousMachineDetailed.deleteAllById(idList));
        map.put("SynchronousMachineDynamics", idList -> repoSynchronousMachineDynamics.deleteAllById(idList));
        map.put("SynchronousMachineEquivalentCircuit", idList -> repoSynchronousMachineEquivalentCircuit.deleteAllById(idList));
        map.put("SynchronousMachineSimplified", idList -> repoSynchronousMachineSimplified.deleteAllById(idList));
        map.put("SynchronousMachineTimeConstantReactance", idList -> repoSynchronousMachineTimeConstantReactance.deleteAllById(idList));
        map.put("SynchronousMachineUserDefined", idList -> repoSynchronousMachineUserDefined.deleteAllById(idList));
        map.put("TapChanger", idList -> repoTapChanger.deleteAllById(idList));
        map.put("TapChangerControl", idList -> repoTapChangerControl.deleteAllById(idList));
        map.put("TapChangerTablePoint", idList -> repoTapChangerTablePoint.deleteAllById(idList));
        map.put("TapSchedule", idList -> repoTapSchedule.deleteAllById(idList));
        map.put("Terminal", idList -> repoTerminal.deleteAllById(idList));
        map.put("TextDiagramObject", idList -> repoTextDiagramObject.deleteAllById(idList));
        map.put("ThermalGeneratingUnit", idList -> repoThermalGeneratingUnit.deleteAllById(idList));
        map.put("TieFlow", idList -> repoTieFlow.deleteAllById(idList));
        map.put("TopologicalIsland", idList -> repoTopologicalIsland.deleteAllById(idList));
        map.put("TopologicalNode", idList -> repoTopologicalNode.deleteAllById(idList));
        map.put("TownDetail", idList -> repoTownDetail.deleteAllById(idList));
        map.put("TransformerEnd", idList -> repoTransformerEnd.deleteAllById(idList));
        map.put("TurbLCFB1", idList -> repoTurbLCFB1.deleteAllById(idList));
        map.put("TurbineGovernorDynamics", idList -> repoTurbineGovernorDynamics.deleteAllById(idList));
        map.put("TurbineGovernorUserDefined", idList -> repoTurbineGovernorUserDefined.deleteAllById(idList));
        map.put("TurbineLoadControllerDynamics", idList -> repoTurbineLoadControllerDynamics.deleteAllById(idList));
        map.put("TurbineLoadControllerUserDefined", idList -> repoTurbineLoadControllerUserDefined.deleteAllById(idList));
        map.put("UnderexcLim2Simplified", idList -> repoUnderexcLim2Simplified.deleteAllById(idList));
        map.put("UnderexcLimIEEE1", idList -> repoUnderexcLimIEEE1.deleteAllById(idList));
        map.put("UnderexcLimIEEE2", idList -> repoUnderexcLimIEEE2.deleteAllById(idList));
        map.put("UnderexcLimX1", idList -> repoUnderexcLimX1.deleteAllById(idList));
        map.put("UnderexcLimX2", idList -> repoUnderexcLimX2.deleteAllById(idList));
        map.put("UnderexcitationLimiterDynamics", idList -> repoUnderexcitationLimiterDynamics.deleteAllById(idList));
        map.put("UnderexcitationLimiterUserDefined", idList -> repoUnderexcitationLimiterUserDefined.deleteAllById(idList));
        map.put("VAdjIEEE", idList -> repoVAdjIEEE.deleteAllById(idList));
        map.put("VCompIEEEType1", idList -> repoVCompIEEEType1.deleteAllById(idList));
        map.put("VCompIEEEType2", idList -> repoVCompIEEEType2.deleteAllById(idList));
        map.put("VSCDynamics", idList -> repoVSCDynamics.deleteAllById(idList));
        map.put("VSCUserDefined", idList -> repoVSCUserDefined.deleteAllById(idList));
        map.put("ValueAliasSet", idList -> repoValueAliasSet.deleteAllById(idList));
        map.put("ValueToAlias", idList -> repoValueToAlias.deleteAllById(idList));
        map.put("VisibilityLayer", idList -> repoVisibilityLayer.deleteAllById(idList));
        map.put("VoltageAdjusterDynamics", idList -> repoVoltageAdjusterDynamics.deleteAllById(idList));
        map.put("VoltageAdjusterUserDefined", idList -> repoVoltageAdjusterUserDefined.deleteAllById(idList));
        map.put("VoltageCompensatorDynamics", idList -> repoVoltageCompensatorDynamics.deleteAllById(idList));
        map.put("VoltageCompensatorUserDefined", idList -> repoVoltageCompensatorUserDefined.deleteAllById(idList));
        map.put("VoltageLevel", idList -> repoVoltageLevel.deleteAllById(idList));
        map.put("VoltageLimit", idList -> repoVoltageLimit.deleteAllById(idList));
        map.put("VsCapabilityCurve", idList -> repoVsCapabilityCurve.deleteAllById(idList));
        map.put("VsConverter", idList -> repoVsConverter.deleteAllById(idList));
        map.put("WaveTrap", idList -> repoWaveTrap.deleteAllById(idList));
        map.put("WindAeroConstIEC", idList -> repoWindAeroConstIEC.deleteAllById(idList));
        map.put("WindAeroOneDimIEC", idList -> repoWindAeroOneDimIEC.deleteAllById(idList));
        map.put("WindAeroTwoDimIEC", idList -> repoWindAeroTwoDimIEC.deleteAllById(idList));
        map.put("WindContCurrLimIEC", idList -> repoWindContCurrLimIEC.deleteAllById(idList));
        map.put("WindContPType3IEC", idList -> repoWindContPType3IEC.deleteAllById(idList));
        map.put("WindContPType4aIEC", idList -> repoWindContPType4aIEC.deleteAllById(idList));
        map.put("WindContPType4bIEC", idList -> repoWindContPType4bIEC.deleteAllById(idList));
        map.put("WindContPitchAngleIEC", idList -> repoWindContPitchAngleIEC.deleteAllById(idList));
        map.put("WindContQIEC", idList -> repoWindContQIEC.deleteAllById(idList));
        map.put("WindContQLimIEC", idList -> repoWindContQLimIEC.deleteAllById(idList));
        map.put("WindContQPQULimIEC", idList -> repoWindContQPQULimIEC.deleteAllById(idList));
        map.put("WindContRotorRIEC", idList -> repoWindContRotorRIEC.deleteAllById(idList));
        map.put("WindDynamicsLookupTable", idList -> repoWindDynamicsLookupTable.deleteAllById(idList));
        map.put("WindGenTurbineType1aIEC", idList -> repoWindGenTurbineType1aIEC.deleteAllById(idList));
        map.put("WindGenTurbineType1bIEC", idList -> repoWindGenTurbineType1bIEC.deleteAllById(idList));
        map.put("WindGenTurbineType2IEC", idList -> repoWindGenTurbineType2IEC.deleteAllById(idList));
        map.put("WindGenType3IEC", idList -> repoWindGenType3IEC.deleteAllById(idList));
        map.put("WindGenType3aIEC", idList -> repoWindGenType3aIEC.deleteAllById(idList));
        map.put("WindGenType3bIEC", idList -> repoWindGenType3bIEC.deleteAllById(idList));
        map.put("WindGenType4IEC", idList -> repoWindGenType4IEC.deleteAllById(idList));
        map.put("WindGeneratingUnit", idList -> repoWindGeneratingUnit.deleteAllById(idList));
        map.put("WindMechIEC", idList -> repoWindMechIEC.deleteAllById(idList));
        map.put("WindPitchContPowerIEC", idList -> repoWindPitchContPowerIEC.deleteAllById(idList));
        map.put("WindPlantDynamics", idList -> repoWindPlantDynamics.deleteAllById(idList));
        map.put("WindPlantFreqPcontrolIEC", idList -> repoWindPlantFreqPcontrolIEC.deleteAllById(idList));
        map.put("WindPlantIEC", idList -> repoWindPlantIEC.deleteAllById(idList));
        map.put("WindPlantReactiveControlIEC", idList -> repoWindPlantReactiveControlIEC.deleteAllById(idList));
        map.put("WindPlantUserDefined", idList -> repoWindPlantUserDefined.deleteAllById(idList));
        map.put("WindPowerPlant", idList -> repoWindPowerPlant.deleteAllById(idList));
        map.put("WindProtectionIEC", idList -> repoWindProtectionIEC.deleteAllById(idList));
        map.put("WindRefFrameRotIEC", idList -> repoWindRefFrameRotIEC.deleteAllById(idList));
        map.put("WindTurbineType1or2Dynamics", idList -> repoWindTurbineType1or2Dynamics.deleteAllById(idList));
        map.put("WindTurbineType1or2IEC", idList -> repoWindTurbineType1or2IEC.deleteAllById(idList));
        map.put("WindTurbineType3IEC", idList -> repoWindTurbineType3IEC.deleteAllById(idList));
        map.put("WindTurbineType3or4Dynamics", idList -> repoWindTurbineType3or4Dynamics.deleteAllById(idList));
        map.put("WindTurbineType3or4IEC", idList -> repoWindTurbineType3or4IEC.deleteAllById(idList));
        map.put("WindTurbineType4IEC", idList -> repoWindTurbineType4IEC.deleteAllById(idList));
        map.put("WindTurbineType4aIEC", idList -> repoWindTurbineType4aIEC.deleteAllById(idList));
        map.put("WindTurbineType4bIEC", idList -> repoWindTurbineType4bIEC.deleteAllById(idList));
        map.put("WindType1or2UserDefined", idList -> repoWindType1or2UserDefined.deleteAllById(idList));
        map.put("WindType3or4UserDefined", idList -> repoWindType3or4UserDefined.deleteAllById(idList));
        map.put("WorkLocation", idList -> repoWorkLocation.deleteAllById(idList));

        DELETE_MAP = Collections.unmodifiableMap(map);
    }
}
